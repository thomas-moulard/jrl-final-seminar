%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Japanese
%%Title: exp-torque-smartsuit.eps
%%Creator: Adobe Illustrator(R) 16.0
%%For: Yoshida
%%CreationDate: 9/15/2012
%%BoundingBox: 0 0 652 464
%%HiResBoundingBox: 0 0 651.1485 463.7110
%%CropBox: 0 0 651.1485 463.7110
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 16.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 16.0.1 x682 R agm 4.6676 ct 5.2594%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 92 8%%BeginData: 11253 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FD0CFF7DA8FF7DFD7CFF7D7D7D527DFFFFFFA8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8
%FFA8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8FFA8A8A8
%FFA8A8A8FFA8AFA8FFA8CAA8FFA8A8A8FFA8A8A8FFA8FFA8FFA8A8A8FFA8
%A8A8FFA8A8A8FD10FFFD047DFFFF527D7DA87D7D7DA87D7D7DA87D7D7DA8
%7DA87DA87D7D7DA87DA852FD047DA87DA87DA8FD057DA87DA87D7D7DA87D
%A87DA87D7D7DA87DA87DA87D7D7DA87D7D52A87DA87DA87DA17DA87D8476
%767DA87DA87DA87DA87DA87DA8527D7DA87D7D7DA87D7D7DA87D527DFD0E
%FF527D7D52A8FFA87DFD0CFFA8FD0CFFA8A8FD0BFFA8FD0DFFA8FD0CFFA8
%FD09FFCAFFC39AFFCAFD0AFFA8FD0CFF7D7DFD0FFFA8FD05FF7DFD49FFCA
%CABCBCC3CABCBCCAFD16FFA87DFD14FFA87DFD18FFCAFD0DFFA8FD22FFCA
%BCCACAFFA8C3CAC3BCFFFFFFCAFD11FF7DA8FD15FF7DFD18FFCACAFD2EFF
%C3CACAFFFFAFFD04FFCAC3FFC3C3FD04FFA8FD0CFFA87DFD14FFA87DFD09
%FFCAC3FFA8FFC3FD07FFCACAC3FD04CAFD09FFA8FD0DFFA8FD0BFFA8FD07
%FF9AA089AE64895EAEAEFFFFBCB5C3CACAFD04FFA8FD0BFF7DA8FD15FF7D
%FD07FFCAFFCABCFFFFFFC3CAFFCAC3FD04FFBCC3BCC3BCBCC3FD2AFFA682
%6464FFFF89646489FFCAFFCAFFCAFD10FFA87DFD14FFA87DFD04FFC3BCC3
%BCC3CAC3CABCCACABCBCC3BCCAFFFFFFBCC3FFFFFFCAC3C3FD15FFA8FD0B
%FFA8FD06FFCB828A89FFFFFFCBFFFF8964FFFFFFCACAFD04FFA8FD0BFF7D
%A8FD15FF7DFD04FFC3C3CAC3BCC3FFC3BCBCFFCAFFFFFFC3FFFFCACAFFAF
%FD04FFC3C3FD21FFA8FD05FFC3AD64FD08FF8989FFFFFFCAC3FD0FFFA87D
%FD14FFA87DFFFFCAC3CAFD07FFA8C3A8FD04FFCACAFFBCFFFFAE83FFFFFF
%CAC3FD06FFA8FD0DFFA8FD11FFC3BC8389FD04FFA8FD04FFAEAEFFFFCABC
%BCFD05FFCAC3FD07FF7DA8FD11FF7DFFFFFF7DFFFFC3BCFFFFFFAEFD06FF
%AE89FFAEFFCACAFFCAFFFF64AEFD04FFCAFD26FFCA9FAEFD0AFFAEFD05FF
%BCC3FFFFCAFFC3C3FD04FFCAFFFFA87DFD10FF7D527DFFA884FFC3CAFFAE
%89FD056489AEFF8989AE648988A1CAC4AE6464898964AEFFCACAFD05FFA8
%FD0DFFA8FD11FF827BA8FD05FFA8FD04FFAE89FD05FFC3C3CABCBCCACAC3
%C3CABCBCBCFF84A8FD10FF7D7DA8FFFF76C3C3FFAE89AE895EFFAEFFA889
%89AEA889AE8989A7BCCA898983FF83FF6489CBC3BCFFAFFFFFFFA8FFFFFF
%A8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFCBA67BAE
%FD06FFA8FFFFFFA8896489A8FFFFFFC3BDCAC4CBFFCAC4C3C4CACBA27D7D
%FD10FF7D52A8FFA876CBFFFFAE83FFFFFFCBFFFFFFA864AEFFA8FFFFFF83
%FF89AECBFFCBFFCBFF64AECABCC3FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FF7C65A8FFFFFFA8FFA8FFA8
%FFFFFFA8AE89AE83AE89AE5E8989AECBAE8AFFAEAFAEAF7DA8FD11FFA8FF
%FFFF7DFFFFFFAEFD09FFAEFD07FF8989FD07FFAE89FFFFCAFD23FFA764FD
%0FFF64FD0589AEFFFD048964898989AEA87DFD14FFA85864648989FD08FF
%A8FD07FFAE89AEFD08FFAEAEFFC3FFFFFFA8FD0DFFA8FD0BFFA8FD05FFA7
%FD07FFA8FD0BFFAEFFCBFFFFAEAEFD07FF7DA8FD15FF33AEAEAE89FD10FF
%AE89FFFFFFA8FD05FFAEFFFFFFC3FD21FFCFADFD21FFA87DFD14FFA87DFD
%0CFFA8FD07FFAEAEFD04FFA8FD04FFAEAEFFFFBCBCFFA8FD0DFFA8FD10FF
%CF83FD07FFA8FD19FF7DA8FD15FF7DFD19FFA8FD05FFAE89FFFFFFBCBCFD
%1FFFA1ADFD21FFA87DFD08FFA8FD0BFFA87DFD20FF89AEAEFFCABCA8FD1E
%FFA7A7FD07FFA8FD19FF7DA8FD05FFA87D527D52A8FD0AFF7DFD21FF64AE
%FFFFCACAFD1EFFA6FD15FFA8FD0CFFA87DFD06FFA8FFFFFFA8FD09FFA87D
%FD0CFFA8FD13FFAE8989FFFFFFA1FD0DFFA8FD0BFFA8FFFFFFB69FAFFD07
%FFA8FD0DFFA8FD0BFF7DA8FD07FFA87DA8FD07FFA8FFFFFF7DFD22FFAEFF
%FFFFCAFD1DFFC382FD22FFA87DFD06FFA85252A8FD04FF527D7D52A8FFA8
%7DFD0CFFA8FD15FFAEAEFFFFC3FD0DFFA8FD0FFFA7AEFD08FFA8FD19FF7D
%A8FD07FF527DA8FFFFFFA8FF527D7DA8FFFF7DFD19FFA8FD09FF89FFFFCA
%CAFD19FFA8FFCACA8AFD15FFA8FD0CFF7D7DFD06FF7D5252A8FFFF7DA87D
%7D527D7DFFA87DA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8A8A8FFA8FFA8FFA8FFA86483FFA1CAA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8CBA1AEA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF527DFD05FFA87D5252
%A8FD04FF7D7DFF7DFFFFFF7DFD24FF89AEFFCAFD1CFF88AEFD22FFA87DFD
%06FFA852A8FD0BFFA87DFD0CFFA8FD0DFFA8FD09FFAEAECACAFD0CFFA8FD
%0FFF39AEFD08FFA8FD19FF7DA8FD05FFA8527D7D7DFD0BFF7DFD25FF89CF
%C4FD1BFFA8ADFD16FFA8FD0CFFA87DFD06FFA8FFA8A8A8FD09FFA87DFD0C
%FFA8FD18FFAE83CACAFD0BFFA8FD0BFFA8FFCAC983FD09FFA8FD0DFFA8FD
%0BFF7DA8FD05FFA87D7D7D52A8FD0AFF7DFD26FFADC3BCFD19FFCA99CFFD
%16FFA8FD0CFFA87DFD08FFA8FD0BFFA87DFD0CFFA8FD19FF83C2C3CAFD0A
%FFA8FD0BFFA8FFC399AEFD09FFA8FD0DFFA8FD0BFF7DA8FD07FF52A87DFD
%0BFF7DFD19FFA8FD0CFFAE9AFFCAFD18FFCA82FD24FFA87DFD07FF7D27A8
%FD0AFFA87DFD0CFFA8FD0DFFA8FD0BFF83CACACAFD0AFFA8FD0DFFA189FD
%0AFFA8FD19FF7DA8FD07FF5252A8FD0BFF7DFD26FFAEFFFFCAFFCAFD15FF
%CACAAEFD24FFA87DFD06FFA87D52A8FD04FFA8A8A87DFFFFA87DFD0CFFA8
%FD19FF83FFFFCAC3FCC3FD07FFA8FD0CFFCBA7FD0BFFA8FD19FF7DA8FD07
%FF527D7DFD04FF7D7DA852A8FFFF7DFD26FFAEAEFFCACABCCAFD14FFCAA7
%AEFD17FFA8FD0CFFA87DFD06FFA87D52527DFF7D7D27527D7D7DFFA852A8
%FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%FFA8FFA8FFA8FF83AEA9CAC3FF9AC3AFFFA8FFA8FFA8FFA8FFA8C3A1C3A8
%FFA8FFA8CA7CAEA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8
%A8A8FFA8FFA8FFA8FFA8FFA8FF52A8FD07FF7D7DA8FFFFFFA8A87DA852FF
%FFFF7DFD27FFAEFFC3CAFFC3BCFD0BFFBCC3C3FD05FFCAA7FD25FFA87DFD
%06FFA8527DA8FD0AFFA87DFD0CFFA8FD19FFA8AEFFCAC3FFFFC3BCFFFFFF
%C3FFA8FFB5BCCABCBCCAFD06FFA6FD0BFFA8FD19FF7DA8FD07FF2752A8FD
%0BFF7DFD19FFA8FD0DFF89AECAFFFFFFC3FCCAFFFFC3FFFFCABCBCB5C3BC
%CAFD05FFCAA7FD25FFA87DFD06FFA87D7DA8FD0AFFA87DFD0CFFA8FD0DFF
%A8FD0BFFA8AE64AEFD04FFC3CAFFC3C3FFA8BCC3CABCFFC3CACAFD04FFCA
%7CFD0BFFA8FD19FF7D7DFD07FF7D7DA8FD0BFF7DFD27FF89AEAEFD05FFC3
%BCBCCABCC3C3FD05FFCAFD05FFCAAEFD25FFA87DFD06FF7D5252A8FD0AFF
%A87DFD0CFFA8FD19FFA88989AEAEFD04FFCAFCC3CAB5FCCAFD05FFCACAFD
%04FFCA82FD0BFFA8FD19FF7DA8FD15FF7DFD27FF89FFAEAE89FD04FFC3CA
%FFCAC3FD06FFCAC3CAFFFFFFA789FD18FFA8FD0CFFA87DFD06FFA87D7DFD
%0BFFA87DFD0CFFA8FD19FFA8FFAEAE8989FD04FFCAFFFFFFA1FD06FFCABC
%CAFFFFCA9AA7FD0BFFA8FD0DFFA8FD0BFF7DA8FD07FF7D7D7DFD0BFF7DFD
%29FFAEAEAEFD0FFFC3BCCAFFFFCA92FD26FFA8A8FD07FF7D27FD05FFA8A8
%A87DFFFFA87DFD0CFFA8FD19FFA8FFFFAE8989AEFD07FFA8FD06FFCABCCA
%FFFFC3A7AFFD0BFFA8FD0DFFA8FD0BFF7DA8FD07FF527DA8FD04FF27527D
%52A8FFFF7DFD19FFA8FD0FFF89AE89FD10FFCAC9C9FFCA83FD26FFA87DFD
%06FFA87D7DA8FFFF7D7D527D52A87DFFA87DA8FFA8FFA8FFA8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFCB89
%83AEA8FFA8FFA8FFA8FFA8AE83FFA8FFA8FFA8C97BFFC383A8FFA8FFA8FF
%A8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FFA8FF
%A8FF527DFD07FF527DA8FFFFFFA87D7DA852FFFFFF7DFD19FFA8FD0FFF89
%AEFFAEFD08FF8989FD06FFA188ADC383FD26FFA87DFD07FF7D52FD05FFA8
%FD05FFA87DFD0CFFA8FD0DFFA8FD0BFFA8FFFF8989FF89AEFD06FFCBAE89
%FD06FFC33964A1AEAEFD0BFFA8FD19FF7DA8FD07FF7D7D7DFD0BFF7DFD29
%FF89AEFF8964FD07FFAEAEAEFD05FFA0A75DAD89FD26FFA87DFD05FFA87D
%A852FD0BFFA87DFD0CFFA8FD19FFA8FFFFAE89FF8989FFFFAEAEFFFFA8AE
%89FD06FFAEA77B5D64FD0CFFA8FD0DFFA8FD0BFF7DA8FD05FFA8FD047DFD
%0BFF7DFD2DFFAEFFFFFF89FFFFFFAEAE64FD05FFAECF576489FD19FFA8FD
%0CFFA87DFD05FFA87DFFA8FD0BFFA87DFD0CFFA8FD19FFA8FD06FFAE3F89
%FF64AEFFA8AEFF64AEFF89FFAEAEAE825DAEFD0CFFA8FD19FF7DA8FD15FF
%7DFD19FFA8FD14FF6464FF3FAEFFAE89FFAEFFFF89FF8964FF8989FD27FF
%A87DFD14FFA87DFD0CFFA8FD0DFFA8FD0BFFA8FD08FF89896489FFA8AEFF
%AEAEFF64FF64AEFFFFAEFD0DFFA8FD19FF7DA8FD15FF7DFD19FFA8FD15FF
%AE89AEFFFFAEAEFFAEAE89AEAEAEFD2BFFA87DFD0EFFA8FD05FFA87DFD0C
%FFA8FD19FFA8FD09FF89FF89FF64FFFFFF8964AE6489FD11FFA8FD19FF7D
%A8FD0EFF527DA852FFFFFF7DFD2FFFAE89FF89FF89FFFFAEAE64AE3FFD1F
%FFA8FD0CFFA87DFD0CFFA8A852FD047DFFA87DA8FFFFFFA8FFFFFFA8FFFF
%FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFA8FFA8FFFFFFA8FFFFFFA8FFA8FFA8
%FFFFFFA8FFFFAE83FF89AE83FFFFAE3FAEAE89A8FFFFFFA8FD07FFA8FFFF
%FFA8FFA8FFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFFA8FFFFFF52
%A8FD0CFFA87D7D527D52A8FFFF52FD07FFA8FD11FFA8FFA8FFFFFFA8FD07
%FFA8FFFFFFA8FFFFFFA8FFFFAE89AEFFFFAE3FAEFD05FFA8FFFFFF527D7D
%7DA8FD05FFA8FD09FFAFFD0BFFAFFFFFFFA87D7DFD0EFF7DA8A87DFFFFA8
%7DFD0CFFA8FD19FFA8FD0BFFAE89A8FFFFFF64FD0AFF52527D7DA87DFF7D
%A8527D7D7DA8A852FD05FFCAFFCAFFCAFFCAFFCAFFCAFD05FF7DA8FD15FF
%7DFD19FFA8FD19FF64AEFFFFFFAEAEFD09FF7D5227FF7D275252527D7D7D
%527D5252FD04FFFD0CCAFD05FFA87DFD14FFA87DFD0CFFA8FD0DFFA8FD0B
%FFA8FD0BFFAE6489FFFFFF89FD0AFFA827527DA8527D27527D7D5252527D
%52FD15FF7DA8FD15FF7DFD33FF8989FD08FFA8FD0FFFA8FFFFFF527DFD15
%FFA87DFD14FFA87DFD0CFFA8FD0DFFA8FD0BFFA8FD0DFFA8FD06FF527D7D
%7DFFFFA8A8FFA8FFA8FFFFFFA8FFA8A8A8FFFFA8A8FD15FF7DA8FD15FF7D
%FD3BFFA87D7DA8527D52FF7D52527D527DFD04527D7D52A8277DFD04FFAE
%FFFFFFAEFFFFFFAEFD08FFA87DFD14FFA87DFD0CFFA8FD19FFA8FD0DFFA8
%FD06FF7D7DFD04527DA8A8F8277D27FD04527D527D525252A8FFFFFFAEAE
%89AEAEAE89AEAEAE89AEAEFD05FF7DA8FD15FF7DFD3BFF7DFFA8FF7DFFA8
%FFFFA87DFF7DA87DA87DA8FD047D52A8FD15FFA87DFD14FFA87DFD0CFFA8
%FD19FFA8FD0DFFA8FD1BFFA87DA8FD15FF7DA8FD0BFFA8A8FF7DA8FF7DFF
%FFFF7DFD41FFA8FD26FFA87DFD0CFF52A8527D527D7DFFA87DA8A8A8FFA8
%A8A8FFFD04A87DA8A8FFA8A8A8FFA8A8A8FFA87D7DFFA8A8A8FFA8A8A8FF
%A8FF7DFD04A8FFA8A8A8FFFD04A87DFFA8FFA8A8A8FFA8A8A8FFA87DA8FF
%A8A8A8FFA8A8A8FFA8FF7DFD04A8FFA8A8A8FFA8A8A87DA8A8A8FFA8A8A8
%FFA8A8A8FF527DFD0AFF7DFD04A87D7D7DA8FFFF7D7D7DA87DA87DA87DA8
%7DA87D7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87D7D7DA87DA8
%7DA87DA87DA87DA87D7D7DA87DA87DA87DA87DA87DA87DA87DA87DA87DA8
%7DA87DA87D7DA8FD0AFFA8A827A8527D7D52A8FD7EFFA8FD47FFA8FD27FF
%A8FD13FF5252FD0BFF5252FD0CFF52FD0CFF527DFD0AFFA8277DFD0AFF52
%FF7D52A8FD08FF7D7DA827A8FD08FF7D7DFF7DA8FD08FFA852FF527DFD13
%FF7DA8A8FD0BFF7DFD0BFFA852A8FD0AFFA827A8FD0AFFA8527DFD0AFF7D
%A8A87DA8FD08FFA8A8FFA8A8FD09FF7DFF27A8FD08FFA8A8A8527DFD12FF
%A87D52FD0BFF7D7DA8FD0AFFA827A8FD0AFF7D7D52FD0AFFA8277DFD0AFF
%52A87D52A8FD08FF7D7DFF52A8FD08FFA852A8277DFD08FFA852A8527DFD
%13FF7DA8FD0BFF7D7DFD19FF7DFD0CFF7DA8FD0AFF7DA8A87DFD09FF7DA8
%A87DA8FD08FFA87DFFA8FD09FFA87DFF7DA8FDFCFFFD44FFA8A8A8FD09FF
%A8FD73FFA827527DFFFFFFA8FFFFFFA852FFFF52A8FD70FFA8A87DFD0452
%7D27A8A87DA87DA87DFD70FF7DA87D7D527D525227FFA8A8A87D7DA8FD70
%FF7D7DA87D7D527D7D7DFFA852FF7D7D7DFD7AFFA87DFFFF7DA8FDAEFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 32 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 32 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=400 GradRes=200 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.3-c011 66.145661, 2012/02/06-14:56:27        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/">
         <xmp:CreatorTool>Adobe Illustrator CS6 (Windows)</xmp:CreatorTool>
         <xmp:CreateDate>2012-09-15T00:14:31+09:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>184</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAuAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FXEhQWY0A3JPQDF&#xA;Xgd/5n0wRahHYecLufyoNSC3OpJqUktxDMunXQVTdI/qQxz31spSKqqzUCr6ciqyr1afzDrOm+R9&#xA;N1S5s1udbuF023mtJXNsn1u/mhtm5uscpRUknq1IzsOmKqi335h0+LRNIB8Bq1yf+7aMVb+vfmF/&#xA;1ZdJ/wC4rc/947FXfXvzC/6suk/9xW5/7x2Koew1rz/e2q3CaDpcasWXhJqlyGBRihqP0d4riqI+&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2012-09-15T00:14:31+09:00</xmp:MetadataDate>
         <xmp:ModifyDate>2012-09-15T00:14:31+09:00</xmp:ModifyDate>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:stFnt="http://ns.adobe.com/xap/1.0/sType/Font#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/">
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>215.900000</stDim:w>
            <stDim:h>279.400000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:Fonts>
            <rdf:Bag>
               <rdf:li rdf:parseType="Resource">
                  <stFnt:fontName>TimesNewRomanPSMT</stFnt:fontName>
                  <stFnt:fontFamily>Times New Roman</stFnt:fontFamily>
                  <stFnt:fontFace>Regular</stFnt:fontFace>
                  <stFnt:fontType>Open Type</stFnt:fontType>
                  <stFnt:versionString>Version 5.08</stFnt:versionString>
                  <stFnt:composite>False</stFnt:composite>
                  <stFnt:fontFileName>times.ttf</stFnt:fontFileName>
               </rdf:li>
            </rdf:Bag>
         </xmpTPg:Fonts>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>初期設定のスウォッチグループ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
      <rdf:Description rdf:about=""
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:DocumentID>xmp.did:710C7FA87AFEE1119F36DBFDEC579D03</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:710C7FA87AFEE1119F36DBFDEC579D03</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:710C7FA87AFEE1119F36DBFDEC579D03</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:710C7FA87AFEE1119F36DBFDEC579D03</stEvt:instanceID>
                  <stEvt:when>2012-09-15T00:14:31+09:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CS6 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -463.711 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 463.711 li
651.148 463.711 li
651.148 0 li
cp
clp
.25 lw
0 lc
0 lj
10 ml
[1 2 ] 0 dsh
true sadj
98.3999 388.349 mo
636 388.349 li
false sop
/0 
[/DeviceCMYK] /CSA add_res
.929717 .879728 .890196 .799985 cmyk
@
1 lw
[] 0 dsh
636 388.349 mo
629.7 388.349 li
98.3999 388.349 mo
104.7 388.349 li
@
%ADOBeginSubsetFont: TimesNewRomanPSMT Initial
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
12 dict dup begin
/FontType 1 def
/FontName /TimesNewRomanPSMT def
/FontInfo 5 dict dup begin
/ItalicAngle 0 def
/FSType 8 def
end def
/PaintType 0 def
/FontMatrix [0.001 0 0 0.001 0 0] def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
def
/FontBBox {-568 -307 2000 1007} def
end
systemdict begin
dup /Private
7 dict dup begin
/|- {def} def
/| {put} def
/BlueValues [0 0] def
/password 5839 def
/MinFeature {16 16} def
/OtherSubrs[{}{}{}{systemdict/internaldict known not{pop 3}{1183615869
systemdict/internaldict get exec dup/startlock known{/startlock get exec}{dup
/strtlck known{/strtlck get exec}{pop 3}ifelse}ifelse}ifelse}executeonly]def
/Subrs 5 array
dup 0 <1C60D8A8CC31FE2BF6E07AA3E541E2> |
dup 1 <1C60D8A8C9C3D06D9E> |
dup 2 <1C60D8A8C9C202D79A> |
dup 3 <1C60D8A849> |
dup 4 <1C60D8A8CC3674F41144B13B77> |
def
put
dup /CharStrings
4 dict dup begin
/.notdef <1C60D8A8C9B6FF86FBD66B095379F45880CA28D0F0C4629F99B72E
FEDBB222483BD74F8B> |-
/hyphen <1C60D8A8C9B81F2C797FA61189B8881D0DB497EEC4F8> |-
/zero <1C60D8A8C9B7A73DAAFDCA97EBBC8D8E35A41D9404C5638B059E1CA50
B5366543C3D584AD9E19987218AC5999BB0F2477597AB6F8DD868788C8440CBF
4A338EF64ACD9BF2268656755741DB71FD86387D4A7AA1CFD19937BFD209E4FB
CD1952717C8CF8C0555CB2D0238DC43B2A6A2DE4D7366DB210D2673870D0B0C5
8344E6AEF91B916BAAEAEF37B22F065E870AFE6638E56D0B4AE01785D59EE234
02242D396440157FC51> |-
/one <1C60D8A8C9B7A73DB92A3F8C4B412A6756A4F8D8439622AB29A83C93F5
89D112DBEAB54F9ACF0D9BFA06C28638F8F8CA9EE7AFD734575522301B5C0272
0FA00A934493EC3D856AF45EEE1D7462FF2375B7250579D34D9C249B6BEBF8EF
41DB28C0847307B8DCBC66> |-
end put
end
dup /FontName get exch definefont pop
end
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT /TimesNewRomanPSMT findfont ct_VMDictPut
/BNSWMN+TimesNewRomanPSMT*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 206{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
39.6953 396.352 mo
(-100)sh
.25 lw
[1 2 ] 0 dsh
98.3999 325.648 mo
636 325.648 li
@
1 lw
[] 0 dsh
636 325.648 mo
629.7 325.648 li
98.3999 325.648 mo
104.7 325.648 li
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/eight <1C60D8A8C9B7A73DAB2BA6B835CAFB4C9A41096F555C470FE6294A70
7AE711C017C95446B200870C2B6A47FB931BCEBEB5BBC6B53605850C75701306
FD83F9DC906687C2B3A2C9C0DB9DB68E95D3478DEA01153491C8534F5AD89998
0F04C195BFB522EDEF282420AA1F12E08397ECA941D5934294BD451B3952E622
9D3E7987DD36FC8E43559904E0205D3416EDD1402AB05184D2018B2C7B816330
FD0C2740A24C74F80E34F93317BBB1D6B8C4D916C15B7FF1D533D7762324A101
7022A27246D93B9768262BFCC673CAD6781894C98679A5889F9338F377D1995A
EDF5695FBA7A65628522691535557B2045419DD63F87D7A64B6A962B> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 56 /eight put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 6{/.notdef}rp /eight 199{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
52.0078 333.648 mo
(-80)sh
.25 lw
[1 2 ] 0 dsh
98.3999 262.849 mo
636 262.849 li
@
1 lw
[] 0 dsh
636 262.849 mo
629.7 262.849 li
98.3999 262.849 mo
104.7 262.849 li
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/six <1C60D8A8C9B7A73DB682174C160AB8115D90A4524BD5B352C23110F23E
E4E20266716093AE0643A076F6C57BA527F49BB819243E28C4CA7F711F41FA01
318856C15674E51D546E83D25FE9DB7A4B9EDFDDE57E488CC507C2304526D6E8
0E07D1EEFCA86373B2F664DD3DA4646061C700F112AB44ED3896FA596FE81443
6AD1F1DC5FEDB207A575A17735F66E79BF0D0E423C92F1E9255D38F15B49459F
3693E95DCE92EBF25C243713EDA9138A49C42AA83683249878EEA825672AC6D9
9C32B9109B3D5797A7> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 54 /six put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 4{/.notdef}rp /six /.notdef 
/eight 199{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
52.0078 270.844 mo
(-60)sh
.25 lw
[1 2 ] 0 dsh
98.3999 200.148 mo
636 200.148 li
@
1 lw
[] 0 dsh
636 200.148 mo
629.7 200.148 li
98.3999 200.148 mo
104.7 200.148 li
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/four <1C60D8A8C9B7A73DB6B62B7A95EE6C20B94EAC94CA9AB50BFD020369D
6A63C8EA15A0D9A89B2ED9293078F8D3EE629592E255C65B246> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 52 /four put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one 2{/.notdef}rp /four /.notdef 
/six /.notdef /eight 199{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
52.0078 208.141 mo
(-40)sh
.25 lw
[1 2 ] 0 dsh
98.3999 137.448 mo
636 137.448 li
@
1 lw
[] 0 dsh
636 137.448 mo
629.7 137.448 li
98.3999 137.448 mo
104.7 137.448 li
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/two <1C60D8A8C9B7A73DB6F198797B24E7DF20E340C763AB9A17095FFDDA6B
4B0E4D4AC4BE83AF302018AACAF29AB5FCEB98A93FCCD2C9A968B7CB1B433E25
003CA8A63287F6BD1729C8188A209A7171C9BFB11D2FACEF2FADF63141D976A0
F90EDDE709834FFBF963952A5213F00F39F098C30D0F91D40A57CAEF920CE11E
C41D90433CE0F55F0A42A96AF852FD50FA> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 50 /two put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[45{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two /.notdef /four 
/.notdef /six /.notdef /eight 199{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
52.0078 145.445 mo
(-20)sh
.25 lw
[1 2 ] 0 dsh
98.3999 74.6484 mo
636 74.6484 li
@
1 lw
[] 0 dsh
636 74.6484 mo
629.7 74.6484 li
98.3999 74.6484 mo
104.7 74.6484 li
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/space <1C60D8A8C9B8707C25> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 32 /space put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/.notdef /four /.notdef /six /.notdef /eight 199{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
66.6016 82.6563 mo
( 0)
[6 0 ]xsh
.25 lw
[1 2 ] 0 dsh
98.3999 11.9482 mo
636 11.9482 li
@
1 lw
[] 0 dsh
636 11.9482 mo
629.7 11.9482 li
98.3999 11.9482 mo
104.7 11.9482 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
54.2891 19.9453 mo
( 20)sh
.25 lw
[1 2 ] 0 dsh
98.3999 388.349 mo
98.3999 11.9482 li
@
1 lw
[] 0 dsh
98.3999 11.9482 mo
98.3999 18.2485 li
98.3999 388.349 mo
98.3999 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
89.7031 420.352 mo
( 0)
[6 0 ]xsh
.25 lw
[1 2 ] 0 dsh
165.6 388.349 mo
165.6 11.9482 li
@
1 lw
[] 0 dsh
165.6 11.9482 mo
165.6 18.2485 li
165.6 388.349 mo
165.6 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
156.906 420.352 mo
( 2)
[6 0 ]xsh
.25 lw
[1 2 ] 0 dsh
232.8 388.349 mo
232.8 11.9482 li
@
1 lw
[] 0 dsh
232.8 11.9482 mo
232.8 18.2485 li
232.8 388.349 mo
232.8 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
224.102 420.352 mo
( 4)
[6 0 ]xsh
.25 lw
[1 2 ] 0 dsh
300 388.349 mo
300 11.9482 li
@
1 lw
[] 0 dsh
300 11.9482 mo
300 18.2485 li
300 388.349 mo
300 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
291.305 420.352 mo
( 6)
[6 0 ]xsh
.25 lw
[1 2 ] 0 dsh
367.2 388.349 mo
367.2 11.9482 li
@
1 lw
[] 0 dsh
367.2 11.9482 mo
367.2 18.2485 li
367.2 388.349 mo
367.2 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
358.5 420.352 mo
( 8)
[6 0 ]xsh
.25 lw
[1 2 ] 0 dsh
434.4 325.648 mo
434.4 11.9482 li
434.4 388.349 mo
434.4 373.648 li
@
1 lw
[] 0 dsh
434.4 11.9482 mo
434.4 18.2485 li
434.4 388.349 mo
434.4 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
419.547 420.352 mo
( 10)sh
.25 lw
[1 2 ] 0 dsh
501.6 325.648 mo
501.6 11.9482 li
501.6 388.349 mo
501.6 373.648 li
@
1 lw
[] 0 dsh
501.6 11.9482 mo
501.6 18.2485 li
501.6 388.349 mo
501.6 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
486.742 420.352 mo
( 12)sh
.25 lw
[1 2 ] 0 dsh
568.8 325.648 mo
568.8 11.9482 li
568.8 388.349 mo
568.8 373.648 li
@
1 lw
[] 0 dsh
568.8 11.9482 mo
568.8 18.2485 li
568.8 388.349 mo
568.8 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
553.945 420.352 mo
( 14)sh
.25 lw
[1 2 ] 0 dsh
636 388.349 mo
636 11.9482 li
@
1 lw
[] 0 dsh
636 11.9482 mo
636 18.2485 li
636 388.349 mo
636 382.049 li
@
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
621.148 420.352 mo
( 16)sh
98.3999 11.9482 mo
98.3999 388.349 li
636 388.349 li
636 11.9482 li
98.3999 11.9482 li
98.3999 11.9482 li
cp
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/N <1C60D8A8C9B6079FEBDAFCF29D322161AC3F52EDD22433113CAA67ECAF0B
056592AA81FE2842CB172B65A1B8C599C7080F0FEEDF52AD2A1E3DD4CF5B5A3A
BC5E3E3936B6025ECB4BBB9A6B9E506B790F934302A34C91233D5C7DD4480C8E
57FB7AE58D5F049C8795FEC67FB4BCA555E2CC51B9B80AEAE5214780F4B92D63
E63AE746DB94B9539BA648935E38> |-
/T <1C60D8A8C9B7D8BE514ED6977CE9F9E5860FEBB6D8EBF5879FDED6C1E48F
6AFEEE7B65DB6C9D492058CAA103CB13A7A80B0015E85F272BB9775991CD9755
6EC3CFB46A4E1606F006216EABEB711074247C72C159202F32CC7F5F403FAE58
110685510DDB32C57700D5067C975D7063A496FE85C1E5> |-
/bracketleft <1C60D8A8C9B81F2C3A069E97D4C1B29DA23BF51FA8AE87F396
9878E69D10DC348BAF69> |-
/bracketright <1C60D8A8C9B81F2C7D3B98BC3C6790041552B3C4749878E48
F0B17EDC12AFE367344> |-
/e <1C60D8A8C9B77FE2C19119FE019B929F076F8319E8913467AECA41BE2BEA
D3EC175346E3F888D3AD76D215AD69034A954DFD661ECBEA3B145468480B6A15
F5C865D2083DC0B04744AA76DE4CC9E0C9DBDCC2C59DAA00F28A6A47092C7FFA
0397DC47C5CBBA69AD805D3DD20D56411E92B0DE9E3F19C2FDEE1FA501318984
A59E1CFFFD06EA629758085868D3F5F7204292> |-
/m <1C60D8A8C9B6FF86F5D75501F5946D14C10E01941D6F8F408CE11167932D
24264D7EFCAC2AE86125FDD757A8758D869BC4213413CCB2A6A255440BA1816E
9DC45844CC319542821B45F7B81EE7391A0EDD08008613940B7EF538F41747A2
556BE4D609FA0E86A3720064373B35B3C09F29E00670FDA88D75DD91439C68FD
574D15688B76675600DF49F10BE44872E462D2FA9EDC453EEFA6E997D8F24910
7C6F71C5B180EF91CFB08123DB5F12D5248BB769BCDBF86D09B3C1EE1D61D18C
E6632A82186FF826CE8FF5C9F24094455D2446DAB1258D7CEF6AB64018AE9556
17323D2765A0C9FC9EE9EFC157214A4EF1A088A6CBE09BD12BF0618C85527D98
7ABAA0F84BBDB3F467CD6D1AFC5F01D6CD6E91196626F968CD9EC222C872FAFE
C679ED97966B06F7D45253DA82AACAAC774A43132A3F4B4FB40FD07B5AFDAE82
B335C3B8E42DF7C6FCB1E78E5819FAE1E5B06EBADF2F71F0A59372AEE76B5179
96> |-
/o <1C60D8A8C9B7A73DB903ADC070A7C49752E736186D1727D7954B8F3DD441
6250EFB2715F7FEA4B4F24611BB7B770A0989FFD12258A4EC0D90DD9998BDAF9
96A44DE027AE6C486FF30337F30EB574748A139900482713C8EF6F8455DA4367
02294DB22515A99C4ACC57A269598D687C25D5F66128E3441FE6E0D99B55B68D
9C19E720D771564C6692898D127FC55C985D08C7E6B95F874FD094> |-
/q <1C60D8A8C9B7A73DB694895DD5E49D3BBCEE95B381618ED0718BA1F35CD3
9E95BCBD1002A9F89110DE3E7AD181B368295D0F054E6A3D9A7267329EB95AB8
13B7AE1696D9C600AC6A6B00419AEBFBF715793C3A2F30373AE9BFAB97302272
E9B4EA6D0F482F853122AF239C1F65C8335B7091413102CCD1675C767B686462
E8E1B94DFF670F4F69122307C3AAC013B5112B2F564262A5E8DE4D58B097F43D
017CDAA97C6843EB833175C60735563DF7F92AF1ACD211546A7958997473A18D
23764933CEE9DC71CCD4C3E61E53DA702E> |-
/r <1C60D8A8C9B81F2C3A9916C4CB28F21023538C2A69D3E08B0A448624D2CE
6C19473DC07A6A4C3E0D8D2DFD7B9589F2461E064A251BFFB4F1472DE500E983
E2E667F5383BBA338778795701927E45FB048834AFB7FF5E045C79CAD4F90B53
A8A93629365ECF1B64B7916DE5DAB65845D9DB9B71D2B7B722597153CE4BA455
AAC1333D36087A511839B6E1301E787D03299ED6FB7E787777CDACC74EC37D8C
360275B503E4954E912CD342> |-
/s <1C60D8A8C9B7361F027554B74948DF9D509740193A97E4C5A946CCDAC22A
CE16A97A38CAF70766C30631C22477718670FA129F481BA880FC6C2A8C233A03
9A7A46ACD6F3CA0422B1CD13AB9E5980A98B78F274FD5FB0A519013427E3DF40
BD973F22C9B236BE3D27B0A78749138244A4ED344575D4F7F677439F8C2359FA
AB210EA03D2DAABF38A6B5B4F0819D6E85CC68A9859B12239E01058FD0C7C593
B22AC00DE1C2A90508610457C5DFEA41C78C4C677B338B4C0ED41B0474AF509B
93D8B3403DD443273DAE4F97B7CDCA81379AB0933639> |-
/t <1C60D8A8C9B854D0F414EAB29549463C152A8395E080F8A65050DED29448
713A9991EC80B85D2E40BC855D0C9C1C8F48B9F54A9F2AF77E5AE0CF2D93DC43
DDEECA57457D57C32A4E7F92D72E19B411BD6A8FD776B503B1ED0E4E775E798B
36CAB4543E392F481E83DAF858D3B1A895E3CC06AB3573C04543D9> |-
/u <1C60D8A8C9B7A73DB9860E0681DA8AEA1E5FBC1C72A452614FEB33CC58A1
99CCF544A550BDEE35652D618DE4A02AA9CF0753ADA232102DC8DC25CB958152
D1B74BC447B68C074C25C2126470565A20B42A419CDD0C7A1DA63C6A764D555B
867A9BE961ADBD0AF5B2007F47FCC9435F8B51D3F3A5D83941DD57A0C4D32E16
9A6BACC26F8AD3C9372F1114911D1D3F3FB2725FADBF9F529AA2CFB178B79F97
520325221F3417C7781EB09765> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 78 /N put
dup 84 /T put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 101 /e put
dup 109 /m put
dup 111 /o put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/.notdef /four /.notdef /six /.notdef /eight 21{/.notdef}rp /N 
5{/.notdef}rp /T 6{/.notdef}rp /bracketleft /.notdef /bracketright 7{/.notdef}rp /e 
7{/.notdef}rp /m /.notdef /o /.notdef /q /r /s 
/t /u 138{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [0 -24 -24 0 0 0 ]msf
36.6953 296.227 mo
(Torso torque [Nm)
[-14.6602 -12 -7.99219 -9.33984 -12 -6 -6.66797 -12 -7.99219 -12 -12 -10.6523 
-6 -7.99219 -17.332 0 ]ysh
36.6953 120.055 mo
(])sh
0 200.148 mo
@
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/W <1C60D8A8C9B5D6EF4CB383496C62617B8BD4FD4927BDE48152A6FF621642
8592F5AFA3D18F24C53020F77DA565222C98E1F496EC6F2EE4EB22E43F233D8D
98DB46EC3FFD79A8A395ED6571E9EE52C2D64F4FF1F26706DF3355CFC8C908EA
A86ADD43E05EADD0D2F7D3DC578FF752F1D87291BBD55E577C117CD30BA3049B
D39543241DD7DCD07617FA8A494E710E269F478E2E95BEC8AA7E710ACD0612E8
921B3DAA59E93D8AA4276CD08DDB3A9B4D762893C74EF3108E125B72E190D045
E652A0B8E8729169D251777FA84DD9EC852ADB1FB8FFEDFE199F837B9E862E99
2403453891> |-
/a <1C60D8A8C9B77FE2CEA139CB15A16492F485162FE605BA10F460B6DC550D
EC7BA0BCA1B89C8429260417FE96BA758C22F6762386C9F1CAF53456C89D4C6B
177AA810FBB608A57F053C4DA17FD8A122DD63CD2EE0563B0FFA48FEF5CBDB33
3E4EF010579993E238020BE59CA5D3F31F329BD506C436A3A2AAAB6CBD385FDB
0E5188BC3D34A31214C941C253FAF1F818F84A3F73340CA7F3B7A85C87022E70
BF3FF56918287082AAA1D7B6CDE998BE3D8663592D3F0DEFC69D87A351A29895
DE83B0D7478C3C01D85F944C563EFCF85986470E4B8EDEEDC025A0FB3217B737
B99EB7B6E2243F66B907475D1C465D1D07EDFEFC5123FE5A4D48A8B15BE3272E
F1EF1464C3F0D45D7CBB8749AF571E09> |-
/g <1C60D8A8C9B7A73DAC44F2C448ECAF253E44055AA4AFC4D4E618BBF7F608
47F4AD57852D125F52503D138EEBB5C35DB7E6FF089D85EF3D59177D6853B7FF
4DCA48A2C6450DAF6AE7485D918680B6246955433B7E96C0D52B86F6985D93AE
A8FD99F7CE5A6EDF9F82F3DCD54C24AC7F5725E8D752728B16161496E9D02EA7
07BCC03E7CE1BDA2E3632B4A11707F59DF2FD8556EC51A6594DBA10EC63EB7A8
585255CC0C8C8B32CD6316A41829AE725CE606F4A4FD4DA668556D79F4AC25BF
9E697A5DB9F54B573E1EAA6D791100EAD10708C7E706E8CBDD596589510D4EA4
5E3CA12E8144CF2A4E025D5293F77BF25BA77276DF7C97999133B17612ABFFD7
0E77479B9C8ABBB3A51D3A6F6F66CA99610B1A23618D13E1A07B26D29ACFC819
1E5B2829F3C990A5C474E53FC8B282F11A7FFA86D56BD2349AEC811B22D30027
81921B9EDDEAA1B62C5F206266BA751F865F9A5F5AF517BC35F6F732012015D0
BB42652388A219FCF002C2C0335D2D190C0C425C4FA28367480051E56A90DD46
F1C707> |-
/i <1C60D8A8C9B854D0F4318DEB2BF4A8C14C2FAB601E0ED2FF31B9BA2C4F4D
9D824A65F9E753CDA6D59F3AE6B969EC176D4AA1F064BFADF6F4B6A5454B78F9
8C4B41AC403B87C0044C2A2776BF32D7D2C5370D6DB44827DB4719A169BBE365
B0C0BED49A30732BB5E35B7101E488713F0203C9161D1F92C48C80A640085090
E2C5D79817DC05EB1FC5E4D24EE71772E51241DF9FD4D574115CFC53427DCBCB
8CA3E9F85837FAC6> |-
/n <1C60D8A8C9B7A73DB913C38909CDA29FD53BC2807766C389AFB9ED86F7BC
81642DEC755C464ECEF36210D9B2C516FEA8C1248DF87B00C42E8B7B13BCCD9D
4DADECDD469C646397E88CF560CD28B02CAE7D1B9203699A1DE9CF796CD494DF
60582CAFD70B7F17C1569B79CFC1B11937F06CBBF98FB3F8ABA83215B2800261
30687B8B88299FC622B1B9C743E6B4E2D3E657B3D5566E1938323637D7929F2E
277006B7F4C91822AAA6911E494E2AD0998CB1FC1434E1920012738BB988F6A0
027198438FE663C2EACF82CEB86F7C727594> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 87 /W put
dup 97 /a put
dup 103 /g put
dup 105 /i put
dup 110 /n put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/.notdef /four /.notdef /six /.notdef /eight 21{/.notdef}rp /N 
5{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 
3{/.notdef}rp /m /n /o /.notdef /q /r /s 
/t /u 138{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
328.297 456.352 mo
(Time [s])sh
442.398 345.641 mo
(Wearing)sh
1.5 lw
622.1 68.0488 mo
622.3 68.5488 li
622.5 68.748 li
622.6 68.9482 li
622.8 69.3486 li
623 69.9482 li
623.1 70.3486 li
623.3 70.5488 li
623.5 70.5488 li
623.6 70.5488 li
623.8 70.3486 li
624 70.1484 li
624.1 69.8486 li
624.3 69.4482 li
624.5 69.248 li
624.6 69.8486 li
624.8 70.748 li
625 70.9482 li
625.1 70.6484 li
625.3 70.3486 li
625.5 70.4482 li
625.7 70.5488 li
625.8 70.6484 li
626 70.8486 li
626.2 70.9482 li
626.3 71.0488 li
626.5 71.248 li
626.7 71.748 li
626.8 72.0488 li
627 72.0488 li
627.2 71.4482 li
627.3 71.0488 li
627.5 71.5488 li
627.7 72.5488 li
604.7 72.4482 mo
604.8 72.4482 li
605 72.5488 li
605.2 72.4482 li
605.3 72.0488 li
605.5 71.8486 li
605.7 71.748 li
605.8 71.6484 li
606 72.1484 li
606.2 72.5488 li
606.3 72.5488 li
606.5 72.5488 li
606.7 72.748 li
606.8 72.8486 li
607 72.9482 li
607.2 72.9482 li
607.3 72.9482 li
607.5 73.1484 li
607.7 73.248 li
607.8 73.0488 li
608 72.6484 li
608.2 72.4482 li
608.3 72.248 li
608.5 72.0488 li
608.7 72.1484 li
608.9 72.3486 li
609 72.3486 li
609.2 72.1484 li
609.4 71.748 li
609.5 71.3486 li
609.7 71.0488 li
609.9 71.1484 li
610 71.248 li
610.2 71.1484 li
610.4 70.8486 li
610.5 70.3486 li
610.7 69.8486 li
610.9 69.248 li
611 69.0488 li
611.2 69.5488 li
611.4 70.1484 li
611.5 70.6484 li
611.7 70.6484 li
611.9 70.248 li
612 69.748 li
612.2 69.5488 li
612.4 69.4482 li
612.5 69.1484 li
612.7 69.1484 li
612.9 69.6484 li
613.101 70.3486 li
613.2 71.1484 li
613.4 71.6484 li
613.601 72.1484 li
613.7 72.6484 li
613.9 72.9482 li
614.101 72.8486 li
614.2 72.5488 li
614.4 72.0488 li
614.601 71.748 li
614.7 71.6484 li
614.9 71.4482 li
615.101 71.3486 li
615.2 71.1484 li
615.4 71.0488 li
615.601 71.0488 li
615.7 70.8486 li
615.9 70.5488 li
616.101 70.248 li
616.2 69.9482 li
616.4 69.248 li
616.601 68.4482 li
616.7 67.4482 li
616.9 66.748 li
617.101 67.1484 li
617.301 68.1484 li
617.4 69.4482 li
617.601 70.5488 li
617.801 71.248 li
617.9 71.4482 li
618.101 71.4482 li
618.301 71.248 li
618.4 70.748 li
618.601 70.3486 li
618.801 70.248 li
618.9 70.1484 li
619.101 70.1484 li
619.301 70.248 li
619.4 70.3486 li
619.601 70.3486 li
619.801 70.248 li
619.9 69.5488 li
620.101 68.8486 li
620.301 68.6484 li
620.4 68.3486 li
620.601 67.748 li
620.801 66.8486 li
620.9 65.6484 li
621.101 64.7485 li
621.301 64.6484 li
621.5 65.5483 li
621.601 66.5488 li
621.801 66.9482 li
622 67.248 li
622.101 68.0488 li
587.2 65.8486 mo
587.4 65.1484 li
587.5 64.2485 li
587.7 63.3486 li
587.9 63.2485 li
588 63.9482 li
588.2 64.4482 li
588.4 64.4482 li
588.5 64.1484 li
588.7 63.6484 li
588.9 63.0483 li
589 62.5483 li
589.2 61.8486 li
589.4 61.2485 li
589.5 61.0483 li
589.7 61.1484 li
589.9 61.5483 li
590 61.5483 li
590.2 61.2485 li
590.4 60.9482 li
590.5 60.3486 li
590.7 59.6484 li
590.9 58.9482 li
591 58.1484 li
591.2 57.6484 li
591.4 57.5483 li
591.6 57.4482 li
591.7 57.2485 li
591.9 57.0483 li
592.1 56.9482 li
592.2 57.3486 li
592.4 57.9482 li
592.6 58.7485 li
592.7 59.6484 li
592.9 60.6484 li
593.1 61.7485 li
593.2 62.9482 li
593.4 63.9482 li
593.601 64.7485 li
593.7 65.1484 li
593.9 65.4482 li
594.101 65.7485 li
594.2 65.9482 li
594.4 66.3486 li
594.601 67.1484 li
594.7 67.9482 li
594.9 68.3486 li
595.101 68.4482 li
595.2 68.0488 li
595.4 67.8486 li
595.601 68.1484 li
595.8 68.6484 li
595.9 69.0488 li
596.101 69.4482 li
596.3 69.8486 li
596.4 70.0488 li
596.601 70.248 li
596.8 70.1484 li
596.9 70.1484 li
597.101 70.248 li
597.3 70.6484 li
597.4 71.0488 li
597.601 71.4482 li
597.8 71.5488 li
597.9 71.4482 li
598.101 71.248 li
598.301 71.1484 li
598.4 71.0488 li
598.601 71.0488 li
598.801 71.0488 li
598.9 71.1484 li
599.101 70.9482 li
599.301 70.6484 li
599.4 70.3486 li
599.601 70.248 li
599.801 70.3486 li
600 70.4482 li
600.101 70.5488 li
600.301 70.6484 li
600.5 70.6484 li
600.601 70.748 li
600.801 71.1484 li
601 71.5488 li
601.101 71.5488 li
601.301 71.3486 li
601.5 71.0488 li
601.601 70.748 li
601.801 70.248 li
602 69.6484 li
602.101 69.4482 li
602.301 69.4482 li
602.5 69.4482 li
602.601 69.8486 li
602.801 70.4482 li
603 70.6484 li
603.101 70.8486 li
603.301 71.1484 li
603.5 71.3486 li
603.601 71.5488 li
603.801 71.9482 li
604 72.4482 li
604.2 72.6484 li
604.301 72.5488 li
604.5 72.4482 li
604.7 72.4482 li
569.7 73.8486 mo
569.9 74.1484 li
570.1 74.248 li
570.2 73.8486 li
570.4 73.248 li
570.6 72.748 li
570.7 72.4482 li
570.9 72.248 li
571.1 71.9482 li
571.2 71.5488 li
571.4 71.4482 li
571.6 71.748 li
571.7 72.248 li
571.9 72.8486 li
572.1 73.3486 li
572.2 73.9482 li
572.4 74.6484 li
572.6 75.0488 li
572.7 74.9482 li
572.9 74.4482 li
573.1 73.8486 li
573.2 73.248 li
573.4 73.0488 li
573.6 72.9482 li
573.7 72.9482 li
573.9 72.9482 li
574.101 72.6484 li
574.3 72.0488 li
574.4 71.5488 li
574.601 71.1484 li
574.8 70.5488 li
574.9 69.5488 li
575.101 68.6484 li
575.3 67.5488 li
575.4 66.3486 li
575.601 65.2485 li
575.8 64.8486 li
575.9 64.8486 li
576.101 65.0483 li
576.3 65.2485 li
576.4 65.6484 li
576.601 66.0483 li
576.8 66.3486 li
576.9 66.248 li
577.101 66.0483 li
577.3 65.6484 li
577.4 65.9482 li
577.601 66.748 li
577.8 67.248 li
577.9 67.4482 li
578.101 67.6484 li
578.3 68.1484 li
578.5 69.0488 li
578.601 69.748 li
578.8 70.4482 li
579 71.248 li
579.101 72.248 li
579.301 73.0488 li
579.5 73.1484 li
579.601 72.748 li
579.801 72.248 li
580 71.748 li
580.101 71.248 li
580.301 70.748 li
580.5 70.3486 li
580.601 69.748 li
580.801 69.248 li
581 69.248 li
581.101 69.4482 li
581.301 69.5488 li
581.5 69.9482 li
581.601 70.8486 li
581.801 71.6484 li
582 72.0488 li
582.101 72.248 li
582.301 72.3486 li
582.5 72.3486 li
582.7 72.3486 li
582.801 72.1484 li
583 71.748 li
583.2 71.248 li
583.301 71.1484 li
583.5 71.1484 li
583.7 71.3486 li
583.801 71.6484 li
584 71.748 li
584.2 71.748 li
584.301 71.4482 li
584.5 70.748 li
584.7 70.0488 li
584.801 69.3486 li
585 68.8486 li
585.2 69.0488 li
585.301 69.248 li
585.5 69.248 li
585.7 69.0488 li
585.801 68.9482 li
586 68.748 li
586.2 68.5488 li
586.301 68.248 li
586.5 67.9482 li
586.7 67.5488 li
586.9 66.9482 li
587 66.3486 li
587.2 65.8486 li
552.2 54.3486 mo
552.4 54.2485 li
552.6 54.2485 li
552.8 54.1484 li
552.9 54.0483 li
553.1 54.1484 li
553.3 54.3486 li
553.4 54.7485 li
553.6 55.5483 li
553.8 56.4482 li
553.9 57.5483 li
554.1 58.6484 li
554.3 59.6484 li
554.4 60.6484 li
554.6 61.9482 li
554.8 63.9482 li
554.9 66.0483 li
555.1 66.9482 li
555.3 65.3486 li
555.4 62.8486 li
555.6 60.9482 li
555.8 59.7485 li
555.9 59.0483 li
556.1 58.6484 li
556.3 58.2485 li
556.4 58.1484 li
556.6 58.1484 li
556.8 58.2485 li
557 58.0483 li
557.1 57.6484 li
557.3 57.2485 li
557.5 57.3486 li
557.601 57.9482 li
557.8 58.7485 li
558 59.3486 li
558.101 59.7485 li
558.3 60.0483 li
558.5 60.5483 li
558.601 60.9482 li
558.8 60.9482 li
559 60.9482 li
559.101 61.3486 li
559.3 61.8486 li
559.5 62.3486 li
559.601 62.8486 li
559.8 63.3486 li
560 63.9482 li
560.101 64.5483 li
560.3 64.6484 li
560.5 64.0483 li
560.601 63.1484 li
560.8 62.8486 li
561 63.0483 li
561.2 63.6484 li
561.3 64.2485 li
561.5 64.5483 li
561.7 65.0483 li
561.8 65.8486 li
562 66.3486 li
562.2 66.0483 li
562.3 65.2485 li
562.5 64.4482 li
562.7 64.2485 li
562.801 64.2485 li
563 64.2485 li
563.2 64.3486 li
563.301 64.6484 li
563.5 65.3486 li
563.7 66.248 li
563.801 67.3486 li
564 67.9482 li
564.2 67.6484 li
564.301 67.248 li
564.5 66.9482 li
564.7 66.5488 li
564.801 66.1484 li
565 66.4482 li
565.2 67.1484 li
565.4 67.6484 li
565.5 68.0488 li
565.7 68.5488 li
565.9 69.1484 li
566 70.1484 li
566.2 70.8486 li
566.4 71.0488 li
566.5 71.248 li
566.7 71.4482 li
566.9 71.9482 li
567 72.1484 li
567.2 71.9482 li
567.4 71.8486 li
567.5 72.0488 li
567.7 72.5488 li
567.9 73.8486 li
568 75.0488 li
568.2 75.4482 li
568.4 75.248 li
568.5 75.0488 li
568.7 74.8486 li
568.9 74.748 li
569 74.748 li
569.2 74.5488 li
569.4 74.1484 li
569.5 73.748 li
569.7 73.8486 li
534.8 38.8486 mo
534.9 39.2485 li
535.1 39.9482 li
535.3 40.8486 li
535.5 42.0483 li
535.6 43.3486 li
535.8 43.8486 li
536 41.9482 li
536.1 39.1484 li
536.3 37.0483 li
536.5 35.1484 li
536.6 33.8486 li
536.8 32.7485 li
537 31.9482 li
537.1 31.7485 li
537.3 31.9482 li
537.5 31.9482 li
537.6 31.7485 li
537.8 31.1484 li
538 30.9482 li
538.1 31.4482 li
538.3 32.0483 li
538.5 32.6484 li
538.6 32.9482 li
538.8 33.0483 li
539 32.8486 li
539.1 32.6484 li
539.3 32.7485 li
539.5 33.0483 li
539.7 32.7485 li
539.8 32.0483 li
540 31.8486 li
540.2 32.2485 li
540.3 32.8486 li
540.5 33.5483 li
540.7 34.0483 li
540.8 34.0483 li
541 33.6484 li
541.2 33.0483 li
541.3 32.6484 li
541.5 32.4482 li
541.7 32.3486 li
541.8 32.5483 li
542 32.8486 li
542.2 33.2485 li
542.3 33.6484 li
542.5 34.0483 li
542.7 34.0483 li
542.8 33.7485 li
543 33.6484 li
543.2 34.1484 li
543.3 35.4482 li
543.5 36.9482 li
543.7 37.7485 li
543.9 38.0483 li
544 38.2485 li
544.2 38.4482 li
544.4 38.5483 li
544.5 38.2485 li
544.7 37.8486 li
544.9 37.4482 li
545 37.9482 li
545.2 39.6484 li
545.4 42.1484 li
545.5 44.5483 li
545.7 46.1484 li
545.9 46.9482 li
546 47.4482 li
546.2 47.8486 li
546.4 48.2485 li
546.5 48.9482 li
546.7 49.7485 li
546.9 50.7485 li
547 52.0483 li
547.2 53.1484 li
547.4 54.3486 li
547.5 55.6484 li
547.7 56.8486 li
547.9 57.6484 li
548 58.1484 li
548.2 58.6484 li
548.4 58.6484 li
548.6 58.7485 li
548.7 59.2485 li
548.9 59.9482 li
549.1 60.2485 li
549.2 60.2485 li
549.4 60.0483 li
549.6 59.6484 li
549.7 58.8486 li
549.9 58.2485 li
550.1 57.9482 li
550.2 57.9482 li
550.4 57.7485 li
550.6 57.3486 li
550.7 56.6484 li
550.9 55.9482 li
551.1 55.1484 li
551.2 54.7485 li
551.4 54.8486 li
551.6 55.2485 li
551.7 55.3486 li
551.9 55.0483 li
552.1 54.6484 li
552.2 54.3486 li
517.3 30.5483 mo
517.5 30.6484 li
517.6 30.4482 li
517.8 30.0483 li
518 29.3486 li
518.2 28.4482 li
518.3 27.6484 li
518.5 27.3486 li
518.7 27.2485 li
518.8 27.0483 li
519 26.8486 li
519.2 27.0483 li
519.3 27.3486 li
519.5 27.6484 li
519.7 27.8486 li
519.8 27.6484 li
520 27.2485 li
520.2 27.1484 li
520.3 27.4482 li
520.5 27.5483 li
520.7 27.3486 li
520.8 26.8486 li
521 26.5483 li
521.2 26.6484 li
521.3 27.0483 li
521.5 27.2485 li
521.7 27.4482 li
521.8 27.9482 li
522 28.5483 li
522.2 28.9482 li
522.4 29.4482 li
522.5 29.7485 li
522.7 30.0483 li
522.9 30.3486 li
523 30.6484 li
523.2 31.0483 li
523.4 31.4482 li
523.5 31.8486 li
523.7 31.9482 li
523.9 31.5483 li
524 31.1484 li
524.2 30.8486 li
524.4 31.0483 li
524.5 32.1484 li
524.7 33.4482 li
524.9 33.9482 li
525 34.5483 li
525.2 35.8486 li
525.4 37.3486 li
525.5 38.8486 li
525.7 40.2485 li
525.9 41.4482 li
526 41.7485 li
526.2 42.0483 li
526.4 42.1484 li
526.5 41.1484 li
526.7 39.8486 li
526.9 38.5483 li
527.1 37.6484 li
527.2 37.1484 li
527.4 36.8486 li
527.6 36.4482 li
527.7 36.1484 li
527.9 35.8486 li
528.1 35.8486 li
528.2 35.9482 li
528.4 35.8486 li
528.6 35.7485 li
528.7 35.8486 li
528.9 36.0483 li
529.1 36.2485 li
529.2 36.6484 li
529.4 36.9482 li
529.6 37.2485 li
529.7 37.2485 li
529.9 36.8486 li
530.1 35.9482 li
530.2 34.4482 li
530.4 33.4482 li
530.6 34.2485 li
530.7 35.9482 li
530.9 37.3486 li
531.1 38.4482 li
531.3 39.0483 li
531.399 39.6484 li
531.6 40.0483 li
531.8 40.1484 li
531.899 40.1484 li
532.1 40.2485 li
532.3 40.1484 li
532.399 39.9482 li
532.6 39.7485 li
532.8 39.7485 li
532.899 40.0483 li
533.1 40.3486 li
533.3 40.3486 li
533.399 40.4482 li
533.6 40.6484 li
533.8 40.4482 li
533.899 39.7485 li
534.1 38.7485 li
534.3 38.1484 li
534.399 38.1484 li
534.6 38.4482 li
534.8 38.8486 li
499.8 20.8486 mo
500 21.7485 li
500.2 22.8486 li
500.3 23.6484 li
500.5 24.0483 li
500.7 24.0483 li
500.9 23.7485 li
501 23.4482 li
501.2 22.9482 li
501.4 22.4482 li
501.5 22.0483 li
501.7 21.7485 li
501.9 21.4482 li
502 21.2485 li
502.2 21.3486 li
502.4 21.5483 li
502.5 22.0483 li
502.7 22.4482 li
502.9 22.9482 li
503 23.4482 li
503.2 23.5483 li
503.4 23.7485 li
503.5 24.3486 li
503.7 25.3486 li
503.9 26.5483 li
504 27.6484 li
504.2 28.1484 li
504.4 28.0483 li
504.5 27.9482 li
504.7 28.0483 li
504.9 27.8486 li
505 27.7485 li
505.2 27.7485 li
505.4 27.4482 li
505.6 26.7485 li
505.7 26.0483 li
505.9 25.6484 li
506.1 25.5483 li
506.2 25.4482 li
506.4 25.1484 li
506.6 24.7485 li
506.7 24.8486 li
506.9 25.3486 li
507.1 25.5483 li
507.2 25.3486 li
507.4 24.9482 li
507.6 23.9482 li
507.7 22.5483 li
507.9 21.4482 li
508.1 20.9482 li
508.2 20.8486 li
508.4 21.2485 li
508.6 22.0483 li
508.7 23.1484 li
508.9 24.7485 li
509.1 25.8486 li
509.2 26.2485 li
509.4 26.2485 li
509.6 25.9482 li
509.8 25.1484 li
509.9 24.1484 li
510.1 23.1484 li
510.3 22.3486 li
510.4 21.8486 li
510.6 21.5483 li
510.8 21.4482 li
510.9 21.3486 li
511.1 21.2485 li
511.3 20.7485 li
511.4 19.9482 li
511.6 19.2485 li
511.8 18.9482 li
511.9 19.1484 li
512.1 19.9482 li
512.3 20.9482 li
512.4 21.7485 li
512.6 22.1484 li
512.8 22.3486 li
512.9 22.4482 li
513.1 22.5483 li
513.3 22.8486 li
513.4 22.9482 li
513.6 23.0483 li
513.8 23.5483 li
514 24.0483 li
514.1 24.2485 li
514.3 24.6484 li
514.5 24.7485 li
514.6 24.4482 li
514.8 23.9482 li
515 23.8486 li
515.1 24.0483 li
515.3 24.2485 li
515.5 24.5483 li
515.6 25.1484 li
515.8 25.8486 li
516 26.3486 li
516.1 26.8486 li
516.3 27.3486 li
516.5 27.9482 li
516.6 28.7485 li
516.8 29.5483 li
517 29.7485 li
517.1 30.0483 li
517.3 30.5483 li
482.4 29.8486 mo
482.5 29.6484 li
482.7 29.3486 li
482.9 28.7485 li
483 28.0483 li
483.2 27.4482 li
483.4 26.6484 li
483.5 26.2485 li
483.7 26.2485 li
483.9 25.8486 li
484.1 25.2485 li
484.2 24.4482 li
484.4 23.5483 li
484.6 22.7485 li
484.7 22.2485 li
484.9 21.8486 li
485.1 20.7485 li
485.2 19.0483 li
485.4 17.2485 li
485.6 16.8486 li
485.7 17.7485 li
485.9 18.7485 li
486.1 19.2485 li
486.2 19.8486 li
486.4 20.6484 li
486.6 21.4482 li
486.7 21.8486 li
486.9 22.0483 li
487.1 22.2485 li
487.2 22.9482 li
487.4 23.3486 li
487.6 23.5483 li
487.7 23.7485 li
487.9 23.8486 li
488.1 23.9482 li
488.3 24.1484 li
488.4 24.0483 li
488.6 23.3486 li
488.8 22.3486 li
488.9 21.5483 li
489.1 21.4482 li
489.3 22.0483 li
489.4 22.8486 li
489.6 23.6484 li
489.8 24.5483 li
489.9 25.1484 li
490.1 24.7485 li
490.3 23.7485 li
490.4 22.9482 li
490.6 22.6484 li
490.8 22.2485 li
490.9 21.9482 li
491.1 21.8486 li
491.3 22.3486 li
491.4 23.3486 li
491.6 24.1484 li
491.8 24.6484 li
491.9 25.0483 li
492.1 25.2485 li
492.3 25.4482 li
492.5 25.3486 li
492.6 25.0483 li
492.8 24.6484 li
493 24.4482 li
493.1 24.3486 li
493.3 24.2485 li
493.5 24.0483 li
493.6 24.0483 li
493.8 24.3486 li
494 24.5483 li
494.1 24.3486 li
494.3 24.0483 li
494.5 23.4482 li
494.6 22.3486 li
494.8 21.5483 li
495 20.9482 li
495.1 20.3486 li
495.3 20.2485 li
495.5 20.3486 li
495.6 20.1484 li
495.8 19.5483 li
496 19.1484 li
496.1 18.7485 li
496.3 18.1484 li
496.5 17.5483 li
496.7 16.8486 li
496.8 16.5483 li
497 16.5483 li
497.2 16.7485 li
497.3 16.8486 li
497.5 16.3486 li
497.7 15.3486 li
497.8 14.2485 li
498 13.5483 li
498.2 13.7485 li
498.3 14.3486 li
498.5 14.3486 li
498.7 14.0483 li
498.8 14.2485 li
499 15.2485 li
499.2 16.3486 li
499.3 17.4482 li
499.5 18.6484 li
499.7 19.7485 li
499.8 20.8486 li
464.9 74.1484 mo
465.1 72.748 li
465.2 71.9482 li
465.4 71.8486 li
465.6 72.748 li
465.7 73.748 li
465.9 73.4482 li
466.1 72.1484 li
466.2 70.6484 li
466.4 69.6484 li
466.6 68.9482 li
466.8 67.4482 li
466.9 65.6484 li
467.1 63.8486 li
467.3 62.4482 li
467.4 61.1484 li
467.6 59.5483 li
467.8 57.3486 li
467.9 54.1484 li
468.1 50.1484 li
468.3 46.5483 li
468.4 44.2485 li
468.6 42.1484 li
468.8 39.3486 li
468.9 36.1484 li
469.1 33.0483 li
469.3 31.3486 li
469.4 31.2485 li
469.6 31.4482 li
469.8 31.4482 li
469.9 31.6484 li
470.1 31.8486 li
470.3 31.7485 li
470.4 31.8486 li
470.6 32.2485 li
470.8 32.5483 li
471 32.6484 li
471.1 32.0483 li
471.3 31.1484 li
471.5 31.4482 li
471.6 32.7485 li
471.8 34.1484 li
472 35.3486 li
472.1 36.1484 li
472.3 36.4482 li
472.5 37.3486 li
472.6 39.1484 li
472.8 40.5483 li
473 41.7485 li
473.1 42.8486 li
473.3 43.4482 li
473.5 43.8486 li
473.6 44.0483 li
473.8 43.9482 li
474 43.7485 li
474.1 42.9482 li
474.3 41.6484 li
474.5 40.0483 li
474.6 39.1484 li
474.8 38.5483 li
475 37.8486 li
475.2 37.5483 li
475.3 37.6484 li
475.5 37.8486 li
475.7 37.7485 li
475.8 37.9482 li
476 38.1484 li
476.2 37.5483 li
476.3 36.0483 li
476.5 34.3486 li
476.7 32.7485 li
476.8 30.8486 li
477 29.0483 li
477.2 27.7485 li
477.3 27.2485 li
477.5 27.2485 li
477.7 27.1484 li
477.8 27.1484 li
478 26.8486 li
478.2 25.9482 li
478.3 25.1484 li
478.5 24.6484 li
478.7 24.5483 li
478.8 24.4482 li
479 24.1484 li
479.2 23.4482 li
479.4 22.7485 li
479.5 22.6484 li
479.7 22.9482 li
479.9 23.0483 li
480 22.4482 li
480.2 22.2485 li
480.399 23.2485 li
480.5 24.9482 li
480.7 26.2485 li
480.899 27.2485 li
481 28.4482 li
481.2 29.5483 li
481.399 30.0483 li
481.5 30.6484 li
481.7 31.1484 li
481.899 30.9482 li
482 30.2485 li
482.2 29.9482 li
482.399 29.8481 li
447.4 163.748 mo
447.6 159.448 li
447.8 155.349 li
447.9 152.549 li
448.1 149.849 li
448.3 145.549 li
448.4 140.248 li
448.6 134.748 li
448.8 129.748 li
448.9 125.648 li
449.1 123.549 li
449.3 122.648 li
449.5 121.849 li
449.6 121.748 li
449.8 122.248 li
450 122.948 li
450.1 122.648 li
450.3 122.148 li
450.5 122.748 li
450.6 123.148 li
450.8 122.049 li
451 120.248 li
451.1 119.148 li
451.3 119.148 li
451.5 120.049 li
451.6 121.349 li
451.8 121.748 li
452 120.549 li
452.1 119.049 li
452.3 117.748 li
452.5 116.448 li
452.6 116.049 li
452.8 116.648 li
453 117.948 li
453.1 119.948 li
453.3 122.248 li
453.5 123.748 li
453.7 123.349 li
453.8 122.049 li
454 121.148 li
454.2 120.349 li
454.3 119.648 li
454.5 118.648 li
454.7 117.349 li
454.8 116.648 li
455 116.948 li
455.2 116.849 li
455.3 115.349 li
455.5 112.948 li
455.7 110.748 li
455.8 109.049 li
456 108.349 li
456.2 108.049 li
456.3 106.849 li
456.5 105.148 li
456.7 104.248 li
456.8 104.248 li
457 103.748 li
457.2 103.049 li
457.3 103.349 li
457.5 104.748 li
457.7 105.448 li
457.9 105.049 li
458 104.448 li
458.2 103.248 li
458.4 100.849 li
458.5 98.3486 li
458.7 96.248 li
458.9 94.3486 li
459 92.0488 li
459.2 88.8486 li
459.4 85.0488 li
459.5 81.3486 li
459.7 78.248 li
459.9 75.5488 li
460 73.4482 li
460.2 72.1484 li
460.4 70.8486 li
460.5 69.5488 li
460.7 68.748 li
460.899 68.0488 li
461 67.1484 li
461.2 65.7485 li
461.399 63.5483 li
461.5 60.6484 li
461.7 58.3486 li
461.899 57.2485 li
462.1 57.4482 li
462.2 58.0483 li
462.399 57.5483 li
462.6 55.7485 li
462.7 54.0483 li
462.899 53.1484 li
463.1 53.2485 li
463.2 54.0483 li
463.399 55.6484 li
463.6 58.0483 li
463.7 61.1484 li
463.899 65.6484 li
464.1 70.4482 li
464.2 73.9482 li
464.399 75.6484 li
464.6 76.248 li
464.7 75.6484 li
464.899 74.1484 li
430 268.948 mo
430.1 268.549 li
430.3 267.549 li
430.5 266.448 li
430.6 264.748 li
430.8 262.148 li
431 259.049 li
431.1 255.648 li
431.3 253.248 li
431.5 251.849 li
431.6 251.148 li
431.8 250.648 li
432 249.349 li
432.2 247.248 li
432.3 244.648 li
432.5 242.448 li
432.7 241.849 li
432.8 242.849 li
433 244.648 li
433.2 245.849 li
433.3 245.248 li
433.5 243.849 li
433.7 244.549 li
433.8 247.549 li
434 250.049 li
434.2 250.448 li
434.3 248.948 li
434.5 247.248 li
434.7 246.148 li
434.8 245.648 li
435 245.049 li
435.2 243.648 li
435.3 242.248 li
435.5 242.748 li
435.7 245.948 li
435.8 248.049 li
436 247.049 li
436.2 244.049 li
436.4 241.448 li
436.5 240.448 li
436.7 239.948 li
436.9 238.549 li
437 236.448 li
437.2 234.049 li
437.4 231.948 li
437.5 229.349 li
437.7 225.349 li
437.9 220.648 li
438 215.849 li
438.2 211.549 li
438.4 208.648 li
438.5 206.549 li
438.7 203.248 li
438.9 199.549 li
439 196.648 li
439.2 194.349 li
439.4 191.748 li
439.5 188.448 li
439.7 185.448 li
439.9 183.448 li
440 182.349 li
440.2 181.549 li
440.4 180.349 li
440.6 178.849 li
440.7 177.748 li
440.9 177.549 li
441.1 178.049 li
441.2 177.948 li
441.4 176.049 li
441.6 172.549 li
441.7 169.549 li
441.9 168.349 li
442.1 167.349 li
442.2 165.049 li
442.4 161.748 li
442.6 159.849 li
442.7 160.148 li
442.9 161.748 li
443.1 163.748 li
443.2 164.448 li
443.4 164.648 li
443.6 165.849 li
443.7 167.349 li
443.9 168.148 li
444.1 167.349 li
444.2 166.349 li
444.4 166.748 li
444.6 168.748 li
444.7 170.948 li
444.9 172.549 li
445.1 173.349 li
445.3 172.648 li
445.4 171.248 li
445.6 170.748 li
445.8 171.549 li
445.9 172.948 li
446.1 173.448 li
446.3 172.948 li
446.4 172.049 li
446.6 170.948 li
446.8 169.849 li
446.9 168.748 li
447.1 168.049 li
447.3 166.849 li
447.399 163.748 li
412.5 244.748 mo
412.7 245.349 li
412.8 247.049 li
413 249.948 li
413.2 253.549 li
413.3 257.448 li
413.5 261.948 li
413.7 267.748 li
413.8 273.448 li
414 277.049 li
414.2 277.549 li
414.3 276.148 li
414.5 274.549 li
414.7 274.148 li
414.9 275.148 li
415 276.349 li
415.2 276.349 li
415.4 275.849 li
415.5 276.748 li
415.7 279.248 li
415.9 281.049 li
416 280.049 li
416.2 277.849 li
416.4 277.248 li
416.5 278.549 li
416.7 279.148 li
416.9 276.849 li
417 273.549 li
417.2 270.849 li
417.4 269.349 li
417.5 268.549 li
417.7 267.349 li
417.9 266.349 li
418 265.349 li
418.2 263.748 li
418.4 261.948 li
418.5 260.248 li
418.7 258.248 li
418.9 256.448 li
419 256.148 li
419.2 257.148 li
419.4 257.948 li
419.6 257.349 li
419.7 256.049 li
419.9 255.849 li
420.1 256.648 li
420.2 257.248 li
420.4 257.448 li
420.6 258.049 li
420.7 259.248 li
420.9 261.849 li
421.1 265.349 li
421.2 267.648 li
421.4 268.948 li
421.6 270.748 li
421.7 273.849 li
421.9 277.648 li
422.1 281.448 li
422.2 284.349 li
422.4 286.448 li
422.6 287.648 li
422.7 287.349 li
422.9 286.049 li
423.1 284.349 li
423.2 282.849 li
423.4 281.849 li
423.6 281.748 li
423.8 282.849 li
423.9 284.748 li
424.1 287.448 li
424.3 289.849 li
424.4 290.549 li
424.6 291.049 li
424.8 292.448 li
424.9 293.248 li
425.1 292.448 li
425.3 290.248 li
425.4 288.648 li
425.6 288.148 li
425.8 288.148 li
425.9 287.549 li
426.1 285.349 li
426.3 282.549 li
426.4 280.549 li
426.6 279.349 li
426.8 279.049 li
426.9 278.948 li
427.1 278.549 li
427.3 278.248 li
427.4 278.948 li
427.6 279.748 li
427.8 278.648 li
428 276.448 li
428.1 274.648 li
428.3 273.748 li
428.5 274.148 li
428.6 274.849 li
428.8 274.849 li
429 273.448 li
429.1 270.748 li
429.3 268.148 li
429.5 266.349 li
429.6 266.349 li
429.8 267.948 li
430 268.948 li
395 209.148 mo
395.2 206.648 li
395.4 205.349 li
395.5 205.748 li
395.7 206.448 li
395.9 206.248 li
396 205.148 li
396.2 205.549 li
396.4 207.948 li
396.5 210.948 li
396.7 213.549 li
396.9 215.948 li
397 217.948 li
397.2 218.448 li
397.4 217.148 li
397.6 215.148 li
397.7 214.349 li
397.9 214.248 li
398.1 213.748 li
398.2 213.049 li
398.4 212.448 li
398.6 212.849 li
398.7 214.748 li
398.9 217.549 li
399.1 219.849 li
399.2 219.948 li
399.4 219.148 li
399.6 219.448 li
399.7 220.648 li
399.9 221.648 li
400.1 221.248 li
400.2 219.549 li
400.4 217.849 li
400.6 216.849 li
400.7 215.349 li
400.9 213.049 li
401.1 210.549 li
401.2 208.049 li
401.4 205.948 li
401.6 203.948 li
401.8 202.349 li
401.9 201.549 li
402.1 201.148 li
402.3 200.948 li
402.4 199.948 li
402.6 198.849 li
402.8 199.248 li
402.9 201.049 li
403.1 203.248 li
403.3 204.448 li
403.4 204.349 li
403.6 203.948 li
403.8 204.648 li
403.9 206.448 li
404.1 208.349 li
404.3 210.248 li
404.4 212.248 li
404.6 214.849 li
404.8 218.349 li
404.9 222.648 li
405.1 228.448 li
405.3 234.448 li
405.4 239.549 li
405.6 243.248 li
405.8 244.648 li
405.9 245.148 li
406.1 246.448 li
406.3 249.049 li
406.5 251.248 li
406.6 251.549 li
406.8 251.248 li
407 251.849 li
407.1 254.148 li
407.3 256.148 li
407.5 255.549 li
407.6 252.648 li
407.8 249.148 li
408 246.549 li
408.1 245.648 li
408.3 246.448 li
408.5 247.849 li
408.6 249.349 li
408.8 250.448 li
409 250.248 li
409.1 249.448 li
409.3 248.549 li
409.5 247.448 li
409.6 246.648 li
409.8 245.549 li
410 243.748 li
410.1 241.748 li
410.3 239.448 li
410.5 236.948 li
410.7 234.349 li
410.8 232.349 li
411 232.349 li
411.2 234.549 li
411.3 237.049 li
411.5 238.948 li
411.7 240.349 li
411.8 241.448 li
412 242.849 li
412.2 244.248 li
412.3 244.648 li
412.5 244.748 li
377.6 214.049 mo
377.7 212.448 li
377.9 212.049 li
378.1 211.648 li
378.2 210.049 li
378.4 208.849 li
378.6 209.849 li
378.7 211.049 li
378.9 210.948 li
379.1 211.248 li
379.2 213.349 li
379.4 216.148 li
379.6 217.748 li
379.7 218.648 li
379.9 219.349 li
380.1 219.549 li
380.2 219.148 li
380.4 217.248 li
380.6 214.148 li
380.8 211.648 li
380.9 211.148 li
381.1 210.849 li
381.3 208.849 li
381.4 207.148 li
381.6 207.448 li
381.8 209.448 li
381.9 211.849 li
382.1 213.049 li
382.3 213.248 li
382.4 213.349 li
382.6 214.349 li
382.8 215.049 li
382.9 214.448 li
383.1 213.148 li
383.3 211.748 li
383.4 210.549 li
383.6 210.049 li
383.8 210.349 li
383.9 210.448 li
384.1 210.349 li
384.3 210.448 li
384.4 210.448 li
384.6 210.549 li
384.8 211.049 li
385 212.248 li
385.1 214.248 li
385.3 215.849 li
385.5 216.948 li
385.6 218.248 li
385.8 220.049 li
386 221.448 li
386.1 221.349 li
386.3 220.748 li
386.5 220.948 li
386.6 221.248 li
386.8 221.248 li
387 220.448 li
387.1 219.248 li
387.3 217.948 li
387.5 216.748 li
387.6 216.148 li
387.8 215.748 li
388 215.448 li
388.1 215.049 li
388.3 215.148 li
388.5 215.748 li
388.6 215.748 li
388.8 215.448 li
389 216.049 li
389.2 217.849 li
389.3 220.748 li
389.5 222.948 li
389.7 223.349 li
389.8 221.748 li
390 220.349 li
390.2 219.849 li
390.3 218.748 li
390.5 216.148 li
390.7 213.349 li
390.8 212.648 li
391 214.748 li
391.2 217.148 li
391.3 217.049 li
391.5 214.648 li
391.7 212.549 li
391.8 212.349 li
392 213.049 li
392.2 213.248 li
392.3 212.349 li
392.5 211.549 li
392.7 211.448 li
392.8 211.448 li
393 210.648 li
393.2 207.948 li
393.4 204.248 li
393.5 200.748 li
393.7 198.948 li
393.9 198.748 li
394 198.648 li
394.2 199.049 li
394.4 200.849 li
394.5 204.248 li
394.7 208.248 li
394.9 210.148 li
395 209.148 li
360.1 222.448 mo
360.3 225.148 li
360.4 227.148 li
360.6 226.748 li
360.8 226.148 li
360.9 226.849 li
361.1 227.748 li
361.3 227.948 li
361.4 228.148 li
361.6 229.349 li
361.8 230.049 li
361.9 229.248 li
362.1 228.349 li
362.3 228.549 li
362.4 228.648 li
362.6 227.948 li
362.8 227.648 li
362.9 227.948 li
363.1 229.549 li
363.3 232.748 li
363.5 234.948 li
363.6 234.849 li
363.8 233.748 li
364 233.248 li
364.1 232.948 li
364.3 231.448 li
364.5 229.248 li
364.6 228.448 li
364.8 229.648 li
365 231.248 li
365.1 232.549 li
365.3 233.549 li
365.5 233.849 li
365.6 232.849 li
365.8 230.849 li
366 228.748 li
366.1 227.248 li
366.3 226.648 li
366.5 226.049 li
366.6 225.748 li
366.8 226.648 li
367 227.448 li
367.1 227.549 li
367.3 228.148 li
367.5 230.049 li
367.7 232.748 li
367.8 235.248 li
368 236.948 li
368.2 238.049 li
368.3 239.448 li
368.5 241.248 li
368.7 241.448 li
368.8 239.349 li
369 235.948 li
369.2 234.148 li
369.3 234.148 li
369.5 233.549 li
369.7 232.148 li
369.8 230.849 li
370 231.248 li
370.2 232.948 li
370.3 234.248 li
370.5 234.849 li
370.7 234.748 li
370.8 234.248 li
371 232.248 li
371.2 229.349 li
371.3 227.648 li
371.5 227.549 li
371.7 227.648 li
371.9 226.849 li
372 226.648 li
372.2 228.049 li
372.4 230.248 li
372.5 230.748 li
372.7 228.948 li
372.9 227.349 li
373 226.549 li
373.2 225.148 li
373.4 222.448 li
373.5 219.148 li
373.7 217.049 li
373.9 216.849 li
374 218.648 li
374.2 220.549 li
374.4 221.248 li
374.5 221.648 li
374.7 222.648 li
374.9 223.849 li
375 223.948 li
375.2 223.248 li
375.4 222.948 li
375.5 222.648 li
375.7 221.948 li
375.9 220.748 li
376.101 219.948 li
376.2 220.648 li
376.4 221.349 li
376.601 220.148 li
376.7 217.648 li
376.9 217.049 li
377.101 217.448 li
377.2 216.948 li
377.4 215.849 li
377.601 214.049 li
342.6 219.448 mo
342.8 220.148 li
343 222.448 li
343.1 224.748 li
343.3 226.648 li
343.5 227.849 li
343.6 227.748 li
343.8 227.148 li
344 226.948 li
344.1 227.748 li
344.3 228.748 li
344.5 228.849 li
344.6 228.248 li
344.8 227.948 li
345 228.849 li
345.1 229.748 li
345.3 229.648 li
345.5 228.849 li
345.6 229.248 li
345.8 231.248 li
346 232.448 li
346.2 231.448 li
346.3 228.748 li
346.5 226.849 li
346.7 228.549 li
346.8 231.948 li
347 233.248 li
347.2 232.549 li
347.3 231.549 li
347.5 231.549 li
347.7 231.648 li
347.8 230.349 li
348 228.248 li
348.2 226.148 li
348.3 226.349 li
348.5 228.748 li
348.7 230.648 li
348.8 231.049 li
349 230.248 li
349.2 229.448 li
349.3 230.049 li
349.5 231.648 li
349.7 233.349 li
349.8 234.448 li
350 235.448 li
350.2 236.948 li
350.4 238.448 li
350.5 239.148 li
350.7 238.349 li
350.9 236.148 li
351 233.049 li
351.2 230.748 li
351.4 230.948 li
351.5 231.248 li
351.7 229.849 li
351.9 227.648 li
352 226.349 li
352.2 226.148 li
352.4 225.248 li
352.5 223.349 li
352.7 222.248 li
352.9 222.948 li
353 223.948 li
353.2 224.148 li
353.4 224.549 li
353.5 225.448 li
353.7 227.248 li
353.9 229.849 li
354 230.549 li
354.2 229.748 li
354.4 228.849 li
354.6 227.948 li
354.7 227.849 li
354.9 227.948 li
355.1 227.448 li
355.2 225.849 li
355.4 223.448 li
355.6 221.549 li
355.7 221.248 li
355.9 221.748 li
356.1 221.448 li
356.2 219.948 li
356.4 218.148 li
356.6 216.948 li
356.7 216.748 li
356.9 216.248 li
357.1 215.049 li
357.2 214.748 li
357.4 214.648 li
357.6 213.748 li
357.7 212.148 li
357.9 210.948 li
358.1 210.049 li
358.2 209.748 li
358.4 209.849 li
358.6 209.648 li
358.7 209.349 li
358.9 209.849 li
359.1 211.849 li
359.3 214.148 li
359.4 215.648 li
359.6 216.349 li
359.8 217.448 li
359.9 219.849 li
360.1 222.448 li
325.2 191.948 mo
325.3 191.849 li
325.5 191.648 li
325.7 191.748 li
325.8 192.549 li
326 192.849 li
326.2 192.748 li
326.3 192.648 li
326.5 192.148 li
326.7 190.748 li
326.8 188.948 li
327 188.049 li
327.2 188.248 li
327.3 189.549 li
327.5 191.049 li
327.7 193.148 li
327.8 196.248 li
328 199.349 li
328.2 201.148 li
328.3 201.448 li
328.5 201.148 li
328.7 200.948 li
328.9 201.448 li
329 202.849 li
329.2 203.849 li
329.4 205.549 li
329.5 208.049 li
329.7 208.948 li
329.9 208.748 li
330 208.349 li
330.2 207.549 li
330.4 206.448 li
330.5 205.748 li
330.7 206.148 li
330.9 206.549 li
331 205.648 li
331.2 203.549 li
331.4 201.648 li
331.5 201.248 li
331.7 202.248 li
331.9 203.549 li
332 203.148 li
332.2 201.948 li
332.4 202.148 li
332.5 203.049 li
332.7 204.248 li
332.9 205.148 li
333.1 205.448 li
333.2 206.549 li
333.4 209.248 li
333.6 212.248 li
333.7 213.648 li
333.9 214.549 li
334.1 216.349 li
334.2 217.448 li
334.4 215.448 li
334.6 211.748 li
334.7 210.448 li
334.9 211.448 li
335.1 212.948 li
335.2 214.349 li
335.4 214.849 li
335.6 214.948 li
335.7 215.448 li
335.9 216.549 li
336.1 218.349 li
336.2 220.148 li
336.4 221.248 li
336.6 221.248 li
336.7 220.748 li
336.9 220.049 li
337.1 218.849 li
337.3 216.748 li
337.4 214.349 li
337.6 213.448 li
337.8 213.549 li
337.9 213.549 li
338.1 213.349 li
338.3 212.648 li
338.4 213.049 li
338.6 215.148 li
338.8 216.349 li
338.9 215.549 li
339.1 214.049 li
339.3 213.349 li
339.4 213.248 li
339.6 212.648 li
339.8 211.349 li
339.9 210.549 li
340.1 211.349 li
340.3 213.849 li
340.4 217.748 li
340.6 219.648 li
340.8 219.349 li
340.9 219.648 li
341.1 220.648 li
341.3 221.049 li
341.5 220.349 li
341.6 219.748 li
341.8 219.748 li
342 220.248 li
342.1 220.448 li
342.3 219.849 li
342.5 219.549 li
342.6 219.448 li
307.7 161.248 mo
307.9 160.849 li
308 160.748 li
308.2 161.748 li
308.4 163.549 li
308.5 165.148 li
308.7 165.448 li
308.9 165.549 li
309 166.648 li
309.2 167.648 li
309.4 167.448 li
309.5 166.448 li
309.7 166.049 li
309.9 166.948 li
310 167.948 li
310.2 168.648 li
310.4 168.948 li
310.5 168.648 li
310.7 168.748 li
310.9 169.648 li
311 170.849 li
311.2 171.648 li
311.4 172.248 li
311.6 173.549 li
311.7 174.849 li
311.9 176.549 li
312.1 178.748 li
312.2 179.648 li
312.4 180.248 li
312.6 181.948 li
312.7 184.648 li
312.9 187.549 li
313.1 190.148 li
313.2 192.549 li
313.4 194.349 li
313.6 196.648 li
313.7 200.248 li
313.9 204.448 li
314.1 208.448 li
314.2 211.549 li
314.4 213.448 li
314.6 213.748 li
314.7 213.549 li
314.9 213.748 li
315.1 213.549 li
315.2 212.948 li
315.4 212.748 li
315.6 212.849 li
315.8 212.349 li
315.9 211.049 li
316.1 209.349 li
316.3 208.148 li
316.4 207.849 li
316.6 207.748 li
316.8 206.948 li
316.9 205.549 li
317.1 203.948 li
317.3 202.849 li
317.4 202.748 li
317.6 202.849 li
317.8 202.349 li
317.9 201.148 li
318.1 200.148 li
318.3 199.748 li
318.4 199.248 li
318.6 197.948 li
318.8 196.349 li
318.9 195.248 li
319.1 194.948 li
319.3 194.448 li
319.4 193.049 li
319.6 191.248 li
319.8 190.148 li
319.9 190.248 li
320.1 190.248 li
320.3 189.648 li
320.5 188.748 li
320.6 187.849 li
320.8 187.849 li
321 188.648 li
321.1 190.448 li
321.3 192.349 li
321.5 193.448 li
321.6 193.948 li
321.8 193.849 li
322 193.148 li
322.1 191.748 li
322.3 190.349 li
322.5 190.148 li
322.6 190.248 li
322.8 190.148 li
323 188.948 li
323.1 187.148 li
323.3 186.748 li
323.5 188.549 li
323.6 191.349 li
323.8 193.248 li
324 193.648 li
324.1 193.648 li
324.3 194.049 li
324.5 195.148 li
324.7 195.849 li
324.8 194.948 li
325 193.049 li
325.2 191.948 li
290.2 105.748 mo
290.4 106.148 li
290.6 107.549 li
290.7 108.448 li
290.9 108.349 li
291.1 107.248 li
291.2 105.248 li
291.4 103.748 li
291.6 102.849 li
291.7 102.648 li
291.9 103.248 li
292.1 104.049 li
292.2 104.948 li
292.4 105.948 li
292.6 107.148 li
292.7 108.849 li
292.9 110.049 li
293.1 109.849 li
293.2 108.549 li
293.4 107.549 li
293.6 107.648 li
293.7 108.349 li
293.9 109.448 li
294.1 110.148 li
294.3 110.549 li
294.4 111.448 li
294.6 112.748 li
294.8 113.748 li
294.9 114.349 li
295.1 115.349 li
295.3 117.248 li
295.4 118.948 li
295.6 119.849 li
295.8 119.849 li
295.9 118.748 li
296.1 117.349 li
296.3 117.049 li
296.4 118.049 li
296.6 119.948 li
296.8 121.648 li
296.9 122.349 li
297.1 122.549 li
297.3 123.248 li
297.4 124.549 li
297.6 125.549 li
297.8 125.648 li
297.9 125.349 li
298.1 125.648 li
298.3 126.648 li
298.4 128.248 li
298.6 130.349 li
298.8 132.248 li
299 133.849 li
299.1 135.748 li
299.3 138.148 li
299.5 140.549 li
299.6 141.448 li
299.8 141.849 li
300 143.248 li
300.1 145.549 li
300.3 148.849 li
300.5 152.748 li
300.6 156.148 li
300.8 159.049 li
301 162.148 li
301.1 165.549 li
301.3 168.948 li
301.5 171.648 li
301.6 173.248 li
301.8 174.049 li
302 174.948 li
302.1 176.549 li
302.3 178.448 li
302.5 179.648 li
302.6 179.549 li
302.8 179.049 li
303 178.849 li
303.2 178.648 li
303.3 178.648 li
303.5 178.948 li
303.7 178.648 li
303.8 177.049 li
304 175.349 li
304.2 174.049 li
304.3 173.349 li
304.5 173.049 li
304.7 171.549 li
304.8 169.248 li
305 167.448 li
305.2 166.648 li
305.3 166.448 li
305.5 166.349 li
305.7 166.549 li
305.8 166.948 li
306 167.549 li
306.2 168.448 li
306.3 168.549 li
306.5 167.349 li
306.7 166.448 li
306.8 165.849 li
307 165.349 li
307.2 164.349 li
307.4 162.948 li
307.5 161.748 li
307.7 161.248 li
272.8 75.4482 mo
272.9 76.0488 li
273.1 76.6484 li
273.3 76.748 li
273.4 76.748 li
273.6 77.1484 li
273.8 77.8486 li
273.9 78.3486 li
274.1 79.0488 li
274.3 79.8486 li
274.4 80.0488 li
274.6 79.6484 li
274.8 79.1484 li
274.9 78.748 li
275.1 77.9482 li
275.3 76.9482 li
275.4 76.748 li
275.6 77.0488 li
275.8 77.6484 li
275.9 78.5488 li
276.1 79.4482 li
276.3 79.9482 li
276.4 79.748 li
276.6 79.3486 li
276.8 79.5488 li
277 80.0488 li
277.1 80.4482 li
277.3 80.8486 li
277.5 81.5488 li
277.6 82.748 li
277.8 83.9482 li
278 84.4482 li
278.1 84.5488 li
278.3 85.1484 li
278.5 86.8486 li
278.6 88.9482 li
278.8 90.6484 li
279 91.1484 li
279.1 90.9482 li
279.3 91.1484 li
279.5 92.248 li
279.6 93.0488 li
279.8 92.6484 li
280 92.0488 li
280.1 92.6484 li
280.3 93.5488 li
280.5 93.9482 li
280.6 94.0488 li
280.8 94.248 li
281 94.8486 li
281.1 96.5488 li
281.3 98.748 li
281.5 100.248 li
281.7 100.849 li
281.8 101.148 li
282 101.448 li
282.2 101.448 li
282.3 100.549 li
282.5 99.6484 li
282.7 99.0488 li
282.8 98.6484 li
283 98.9482 li
283.2 99.6484 li
283.3 99.9482 li
283.5 99.748 li
283.7 99.0488 li
283.8 98.248 li
284 97.6484 li
284.2 97.4482 li
284.3 97.9482 li
284.5 98.6484 li
284.7 99.3486 li
284.8 100.049 li
285 101.349 li
285.2 102.748 li
285.3 103.148 li
285.5 102.448 li
285.7 101.648 li
285.9 101.349 li
286 101.349 li
286.2 101.549 li
286.4 101.049 li
286.5 99.8486 li
286.7 98.9482 li
286.9 98.748 li
287 98.748 li
287.2 98.6484 li
287.4 98.5488 li
287.5 98.6484 li
287.7 99.5488 li
287.9 101.049 li
288 102.849 li
288.2 103.948 li
288.4 104.648 li
288.5 105.849 li
288.7 107.248 li
288.9 108.448 li
289 109.248 li
289.2 109.448 li
289.4 109.349 li
289.5 109.049 li
289.7 108.748 li
289.9 107.948 li
290.1 106.549 li
290.2 105.748 li
255.3 45.9482 mo
255.5 46.5483 li
255.6 47.3486 li
255.8 48.3486 li
256 49.3486 li
256.1 49.9482 li
256.3 50.3486 li
256.5 50.8486 li
256.6 51.5483 li
256.8 52.2485 li
257 52.7485 li
257.1 53.2485 li
257.3 53.8486 li
257.5 54.4482 li
257.6 54.9482 li
257.8 55.2485 li
258 55.3486 li
258.1 55.3486 li
258.3 55.3486 li
258.5 55.1484 li
258.6 54.6484 li
258.8 54.4482 li
259 54.2485 li
259.1 54.2485 li
259.3 54.7485 li
259.5 54.6484 li
259.6 54.0483 li
259.8 53.8486 li
260 54.0483 li
260.2 53.9482 li
260.3 53.8486 li
260.5 53.6484 li
260.7 53.2485 li
260.8 53.0483 li
261 53.2485 li
261.2 53.4482 li
261.3 54.2485 li
261.5 55.8486 li
261.7 57.5483 li
261.8 59.0483 li
262 60.1484 li
262.2 60.4482 li
262.3 60.0483 li
262.5 59.9482 li
262.7 60.3486 li
262.8 60.6484 li
263 61.1484 li
263.2 62.0483 li
263.3 62.9482 li
263.5 63.8486 li
263.7 65.0483 li
263.8 66.4482 li
264 67.8486 li
264.2 68.9482 li
264.4 69.4482 li
264.5 69.8486 li
264.7 70.3486 li
264.9 70.8486 li
265 71.248 li
265.2 71.3486 li
265.4 71.3486 li
265.5 71.4482 li
265.7 71.748 li
265.9 71.3486 li
266 70.6484 li
266.2 70.5488 li
266.4 71.1484 li
266.5 71.6484 li
266.7 72.0488 li
266.9 72.3486 li
267 72.748 li
267.2 73.248 li
267.4 73.748 li
267.5 74.4482 li
267.7 75.3486 li
267.9 75.6484 li
268 75.5488 li
268.2 75.6484 li
268.4 75.9482 li
268.6 76.1484 li
268.7 76.0488 li
268.9 75.748 li
269.1 75.5488 li
269.2 75.9482 li
269.4 76.748 li
269.6 77.6484 li
269.7 78.5488 li
269.9 79.0488 li
270.1 79.0488 li
270.2 79.1484 li
270.4 78.9482 li
270.6 78.1484 li
270.7 76.748 li
270.9 75.3486 li
271.1 73.9482 li
271.2 72.5488 li
271.4 71.8486 li
271.6 72.0488 li
271.7 72.6484 li
271.9 73.248 li
272.1 73.9482 li
272.2 74.3486 li
272.4 74.6484 li
272.6 75.0488 li
272.8 75.4482 li
237.8 44.5483 mo
238 44.6484 li
238.1 44.4482 li
238.3 44.1484 li
238.5 43.7485 li
238.7 43.5483 li
238.8 43.6484 li
239 43.7485 li
239.2 43.6484 li
239.3 43.0483 li
239.5 42.3486 li
239.7 41.8486 li
239.8 41.7485 li
240 41.7485 li
240.2 41.4482 li
240.3 40.8486 li
240.5 40.3486 li
240.7 39.8486 li
240.8 39.6484 li
241 39.8486 li
241.2 40.2485 li
241.3 40.6484 li
241.5 41.0483 li
241.7 41.2485 li
241.8 41.5483 li
242 42.0483 li
242.2 42.5483 li
242.3 43.0483 li
242.5 43.5483 li
242.7 44.1484 li
242.9 44.6484 li
243 45.2485 li
243.2 45.7485 li
243.4 45.9482 li
243.5 46.0483 li
243.7 46.1484 li
243.9 46.0483 li
244 45.4482 li
244.2 44.8486 li
244.4 44.3486 li
244.5 43.6484 li
244.7 42.6484 li
244.9 41.9482 li
245 41.9482 li
245.2 42.3486 li
245.4 42.7485 li
245.5 43.0483 li
245.7 43.2485 li
245.9 43.4482 li
246 43.7485 li
246.2 43.8486 li
246.4 43.6484 li
246.5 43.3486 li
246.7 42.8486 li
246.9 42.2485 li
247.1 41.6484 li
247.2 41.4482 li
247.4 41.2485 li
247.6 41.0483 li
247.7 41.5483 li
247.9 42.2485 li
248.1 42.8486 li
248.2 43.6484 li
248.4 44.5483 li
248.6 45.1484 li
248.7 45.3486 li
248.9 45.5483 li
249.1 45.8486 li
249.2 46.1484 li
249.4 46.2485 li
249.6 46.0483 li
249.7 45.6484 li
249.9 45.6484 li
250.1 45.8486 li
250.2 45.7485 li
250.4 45.2485 li
250.6 44.6484 li
250.7 44.0483 li
250.9 43.8486 li
251.1 44.1484 li
251.3 44.3486 li
251.4 44.5483 li
251.6 45.0483 li
251.8 45.9482 li
251.9 46.8486 li
252.1 47.5483 li
252.3 47.9482 li
252.4 48.1484 li
252.6 48.1484 li
252.8 48.1484 li
252.9 48.1484 li
253.1 47.8486 li
253.3 47.2485 li
253.4 46.9482 li
253.6 46.6484 li
253.8 46.2485 li
253.9 46.0483 li
254.1 45.7485 li
254.3 45.4482 li
254.4 45.3486 li
254.6 45.1484 li
254.8 45.0483 li
254.9 45.3486 li
255.1 45.6484 li
255.3 45.9482 li
220.3 38.5483 mo
220.5 40.3486 li
220.7 41.7485 li
220.8 42.3486 li
221 42.5483 li
221.2 42.7485 li
221.4 43.0483 li
221.5 43.3486 li
221.7 43.7485 li
221.9 44.0483 li
222 44.6484 li
222.2 45.6484 li
222.4 46.3486 li
222.5 46.4482 li
222.7 46.5483 li
222.9 46.8486 li
223 47.4482 li
223.2 48.4482 li
223.4 49.0483 li
223.5 49.5483 li
223.7 50.2485 li
223.9 51.0483 li
224 51.6484 li
224.2 51.9482 li
224.4 51.8486 li
224.5 51.3486 li
224.7 50.1484 li
224.9 48.6484 li
225 46.8486 li
225.2 45.3486 li
225.4 44.9482 li
225.6 44.9482 li
225.7 44.3486 li
225.9 43.0483 li
226.1 40.9482 li
226.2 38.8486 li
226.4 37.5483 li
226.6 36.8486 li
226.7 35.4482 li
226.9 33.4482 li
227.1 30.7485 li
227.2 29.1484 li
227.4 31.1484 li
227.6 34.9482 li
227.7 38.3486 li
227.9 41.4482 li
228.1 43.8486 li
228.2 45.0483 li
228.4 45.8486 li
228.6 46.7485 li
228.7 46.6484 li
228.9 45.7485 li
229.1 45.0483 li
229.2 44.6484 li
229.4 44.1484 li
229.6 43.3486 li
229.8 42.6484 li
229.9 42.4482 li
230.1 42.3486 li
230.3 42.4482 li
230.4 42.6484 li
230.6 42.7485 li
230.8 42.6484 li
230.9 42.3486 li
231.1 42.0483 li
231.3 41.9482 li
231.4 42.1484 li
231.6 42.3486 li
231.8 42.3486 li
231.9 42.4482 li
232.1 42.8486 li
232.3 43.1484 li
232.4 43.1484 li
232.6 42.8486 li
232.8 42.2485 li
232.9 41.6484 li
233.1 41.3486 li
233.3 41.2485 li
233.4 41.2485 li
233.6 41.0483 li
233.8 40.8486 li
233.9 40.7485 li
234.1 40.7485 li
234.3 40.8486 li
234.5 40.9482 li
234.6 40.8486 li
234.8 40.9482 li
235 41.0483 li
235.1 41.4482 li
235.3 41.9482 li
235.5 42.5483 li
235.6 42.9482 li
235.8 43.0483 li
236 43.1484 li
236.1 43.2485 li
236.3 43.3486 li
236.5 43.3486 li
236.6 43.4482 li
236.8 43.6484 li
237 44.1484 li
237.101 44.7485 li
237.3 44.7485 li
237.5 44.4482 li
237.6 44.4482 li
237.8 44.5483 li
202.9 59.3486 mo
203 60.6484 li
203.2 61.7485 li
203.4 62.9482 li
203.5 63.4482 li
203.7 63.4482 li
203.9 63.8486 li
204.1 64.4482 li
204.2 64.7485 li
204.4 64.7485 li
204.6 64.3486 li
204.7 63.3486 li
204.9 62.9482 li
205.1 63.0483 li
205.2 63.4482 li
205.4 64.7485 li
205.6 66.5488 li
205.7 68.0488 li
205.9 69.248 li
206.1 70.0488 li
206.2 70.6484 li
206.4 71.1484 li
206.6 71.5488 li
206.7 71.8486 li
206.9 71.9482 li
207.1 71.9482 li
207.2 72.1484 li
207.4 72.248 li
207.6 72.5488 li
207.7 73.248 li
207.9 73.748 li
208.1 73.9482 li
208.3 74.3486 li
208.4 74.748 li
208.6 75.3486 li
208.8 76.0488 li
208.9 76.5488 li
209.1 76.6484 li
209.3 76.4482 li
209.4 76.3486 li
209.6 76.1484 li
209.8 75.4482 li
209.9 74.4482 li
210.1 73.4482 li
210.3 72.5488 li
210.4 71.6484 li
210.6 71.1484 li
210.8 70.8486 li
210.9 70.748 li
211.1 70.9482 li
211.3 71.248 li
211.4 71.8486 li
211.6 72.6484 li
211.8 73.0488 li
211.9 73.1484 li
212.1 73.1484 li
212.3 73.1484 li
212.4 73.3486 li
212.6 73.5488 li
212.8 73.5488 li
213 73.6484 li
213.1 73.8486 li
213.3 74.0488 li
213.5 73.9482 li
213.6 73.8486 li
213.8 73.5488 li
214 73.248 li
214.1 72.748 li
214.3 71.8486 li
214.5 70.9482 li
214.6 69.8486 li
214.8 68.6484 li
215 67.3486 li
215.1 65.6484 li
215.3 63.5483 li
215.5 61.5483 li
215.6 59.8486 li
215.8 58.1484 li
216 56.9482 li
216.1 56.2485 li
216.3 56.3486 li
216.5 57.3486 li
216.6 58.4482 li
216.8 59.1484 li
217 59.5483 li
217.2 59.6484 li
217.3 59.2485 li
217.5 58.1484 li
217.7 56.9482 li
217.8 55.8486 li
218 54.9482 li
218.2 54.3486 li
218.3 53.5483 li
218.5 52.4482 li
218.7 51.2485 li
218.8 49.8486 li
219 48.7485 li
219.2 48.3486 li
219.3 47.8486 li
219.5 46.4482 li
219.7 44.4482 li
219.8 42.3486 li
220 39.6484 li
220.2 37.8486 li
220.3 38.5483 li
185.4 47.3486 mo
185.6 46.5483 li
185.7 46.1484 li
185.9 45.8486 li
186.1 45.7485 li
186.2 46.1484 li
186.4 46.2485 li
186.6 45.8486 li
186.8 46.0483 li
186.9 46.9482 li
187.1 47.3486 li
187.3 47.3486 li
187.4 47.2485 li
187.6 47.3486 li
187.8 47.4482 li
187.9 47.7485 li
188.1 47.8486 li
188.3 47.0483 li
188.4 46.2485 li
188.6 46.2485 li
188.8 46.4482 li
188.9 46.4482 li
189.1 46.4482 li
189.3 46.7485 li
189.4 47.1484 li
189.6 47.4482 li
189.8 47.7485 li
189.9 47.8486 li
190.1 47.5483 li
190.3 47.1484 li
190.4 46.9482 li
190.6 46.3486 li
190.8 45.6484 li
190.9 45.3486 li
191.1 45.2485 li
191.3 45.2485 li
191.5 45.3486 li
191.6 45.3486 li
191.8 45.2485 li
192 45.7485 li
192.1 46.4482 li
192.3 46.8486 li
192.5 46.8486 li
192.6 46.8486 li
192.8 46.6484 li
193 46.4482 li
193.1 46.3486 li
193.3 46.5483 li
193.5 47.0483 li
193.6 47.9482 li
193.8 48.7485 li
194 48.8486 li
194.1 48.3486 li
194.3 47.9482 li
194.5 47.6484 li
194.6 47.0483 li
194.8 45.8486 li
195 44.5483 li
195.1 43.6484 li
195.3 43.1484 li
195.5 42.5483 li
195.7 42.4482 li
195.8 42.6484 li
196 42.8486 li
196.2 43.2485 li
196.3 43.5483 li
196.5 44.2485 li
196.7 45.5483 li
196.8 46.8486 li
197 47.1484 li
197.2 46.9482 li
197.3 46.6484 li
197.5 46.8486 li
197.7 47.2485 li
197.8 47.2485 li
198 47.2485 li
198.2 47.4482 li
198.3 47.6484 li
198.5 47.9482 li
198.7 48.2485 li
198.8 48.3486 li
199 48.2485 li
199.2 48.0483 li
199.3 48.2485 li
199.5 49.2485 li
199.7 50.0483 li
199.9 50.2485 li
200 50.0483 li
200.2 49.9482 li
200.4 50.0483 li
200.5 50.1484 li
200.7 50.4482 li
200.9 50.9482 li
201 51.5483 li
201.2 52.1484 li
201.4 52.7485 li
201.5 53.3486 li
201.7 53.8486 li
201.9 54.2485 li
202 54.7485 li
202.2 55.4482 li
202.4 56.0483 li
202.5 56.8486 li
202.7 58.0483 li
202.9 59.3486 li
167.9 53.7485 mo
168.1 54.7485 li
168.3 55.5483 li
168.4 55.2485 li
168.6 54.3486 li
168.8 54.0483 li
168.9 53.8486 li
169.1 52.9482 li
169.3 51.6484 li
169.5 50.5483 li
169.6 50.3486 li
169.8 51.7485 li
170 53.7485 li
170.1 54.7485 li
170.3 54.8486 li
170.5 55.1484 li
170.6 55.8486 li
170.8 56.7485 li
171 57.5483 li
171.1 58.1484 li
171.3 58.4482 li
171.5 59.0483 li
171.6 59.1484 li
171.8 58.8486 li
172 58.5483 li
172.1 58.6484 li
172.3 58.9482 li
172.5 59.3486 li
172.6 59.0483 li
172.8 57.6484 li
173 55.5483 li
173.1 53.3486 li
173.3 51.4482 li
173.5 49.8486 li
173.7 48.4482 li
173.8 47.2485 li
174 45.6484 li
174.2 44.2485 li
174.3 43.1484 li
174.5 42.0483 li
174.7 40.8486 li
174.8 39.5483 li
175 37.9482 li
175.2 37.2485 li
175.3 37.9482 li
175.5 39.2485 li
175.7 39.8486 li
175.8 39.8486 li
176 39.8486 li
176.2 39.8486 li
176.3 39.8486 li
176.5 39.7485 li
176.7 39.4482 li
176.8 39.2485 li
177 39.7485 li
177.2 40.3486 li
177.3 40.6484 li
177.5 41.1484 li
177.7 41.7485 li
177.8 42.7485 li
178 43.9482 li
178.2 45.2485 li
178.4 46.2485 li
178.5 47.5483 li
178.7 48.5483 li
178.9 49.1484 li
179 49.6484 li
179.2 49.8486 li
179.4 49.8486 li
179.5 49.7485 li
179.7 49.9482 li
179.9 50.2485 li
180 50.6484 li
180.2 50.8486 li
180.4 51.0483 li
180.5 51.2485 li
180.7 51.8486 li
180.9 52.9482 li
181 53.8486 li
181.2 53.7485 li
181.4 52.7485 li
181.5 51.4482 li
181.7 50.0483 li
181.9 48.8486 li
182 47.8486 li
182.2 46.9482 li
182.4 46.7485 li
182.6 46.9482 li
182.7 47.4482 li
182.9 48.0483 li
183.1 47.5483 li
183.2 46.4482 li
183.4 46.1484 li
183.6 46.3486 li
183.7 46.3486 li
183.9 46.2485 li
184.1 46.5483 li
184.2 47.1484 li
184.4 48.1484 li
184.6 48.8486 li
184.7 48.6484 li
184.9 48.2485 li
185.1 48.1484 li
185.2 47.9482 li
185.4 47.3486 li
150.5 49.9482 mo
150.6 48.6484 li
150.8 47.8486 li
151 47.0483 li
151.1 46.4482 li
151.3 46.1484 li
151.5 45.2485 li
151.6 43.7485 li
151.8 42.3486 li
152 40.8486 li
152.1 39.4482 li
152.3 38.8486 li
152.5 38.2485 li
152.7 37.4482 li
152.8 36.3486 li
153 35.6484 li
153.2 36.6484 li
153.3 38.6484 li
153.5 39.9482 li
153.7 40.8486 li
153.8 42.2485 li
154 43.3486 li
154.2 44.1484 li
154.3 45.2485 li
154.5 46.0483 li
154.7 45.7485 li
154.8 45.9482 li
155 46.6484 li
155.2 46.9482 li
155.3 47.0483 li
155.5 47.1484 li
155.7 46.8486 li
155.8 46.0483 li
156 45.0483 li
156.2 43.9482 li
156.3 43.1484 li
156.5 42.6484 li
156.7 42.2485 li
156.9 42.5483 li
157 43.1484 li
157.2 43.9482 li
157.4 45.0483 li
157.5 46.2485 li
157.7 47.5483 li
157.9 49.1484 li
158 50.3486 li
158.2 50.7485 li
158.4 50.9482 li
158.5 51.2485 li
158.7 51.2485 li
158.9 51.2485 li
159 51.1484 li
159.2 51.0483 li
159.4 51.2485 li
159.5 51.4482 li
159.7 51.6484 li
159.9 52.0483 li
160 52.8486 li
160.2 54.1484 li
160.4 55.3486 li
160.5 55.7485 li
160.7 55.4482 li
160.9 55.0483 li
161.1 55.0483 li
161.2 55.4482 li
161.4 55.3486 li
161.6 55.1484 li
161.7 55.3486 li
161.9 55.6484 li
162.1 55.7485 li
162.2 56.1484 li
162.4 56.6484 li
162.6 56.2485 li
162.7 55.6484 li
162.9 54.8486 li
163.1 53.7485 li
163.2 52.5483 li
163.4 51.3486 li
163.6 50.3486 li
163.7 49.5483 li
163.9 48.8486 li
164.1 48.2485 li
164.2 47.6484 li
164.4 47.4482 li
164.6 47.6484 li
164.7 48.1484 li
164.9 48.8486 li
165.1 49.1484 li
165.3 48.5483 li
165.4 47.5483 li
165.6 46.9482 li
165.8 46.5483 li
165.9 46.4482 li
166.1 46.4482 li
166.3 46.5483 li
166.4 46.9482 li
166.6 47.7485 li
166.8 48.7485 li
166.9 50.0483 li
167.1 51.2485 li
167.3 51.9482 li
167.4 52.2485 li
167.6 52.6484 li
167.8 53.0483 li
167.9 53.7485 li
133 49.8486 mo
133.2 50.0483 li
133.3 50.3486 li
133.5 50.6484 li
133.7 51.0483 li
133.8 51.0483 li
134 50.7485 li
134.2 50.4482 li
134.3 50.6484 li
134.5 50.7485 li
134.7 50.5483 li
134.8 50.3486 li
135 50.4482 li
135.2 50.8486 li
135.4 51.1484 li
135.5 51.3486 li
135.7 51.3486 li
135.9 51.4482 li
136 51.6484 li
136.2 52.2485 li
136.4 52.8486 li
136.5 52.6484 li
136.7 51.5483 li
136.9 50.5483 li
137 49.9482 li
137.2 49.7485 li
137.4 50.0483 li
137.5 50.1484 li
137.7 50.1484 li
137.9 50.2485 li
138 50.0483 li
138.2 49.4482 li
138.4 48.4482 li
138.5 47.4482 li
138.7 46.3486 li
138.9 45.1484 li
139 44.4482 li
139.2 44.8486 li
139.4 45.7485 li
139.6 46.8486 li
139.7 47.9482 li
139.9 48.6484 li
140.1 49.2485 li
140.2 49.9482 li
140.4 50.3486 li
140.6 49.8486 li
140.7 48.9482 li
140.9 48.4482 li
141.1 48.7485 li
141.2 49.3486 li
141.4 50.1484 li
141.6 51.2485 li
141.7 52.5483 li
141.9 53.9482 li
142.1 54.7485 li
142.2 54.3486 li
142.4 52.8486 li
142.6 51.3486 li
142.7 49.9482 li
142.9 48.8486 li
143.1 47.8486 li
143.2 47.8486 li
143.4 49.1484 li
143.6 50.4482 li
143.8 50.8486 li
143.9 51.5483 li
144.1 52.3486 li
144.3 52.4482 li
144.4 52.1484 li
144.6 51.9482 li
144.8 51.7485 li
144.9 51.6484 li
145.1 51.6484 li
145.3 51.7485 li
145.4 51.7485 li
145.6 51.6484 li
145.8 51.4482 li
145.9 51.1484 li
146.1 50.9482 li
146.3 51.0483 li
146.4 51.0483 li
146.6 51.3486 li
146.8 52.0483 li
146.9 52.3486 li
147.1 52.8486 li
147.3 53.2485 li
147.4 53.1484 li
147.6 53.3486 li
147.8 53.4487 li
148 52.6484 li
148.1 51.7485 li
148.3 51.7485 li
148.5 51.9487 li
148.6 51.7485 li
148.8 51.6484 li
149 51.8486 li
149.1 52.4482 li
149.3 53.0483 li
149.5 53.0483 li
149.6 53.1484 li
149.8 53.6484 li
150 53.6484 li
150.1 52.8486 li
150.3 51.4487 li
150.5 49.9487 li
115.5 60.9482 mo
115.7 60.4482 li
115.9 59.7485 li
116 59.3486 li
116.2 59.4482 li
116.4 59.3486 li
116.5 59.6484 li
116.7 60.2485 li
116.9 60.5483 li
117 60.9482 li
117.2 61.4482 li
117.4 62.0483 li
117.5 63.1484 li
117.7 64.0483 li
117.9 64.7485 li
118.1 65.4482 li
118.2 66.0483 li
118.4 66.248 li
118.6 65.8486 li
118.7 64.9482 li
118.9 64.0483 li
119.1 63.3486 li
119.2 62.6484 li
119.4 62.2485 li
119.6 61.9482 li
119.7 61.6484 li
119.9 61.6484 li
120.1 61.5483 li
120.2 61.5483 li
120.4 61.8486 li
120.6 62.3486 li
120.7 62.5483 li
120.9 62.5483 li
121.1 62.5483 li
121.2 62.1484 li
121.4 61.5483 li
121.6 60.9482 li
121.7 60.2485 li
121.9 59.0483 li
122.1 57.5483 li
122.3 56.4482 li
122.4 55.3486 li
122.6 54.3486 li
122.8 53.8486 li
122.9 53.4482 li
123.1 53.3486 li
123.3 53.7485 li
123.4 53.9482 li
123.6 53.6484 li
123.8 53.5483 li
123.9 53.2485 li
124.1 53.0483 li
124.3 52.5483 li
124.4 51.9482 li
124.6 51.4482 li
124.8 51.1484 li
124.9 50.8486 li
125.1 50.1484 li
125.3 49.2485 li
125.4 49.0483 li
125.6 49.5483 li
125.8 50.3486 li
125.9 51.2485 li
126.1 51.8486 li
126.3 52.0483 li
126.5 51.9482 li
126.6 52.0483 li
126.8 52.2485 li
127 52.4482 li
127.1 52.6484 li
127.3 53.1484 li
127.5 53.4482 li
127.6 53.5483 li
127.8 53.2485 li
128 52.7485 li
128.1 52.7485 li
128.3 52.3486 li
128.5 51.2485 li
128.6 50.2485 li
128.8 49.0483 li
129 47.3486 li
129.1 45.9482 li
129.3 45.8486 li
129.5 46.9482 li
129.6 48.1484 li
129.8 49.2485 li
130 50.2485 li
130.1 51.0483 li
130.3 51.2485 li
130.5 50.7485 li
130.6 49.9482 li
130.8 49.3486 li
131 48.7485 li
131.2 48.4482 li
131.3 48.5483 li
131.5 48.7485 li
131.7 49.1484 li
131.8 49.7485 li
132 50.0483 li
132.2 50.1484 li
132.3 50.2485 li
132.5 50.0483 li
132.7 49.8486 li
132.8 49.8486 li
133 49.8486 li
98.3999 78.9482 mo
98.6001 77.9482 li
98.7002 77.5488 li
98.8999 77.3486 li
99.1001 77.4482 li
99.2002 77.4482 li
99.3999 77.248 li
99.6001 76.8486 li
99.7002 76.4482 li
99.8999 76.0488 li
100.1 75.5488 li
100.2 74.9482 li
100.4 74.4482 li
100.6 74.248 li
100.8 74.248 li
100.9 74.3486 li
101.1 74.6484 li
101.3 74.8486 li
101.4 75.0488 li
101.6 75.0488 li
101.8 75.0488 li
101.9 74.8486 li
102.1 74.5488 li
102.3 74.1484 li
102.4 73.8486 li
102.6 73.5488 li
102.8 73.3486 li
102.9 73.5488 li
103.1 73.6484 li
103.3 73.5488 li
103.4 73.6484 li
103.6 73.9482 li
103.8 74.1484 li
103.9 74.248 li
104.1 74.248 li
104.3 73.9482 li
104.4 73.6484 li
104.6 73.4482 li
104.8 73.1484 li
105 72.6484 li
105.1 72.3486 li
105.3 72.4482 li
105.5 72.8486 li
105.6 72.8486 li
105.8 72.8486 li
106 73.0488 li
106.1 73.248 li
106.3 73.0488 li
106.5 72.5488 li
106.6 71.9482 li
106.8 71.4482 li
107 71.248 li
107.1 71.1484 li
107.3 71.0488 li
107.5 71.0488 li
107.6 71.0488 li
107.8 71.0488 li
108 71.1484 li
108.1 71.4482 li
108.3 71.5488 li
108.5 71.4482 li
108.6 71.0488 li
108.8 70.8486 li
109 70.748 li
109.1 70.748 li
109.3 70.748 li
109.5 70.9482 li
109.7 70.9482 li
109.8 70.9482 li
110 71.248 li
110.2 71.5488 li
110.3 71.9482 li
110.5 72.1484 li
110.7 72.0488 li
110.8 71.9482 li
111 72.1484 li
111.2 72.3486 li
111.3 71.9482 li
111.5 71.0488 li
111.7 69.9482 li
111.8 68.8486 li
112 67.748 li
112.2 66.748 li
112.3 66.1484 li
112.5 65.6484 li
112.7 65.1484 li
112.8 64.6484 li
113 64.0483 li
113.2 63.5483 li
113.3 63.6484 li
113.5 63.9482 li
113.7 64.2485 li
113.9 64.3486 li
114 64.4482 li
114.2 64.5483 li
114.4 64.0483 li
114.5 62.9482 li
114.7 61.8486 li
114.9 61.3486 li
115 61.2485 li
115.2 61.1484 li
115.4 61.1484 li
115.5 60.9482 li
540.9 337.648 mo
604.8 337.648 li
0 .960204 .946044 0 cmyk
@
.929717 .879728 .890196 .799985 cmyk
%ADOBeginSubsetFont: TimesNewRomanPSMT AddGlyphs
%ADOt1write: (1.0.24)
%%Copyright: Copyright 2012 Adobe System Incorporated. All rights reserved.
systemdict begin
BNSWMN+TimesNewRomanPSMT dup
/Private get dup rcheck
{begin true}{pop false}ifelse exch
/CharStrings get begin
systemdict /gcheck known {currentglobal currentdict gcheck setglobal} if
/w <1C60D8A8C9B6079F04262E67C9FB6DFF2B2A2909EEE6C74AA460646E6418
023C6B7542892CB61B617E90DA8C58C94D261B2066526778FA77F05506A363FE
5266E7C038D05568B67F867A9FF97988CC575C0A7C1F4DE18568CA203BA52391
7E8148BF72D6E4FEA4245E4F8E144E9C4F6DDF7EC6DAC323FEA1568E1A6C8D85
26507DC2E91B066C274F65DD58F049FFA3E606BF021DDA3B6174F51DB721A6C7
E1197FF1898AE92ADB1C1DD84FD7DEC1> |-
systemdict /gcheck known {setglobal} if end {end} if
end
BNSWMN+TimesNewRomanPSMT /Encoding get
dup 119 /w put
pop
%ADOEndSubsetFont
/BNSWMN+TimesNewRomanPSMT*1 
[32{/.notdef}rp /space 12{/.notdef}rp /hyphen 2{/.notdef}rp /zero /one /two 
/.notdef /four /.notdef /six /.notdef /eight 21{/.notdef}rp /N 
5{/.notdef}rp /T 2{/.notdef}rp /W 3{/.notdef}rp /bracketleft /.notdef /bracketright 
3{/.notdef}rp /a 3{/.notdef}rp /e /.notdef /g /.notdef /i 
3{/.notdef}rp /m /n /o /.notdef /q /r /s 
/t /u /.notdef /w 136{/.notdef}rp]
BNSWMN+TimesNewRomanPSMT nf
BNSWMN+TimesNewRomanPSMT*1 [24 0 0 -24 0 0 ]msf
403.039 369.648 mo
(Not wearing)sh
622.1 84.3486 mo
622.3 84.248 li
622.5 84.0488 li
622.6 83.748 li
622.8 83.248 li
623 82.5488 li
623.1 81.8486 li
623.3 81.5488 li
623.5 81.748 li
623.6 81.748 li
623.8 81.9482 li
624 82.4482 li
624.1 82.9482 li
624.3 83.1484 li
624.5 83.1484 li
624.6 83.248 li
624.8 83.6484 li
625 83.748 li
625.1 83.6484 li
625.3 83.8486 li
625.5 84.1484 li
625.7 84.4482 li
625.8 84.6484 li
626 84.748 li
626.2 84.3486 li
626.3 83.6484 li
626.5 83.0488 li
626.7 83.1484 li
626.8 83.5488 li
627 83.8486 li
627.2 83.6484 li
627.3 82.8486 li
627.5 81.748 li
627.7 80.6484 li
604.7 83.748 mo
604.8 83.748 li
605 83.5488 li
605.2 82.8486 li
605.3 81.8486 li
605.5 81.1484 li
605.7 81.3486 li
605.8 82.4482 li
606 83.748 li
606.2 84.6484 li
606.3 85.0488 li
606.5 84.9482 li
606.7 84.9482 li
606.8 85.248 li
607 85.4482 li
607.2 85.6484 li
607.3 85.9482 li
607.5 86.3486 li
607.7 86.0488 li
607.8 85.5488 li
608 85.248 li
608.2 84.9482 li
608.3 84.748 li
608.5 84.4482 li
608.7 84.0488 li
608.9 83.5488 li
609 83.1484 li
609.2 82.9482 li
609.4 82.748 li
609.5 82.5488 li
609.7 82.248 li
609.9 82.4482 li
610 82.5488 li
610.2 82.3486 li
610.4 82.4482 li
610.5 82.9482 li
610.7 83.3486 li
610.9 83.8486 li
611 84.3486 li
611.2 84.748 li
611.4 84.9482 li
611.5 85.0488 li
611.7 85.248 li
611.9 85.4482 li
612 85.4482 li
612.2 85.4482 li
612.4 85.4482 li
612.5 85.4482 li
612.7 85.1484 li
612.9 84.8486 li
613.101 84.6484 li
613.2 84.1484 li
613.4 83.4482 li
613.601 82.8486 li
613.7 82.8486 li
613.9 82.9482 li
614.101 82.8486 li
614.2 82.748 li
614.4 82.5488 li
614.601 82.4482 li
614.7 82.4482 li
614.9 82.3486 li
615.101 82.248 li
615.2 82.0488 li
615.4 81.8486 li
615.601 81.748 li
615.7 81.9482 li
615.9 82.0488 li
616.101 81.9482 li
616.2 81.9482 li
616.4 81.8486 li
616.601 81.748 li
616.7 81.4482 li
616.9 81.248 li
617.101 81.4482 li
617.301 81.9482 li
617.4 82.3486 li
617.601 82.748 li
617.801 83.0488 li
617.9 82.9482 li
618.101 82.8486 li
618.301 82.6484 li
618.4 82.4482 li
618.601 82.4482 li
618.801 82.5488 li
618.9 82.8486 li
619.101 83.0488 li
619.301 82.8486 li
619.4 82.5488 li
619.601 82.0488 li
619.801 81.8486 li
619.9 81.9482 li
620.101 82.4482 li
620.301 83.0488 li
620.4 83.748 li
620.601 84.4482 li
620.801 85.0488 li
620.9 85.5488 li
621.101 85.748 li
621.301 85.5488 li
621.5 85.248 li
621.601 85.1484 li
621.801 84.9482 li
622 84.5488 li
622.101 84.3486 li
587.2 81.8486 mo
587.4 82.8486 li
587.5 83.6484 li
587.7 84.3486 li
587.9 85.248 li
588 86.1484 li
588.2 87.0488 li
588.4 87.6484 li
588.5 87.3486 li
588.7 86.748 li
588.9 86.3486 li
589 85.9482 li
589.2 85.3486 li
589.4 84.8486 li
589.5 84.748 li
589.7 85.1484 li
589.9 85.6484 li
590 85.9482 li
590.2 85.9482 li
590.4 85.748 li
590.5 85.6484 li
590.7 85.4482 li
590.9 85.0488 li
591 84.748 li
591.2 84.5488 li
591.4 84.5488 li
591.6 84.4482 li
591.7 84.248 li
591.9 83.9482 li
592.1 83.6484 li
592.2 83.248 li
592.4 82.6484 li
592.6 82.5488 li
592.7 83.0488 li
592.9 83.6484 li
593.1 83.9482 li
593.2 83.748 li
593.4 83.248 li
593.601 83.0488 li
593.7 83.3486 li
593.9 83.9482 li
594.101 84.748 li
594.2 85.248 li
594.4 85.3486 li
594.601 85.1484 li
594.7 84.9482 li
594.9 85.0488 li
595.101 85.1484 li
595.2 84.9482 li
595.4 84.4482 li
595.601 84.0488 li
595.8 84.0488 li
595.9 84.1484 li
596.101 84.1484 li
596.3 84.248 li
596.4 84.0488 li
596.601 83.5488 li
596.8 83.248 li
596.9 83.248 li
597.101 83.0488 li
597.3 82.8486 li
597.4 83.1484 li
597.601 83.5488 li
597.8 83.6484 li
597.9 83.8486 li
598.101 83.748 li
598.301 83.3486 li
598.4 82.5488 li
598.601 81.748 li
598.801 81.4482 li
598.9 81.748 li
599.101 82.1484 li
599.301 82.4482 li
599.4 82.4482 li
599.601 82.248 li
599.801 81.8486 li
600 81.4482 li
600.101 81.4482 li
600.301 81.4482 li
600.5 81.4482 li
600.601 81.3486 li
600.801 81.3486 li
601 81.248 li
601.101 81.3486 li
601.301 81.748 li
601.5 81.8486 li
601.601 81.748 li
601.801 81.748 li
602 81.3486 li
602.101 80.748 li
602.301 80.5488 li
602.5 80.5488 li
602.601 80.4482 li
602.801 80.5488 li
603 81.4482 li
603.101 82.3486 li
603.301 82.9482 li
603.5 83.3486 li
603.601 83.6484 li
603.801 83.8486 li
604 83.748 li
604.2 83.5488 li
604.301 83.6484 li
604.5 83.748 li
604.7 83.748 li
569.7 82.5488 mo
569.9 82.8486 li
570.1 83.0488 li
570.2 83.1484 li
570.4 82.9482 li
570.6 82.6484 li
570.7 82.1484 li
570.9 81.4482 li
571.1 80.6484 li
571.2 80.248 li
571.4 80.248 li
571.6 80.6484 li
571.7 81.1484 li
571.9 81.3486 li
572.1 81.5488 li
572.2 82.0488 li
572.4 82.4482 li
572.6 82.6484 li
572.7 82.4482 li
572.9 82.0488 li
573.1 81.4482 li
573.2 80.748 li
573.4 80.3486 li
573.6 80.5488 li
573.7 80.9482 li
573.9 81.4482 li
574.101 82.0488 li
574.3 82.5488 li
574.4 82.748 li
574.601 82.748 li
574.8 82.3486 li
574.9 81.8486 li
575.101 80.9482 li
575.3 80.1484 li
575.4 79.4482 li
575.601 79.0488 li
575.8 78.8486 li
575.9 79.1484 li
576.101 79.5488 li
576.3 79.9482 li
576.4 80.3486 li
576.601 80.5488 li
576.8 80.3486 li
576.9 80.0488 li
577.101 79.748 li
577.3 79.9482 li
577.4 80.1484 li
577.601 80.248 li
577.8 80.3486 li
577.9 80.1484 li
578.101 79.748 li
578.3 80.1484 li
578.5 80.9482 li
578.601 81.6484 li
578.8 81.9482 li
579 82.3486 li
579.101 82.9482 li
579.301 82.748 li
579.5 81.9482 li
579.601 81.4482 li
579.801 81.5488 li
580 81.6484 li
580.101 81.6484 li
580.301 81.4482 li
580.5 81.1484 li
580.601 80.6484 li
580.801 80.3486 li
581 80.3486 li
581.101 80.4482 li
581.301 80.6484 li
581.5 80.748 li
581.601 80.748 li
581.801 80.8486 li
582 80.748 li
582.101 80.6484 li
582.301 80.5488 li
582.5 80.6484 li
582.7 80.748 li
582.801 80.748 li
583 80.6484 li
583.2 80.5488 li
583.301 80.4482 li
583.5 80.3486 li
583.7 80.3486 li
583.801 80.1484 li
584 79.5488 li
584.2 78.9482 li
584.301 78.748 li
584.5 78.748 li
584.7 78.9482 li
584.801 79.0488 li
585 79.1484 li
585.2 79.1484 li
585.301 79.3486 li
585.5 79.748 li
585.7 80.0488 li
585.801 79.9482 li
586 79.6484 li
586.2 79.3486 li
586.301 79.0488 li
586.5 79.0488 li
586.7 79.4482 li
586.9 80.248 li
587 81.0488 li
587.2 81.8486 li
552.2 80.9482 mo
552.4 81.1484 li
552.6 81.5488 li
552.8 81.9482 li
552.9 82.248 li
553.1 82.248 li
553.3 82.0488 li
553.4 81.9482 li
553.6 81.9482 li
553.8 81.8486 li
553.9 82.1484 li
554.1 82.748 li
554.3 83.4482 li
554.4 84.1484 li
554.6 84.748 li
554.8 85.0488 li
554.9 85.1484 li
555.1 85.1484 li
555.3 85.0488 li
555.4 84.748 li
555.6 84.3486 li
555.8 84.1484 li
555.9 84.0488 li
556.1 84.0488 li
556.3 84.0488 li
556.4 83.9482 li
556.6 83.5488 li
556.8 83.248 li
557 82.9482 li
557.1 82.8486 li
557.3 82.6484 li
557.5 82.6484 li
557.601 82.748 li
557.8 82.9482 li
558 83.1484 li
558.101 83.248 li
558.3 83.3486 li
558.5 83.248 li
558.601 82.9482 li
558.8 82.3486 li
559 81.748 li
559.101 81.248 li
559.3 80.8486 li
559.5 80.4482 li
559.601 80.0488 li
559.8 79.6484 li
560 79.248 li
560.101 78.9482 li
560.3 78.5488 li
560.5 78.3486 li
560.601 78.5488 li
560.8 78.8486 li
561 79.248 li
561.2 79.748 li
561.3 80.3486 li
561.5 81.1484 li
561.7 81.9482 li
561.8 82.9482 li
562 83.8486 li
562.2 84.748 li
562.3 85.1484 li
562.5 85.248 li
562.7 85.8486 li
562.801 86.9482 li
563 88.3486 li
563.2 88.9482 li
563.301 88.0488 li
563.5 86.6484 li
563.7 85.6484 li
563.801 84.748 li
564 84.1484 li
564.2 83.9482 li
564.301 83.748 li
564.5 83.4482 li
564.7 83.248 li
564.801 83.1484 li
565 83.0488 li
565.2 83.1484 li
565.4 83.248 li
565.5 83.1484 li
565.7 83.1484 li
565.9 83.3486 li
566 83.4482 li
566.2 83.3486 li
566.4 83.3486 li
566.5 83.4482 li
566.7 83.3486 li
566.9 82.5488 li
567 81.9482 li
567.2 81.6484 li
567.4 81.748 li
567.5 82.0488 li
567.7 82.1484 li
567.9 81.8486 li
568 81.3486 li
568.2 80.9482 li
568.4 80.748 li
568.5 80.4482 li
568.7 80.4482 li
568.9 80.8486 li
569 81.3486 li
569.2 81.4482 li
569.4 81.6484 li
569.5 82.0488 li
569.7 82.5488 li
534.8 77.3486 mo
534.9 77.5488 li
535.1 76.748 li
535.3 75.8486 li
535.5 75.3486 li
535.6 75.248 li
535.8 75.3486 li
536 75.3486 li
536.1 75.3486 li
536.3 75.3486 li
536.5 75.248 li
536.6 74.9482 li
536.8 74.6484 li
537 74.248 li
537.1 74.0488 li
537.3 73.9482 li
537.5 73.9482 li
537.6 74.248 li
537.8 74.6484 li
538 74.8486 li
538.1 74.6484 li
538.3 73.8486 li
538.5 73.248 li
538.6 73.1484 li
538.8 73.5488 li
539 74.1484 li
539.1 74.6484 li
539.3 75.0488 li
539.5 75.1484 li
539.7 74.8486 li
539.8 74.4482 li
540 74.248 li
540.2 73.9482 li
540.3 73.6484 li
540.5 73.6484 li
540.7 73.9482 li
540.8 74.1484 li
541 73.8486 li
541.2 73.3486 li
541.3 73.0488 li
541.5 73.0488 li
541.7 73.1484 li
541.8 73.248 li
542 73.4482 li
542.2 74.1484 li
542.3 75.3486 li
542.5 76.6484 li
542.7 77.5488 li
542.8 77.9482 li
543 78.3486 li
543.2 79.3486 li
543.3 80.3486 li
543.5 81.248 li
543.7 82.248 li
543.9 82.8486 li
544 83.3486 li
544.2 83.4482 li
544.4 83.4482 li
544.5 83.9482 li
544.7 84.4482 li
544.9 84.748 li
545 85.0488 li
545.2 85.248 li
545.4 85.4482 li
545.5 85.3486 li
545.7 84.8486 li
545.9 84.5488 li
546 84.4482 li
546.2 84.5488 li
546.4 84.9482 li
546.5 85.0488 li
546.7 84.9482 li
546.9 85.1484 li
547 85.748 li
547.2 86.248 li
547.4 86.3486 li
547.5 86.1484 li
547.7 85.9482 li
547.9 85.6484 li
548 85.3486 li
548.2 85.1484 li
548.4 84.8486 li
548.6 84.8486 li
548.7 84.6484 li
548.9 84.3486 li
549.1 83.748 li
549.2 83.0488 li
549.4 82.5488 li
549.6 82.3486 li
549.7 82.4482 li
549.9 82.6484 li
550.1 82.6484 li
550.2 82.748 li
550.4 82.748 li
550.6 82.5488 li
550.7 82.248 li
550.9 81.8486 li
551.1 81.1484 li
551.2 80.3486 li
551.4 79.6484 li
551.6 79.4482 li
551.7 79.8486 li
551.9 80.248 li
552.1 80.6484 li
552.2 80.9482 li
517.3 46.5483 mo
517.5 45.7485 li
517.6 45.5483 li
517.8 45.7485 li
518 46.3486 li
518.2 47.0483 li
518.3 47.3486 li
518.5 47.4482 li
518.7 47.2485 li
518.8 47.0483 li
519 47.4482 li
519.2 47.7485 li
519.3 47.7485 li
519.5 47.8486 li
519.7 48.1484 li
519.8 49.0483 li
520 50.1484 li
520.2 51.0483 li
520.3 51.2485 li
520.5 50.8486 li
520.7 50.4482 li
520.8 50.2485 li
521 50.2485 li
521.2 50.2485 li
521.3 50.7485 li
521.5 51.3486 li
521.7 51.8486 li
521.8 52.4482 li
522 53.0483 li
522.2 53.1484 li
522.4 52.5483 li
522.5 51.7485 li
522.7 51.1484 li
522.9 50.9482 li
523 50.8486 li
523.2 50.9482 li
523.4 50.3486 li
523.5 49.5483 li
523.7 49.4482 li
523.9 49.5483 li
524 49.4482 li
524.2 49.4482 li
524.4 49.7485 li
524.5 50.4482 li
524.7 51.2485 li
524.9 51.9482 li
525 52.6484 li
525.2 53.0483 li
525.4 53.3486 li
525.5 53.7485 li
525.7 54.5483 li
525.9 55.5483 li
526 56.1484 li
526.2 56.1484 li
526.4 55.7485 li
526.5 55.2485 li
526.7 55.1484 li
526.9 55.5483 li
527.1 56.5483 li
527.2 58.1484 li
527.4 59.7485 li
527.6 61.6484 li
527.7 63.9482 li
527.9 65.9482 li
528.1 67.4482 li
528.2 68.4482 li
528.4 68.9482 li
528.6 69.0488 li
528.7 68.9482 li
528.9 68.5488 li
529.1 67.8486 li
529.2 67.1484 li
529.4 67.3486 li
529.6 68.0488 li
529.7 68.5488 li
529.9 68.9482 li
530.1 69.4482 li
530.2 70.0488 li
530.4 70.6484 li
530.6 71.3486 li
530.7 72.0488 li
530.9 72.5488 li
531.1 72.748 li
531.3 72.9482 li
531.399 73.748 li
531.6 74.6484 li
531.8 74.748 li
531.899 73.9482 li
532.1 73.248 li
532.3 73.0488 li
532.399 73.4482 li
532.6 74.1484 li
532.8 74.4482 li
532.899 74.4482 li
533.1 74.6484 li
533.3 74.748 li
533.399 74.748 li
533.6 74.8486 li
533.8 74.9482 li
533.899 74.8486 li
534.1 74.8486 li
534.3 75.3486 li
534.399 76.0488 li
534.6 76.748 li
534.8 77.3486 li
499.8 41.0483 mo
500 41.1484 li
500.2 41.0483 li
500.3 40.4482 li
500.5 39.7485 li
500.7 39.5483 li
500.9 39.5483 li
501 39.3486 li
501.2 39.2485 li
501.4 39.3486 li
501.5 39.3486 li
501.7 39.2485 li
501.9 39.2485 li
502 39.7485 li
502.2 40.6484 li
502.4 41.4482 li
502.5 42.2485 li
502.7 43.2485 li
502.9 44.0483 li
503 44.3486 li
503.2 44.3486 li
503.4 44.0483 li
503.5 43.4482 li
503.7 42.5483 li
503.9 41.5483 li
504 40.8486 li
504.2 40.5483 li
504.4 40.3486 li
504.5 39.9482 li
504.7 39.8486 li
504.9 40.0483 li
505 40.0483 li
505.2 39.7485 li
505.4 39.7485 li
505.6 40.2485 li
505.7 40.9482 li
505.9 41.8486 li
506.1 42.6484 li
506.2 43.2485 li
506.4 43.6484 li
506.6 43.7485 li
506.7 43.3486 li
506.9 42.6484 li
507.1 42.0483 li
507.2 41.5483 li
507.4 41.2485 li
507.6 41.3486 li
507.7 42.1484 li
507.9 43.2485 li
508.1 43.8486 li
508.2 44.1484 li
508.4 44.3486 li
508.6 44.5483 li
508.7 44.8486 li
508.9 44.5483 li
509.1 44.0483 li
509.2 43.3486 li
509.4 42.4482 li
509.6 41.5483 li
509.8 40.8486 li
509.9 40.2485 li
510.1 39.9482 li
510.3 40.0483 li
510.4 40.5483 li
510.6 40.8486 li
510.8 40.9482 li
510.9 40.8486 li
511.1 40.7485 li
511.3 40.4482 li
511.4 40.1484 li
511.6 40.4482 li
511.8 41.2485 li
511.9 41.9482 li
512.1 42.4482 li
512.3 42.7485 li
512.4 42.8486 li
512.6 42.6484 li
512.8 42.8486 li
512.9 43.5483 li
513.1 44.1484 li
513.3 44.6484 li
513.4 44.9482 li
513.6 44.9482 li
513.8 44.6484 li
514 44.1484 li
514.1 43.6484 li
514.3 43.2485 li
514.5 43.0483 li
514.6 43.5483 li
514.8 44.2485 li
515 44.7485 li
515.1 45.3486 li
515.3 45.8486 li
515.5 45.7485 li
515.6 45.2485 li
515.8 45.3486 li
516 45.9482 li
516.1 46.8486 li
516.3 47.5483 li
516.5 48.0483 li
516.6 48.3486 li
516.8 48.1484 li
517 47.7485 li
517.1 47.2485 li
517.3 46.5483 li
482.4 42.9482 mo
482.5 42.3486 li
482.7 42.3486 li
482.9 42.8486 li
483 43.3486 li
483.2 43.7485 li
483.4 43.9482 li
483.5 44.0483 li
483.7 43.8486 li
483.9 43.3486 li
484.1 42.9482 li
484.2 42.5483 li
484.4 42.9482 li
484.6 44.3486 li
484.7 45.4482 li
484.9 45.3486 li
485.1 44.8486 li
485.2 44.4482 li
485.4 44.2485 li
485.6 43.8486 li
485.7 43.1484 li
485.9 42.4482 li
486.1 41.7485 li
486.2 40.4482 li
486.4 39.1484 li
486.6 38.4482 li
486.7 38.8486 li
486.9 39.9482 li
487.1 40.5483 li
487.2 40.5483 li
487.4 40.0483 li
487.6 39.6484 li
487.7 39.8486 li
487.9 40.3486 li
488.1 40.5483 li
488.3 40.5483 li
488.4 40.5483 li
488.6 40.8486 li
488.8 41.2485 li
488.9 41.3486 li
489.1 41.3486 li
489.3 41.2485 li
489.4 41.0483 li
489.6 40.7485 li
489.8 40.6484 li
489.9 40.5483 li
490.1 40.4482 li
490.3 40.1484 li
490.4 40.0483 li
490.6 39.8486 li
490.8 38.9482 li
490.9 38.2485 li
491.1 38.0483 li
491.3 37.9482 li
491.4 37.4482 li
491.6 36.5483 li
491.8 35.7485 li
491.9 35.7485 li
492.1 35.6484 li
492.3 35.3486 li
492.5 35.0483 li
492.6 34.9482 li
492.8 34.9482 li
493 34.9482 li
493.1 35.3486 li
493.3 36.2485 li
493.5 36.8486 li
493.6 36.9482 li
493.8 37.2485 li
494 37.5483 li
494.1 37.5483 li
494.3 37.5483 li
494.5 37.3486 li
494.6 37.1484 li
494.8 37.3486 li
495 37.6484 li
495.1 37.6484 li
495.3 37.8486 li
495.5 37.9482 li
495.6 37.8486 li
495.8 37.4482 li
496 37.4482 li
496.1 37.6484 li
496.3 38.0483 li
496.5 38.8486 li
496.7 39.5483 li
496.8 40.0483 li
497 40.2485 li
497.2 40.3486 li
497.3 40.3486 li
497.5 40.2485 li
497.7 39.5483 li
497.8 38.5483 li
498 37.9482 li
498.2 38.0483 li
498.3 38.2485 li
498.5 38.4482 li
498.7 38.9482 li
498.8 39.7485 li
499 40.3481 li
499.2 40.7485 li
499.3 40.8481 li
499.5 40.8481 li
499.7 40.9482 li
499.8 41.0483 li
464.9 76.248 mo
465.1 78.9482 li
465.2 81.5488 li
465.4 83.4482 li
465.6 84.0488 li
465.7 84.0488 li
465.9 83.9482 li
466.1 83.6484 li
466.2 83.8486 li
466.4 85.1484 li
466.6 86.5488 li
466.8 86.9482 li
466.9 86.8486 li
467.1 86.0488 li
467.3 84.6484 li
467.4 83.3486 li
467.6 81.748 li
467.8 80.1484 li
467.9 78.8486 li
468.1 77.1484 li
468.3 75.3486 li
468.4 73.4482 li
468.6 71.748 li
468.8 70.5488 li
468.9 69.5488 li
469.1 68.3486 li
469.3 67.248 li
469.4 65.5483 li
469.6 62.9482 li
469.8 60.4482 li
469.9 58.7485 li
470.1 57.0483 li
470.3 55.2485 li
470.4 52.3486 li
470.6 48.9482 li
470.8 46.1484 li
471 43.7485 li
471.1 41.8486 li
471.3 40.4482 li
471.5 39.5483 li
471.6 39.5483 li
471.8 40.6484 li
472 42.6484 li
472.1 44.7485 li
472.3 46.4482 li
472.5 47.6484 li
472.6 48.5483 li
472.8 49.2485 li
473 50.0483 li
473.1 51.0483 li
473.3 52.1484 li
473.5 54.2485 li
473.6 56.8486 li
473.8 58.2485 li
474 58.6484 li
474.1 59.0483 li
474.3 59.3486 li
474.5 59.7485 li
474.6 59.7485 li
474.8 58.8486 li
475 57.8486 li
475.2 57.0483 li
475.3 56.0483 li
475.5 55.2485 li
475.7 54.9482 li
475.8 54.6484 li
476 54.0483 li
476.2 53.6484 li
476.3 53.1484 li
476.5 52.6484 li
476.7 51.9482 li
476.8 51.2485 li
477 50.4482 li
477.2 49.4482 li
477.3 48.2485 li
477.5 46.8486 li
477.7 44.6484 li
477.8 42.2485 li
478 39.7485 li
478.2 38.0483 li
478.3 37.3486 li
478.5 36.6484 li
478.7 36.1484 li
478.8 36.4482 li
479 37.2485 li
479.2 38.1484 li
479.4 39.4482 li
479.5 41.1484 li
479.7 42.6484 li
479.9 43.8486 li
480 45.0483 li
480.2 46.1484 li
480.399 47.1484 li
480.5 47.8486 li
480.7 48.4482 li
480.899 48.5483 li
481 47.9482 li
481.2 47.1484 li
481.399 46.4482 li
481.5 45.7485 li
481.7 45.6484 li
481.899 45.7485 li
482 45.3486 li
482.2 44.2485 li
482.399 42.9482 li
447.4 168.849 mo
447.6 167.648 li
447.8 166.248 li
447.9 164.948 li
448.1 163.349 li
448.3 161.849 li
448.4 160.849 li
448.6 159.648 li
448.8 157.549 li
448.9 154.648 li
449.1 151.648 li
449.3 149.948 li
449.5 148.748 li
449.6 146.948 li
449.8 145.748 li
450 144.549 li
450.1 143.849 li
450.3 144.948 li
450.5 146.948 li
450.6 148.948 li
450.8 150.049 li
451 149.448 li
451.1 148.448 li
451.3 147.849 li
451.5 147.948 li
451.6 149.148 li
451.8 151.148 li
452 152.148 li
452.1 151.248 li
452.3 149.748 li
452.5 148.549 li
452.6 147.049 li
452.8 144.849 li
453 141.549 li
453.1 138.549 li
453.3 138.049 li
453.5 138.248 li
453.7 137.648 li
453.8 137.148 li
454 135.648 li
454.2 132.748 li
454.3 130.049 li
454.5 128.448 li
454.7 128.148 li
454.8 128.248 li
455 128.448 li
455.2 128.248 li
455.3 126.648 li
455.5 124.648 li
455.7 122.849 li
455.8 122.248 li
456 123.448 li
456.2 124.049 li
456.3 122.948 li
456.5 121.748 li
456.7 120.748 li
456.8 120.049 li
457 119.248 li
457.2 117.148 li
457.3 114.448 li
457.5 112.148 li
457.7 110.448 li
457.9 109.148 li
458 108.049 li
458.2 106.948 li
458.4 105.248 li
458.5 102.648 li
458.7 100.748 li
458.9 100.748 li
459 101.148 li
459.2 100.849 li
459.4 100.049 li
459.5 99.3486 li
459.7 99.1484 li
459.9 98.4482 li
460 96.6484 li
460.2 94.748 li
460.4 92.5488 li
460.5 90.1484 li
460.7 88.0488 li
460.899 85.748 li
461 83.748 li
461.2 82.0488 li
461.399 80.3486 li
461.5 78.1484 li
461.7 75.8486 li
461.899 74.4482 li
462.1 73.4482 li
462.2 71.8486 li
462.399 69.748 li
462.6 67.6484 li
462.7 66.1484 li
462.899 65.7485 li
463.1 65.5483 li
463.2 64.7485 li
463.399 64.2485 li
463.6 64.2485 li
463.7 64.4482 li
463.899 64.6484 li
464.1 65.5483 li
464.2 67.8486 li
464.399 70.4482 li
464.6 72.1484 li
464.7 73.8486 li
464.899 76.248 li
430 295.948 mo
430.1 294.049 li
430.3 291.948 li
430.5 290.248 li
430.6 288.849 li
430.8 288.248 li
431 287.549 li
431.1 285.849 li
431.3 283.849 li
431.5 282.248 li
431.6 281.448 li
431.8 281.349 li
432 281.248 li
432.2 281.349 li
432.3 280.448 li
432.5 279.049 li
432.7 278.349 li
432.8 278.049 li
433 278.948 li
433.2 280.849 li
433.3 283.549 li
433.5 286.948 li
433.7 289.849 li
433.8 291.049 li
434 289.648 li
434.2 286.448 li
434.3 283.748 li
434.5 282.349 li
434.7 282.448 li
434.8 283.849 li
435 284.648 li
435.2 284.049 li
435.3 282.748 li
435.5 280.049 li
435.7 277.349 li
435.8 275.549 li
436 273.648 li
436.2 270.948 li
436.4 266.748 li
436.5 261.549 li
436.7 256.648 li
436.9 251.948 li
437 247.849 li
437.2 245.748 li
437.4 245.148 li
437.5 244.448 li
437.7 243.648 li
437.9 243.448 li
438 243.248 li
438.2 242.448 li
438.4 241.248 li
438.5 239.549 li
438.7 237.849 li
438.9 235.849 li
439 233.648 li
439.2 232.448 li
439.4 232.748 li
439.5 233.549 li
439.7 234.448 li
439.9 235.349 li
440 235.549 li
440.2 234.748 li
440.4 233.248 li
440.6 231.049 li
440.7 227.849 li
440.9 224.648 li
441.1 220.849 li
441.2 216.248 li
441.4 212.748 li
441.6 211.148 li
441.7 210.448 li
441.9 209.549 li
442.1 206.549 li
442.2 200.849 li
442.4 194.448 li
442.6 189.049 li
442.7 185.549 li
442.9 184.648 li
443.1 184.448 li
443.2 183.648 li
443.4 182.849 li
443.6 181.148 li
443.7 179.448 li
443.9 179.648 li
444.1 179.948 li
444.2 179.448 li
444.4 178.148 li
444.6 176.549 li
444.7 176.049 li
444.9 176.148 li
445.1 176.748 li
445.3 178.148 li
445.4 178.948 li
445.6 178.849 li
445.8 178.448 li
445.9 178.049 li
446.1 177.748 li
446.3 177.349 li
446.4 176.549 li
446.6 174.849 li
446.8 172.748 li
446.9 171.049 li
447.1 169.748 li
447.3 169.248 li
447.399 168.849 li
412.5 299.148 mo
412.7 301.148 li
412.8 300.948 li
413 299.748 li
413.2 299.349 li
413.3 300.448 li
413.5 301.648 li
413.7 300.648 li
413.8 298.549 li
414 296.849 li
414.2 296.549 li
414.3 297.049 li
414.5 297.448 li
414.7 297.849 li
414.9 298.349 li
415 298.349 li
415.2 296.748 li
415.4 293.849 li
415.5 290.748 li
415.7 288.549 li
415.9 287.448 li
416 286.849 li
416.2 285.648 li
416.4 282.549 li
416.5 279.049 li
416.7 277.148 li
416.9 276.448 li
417 276.349 li
417.2 276.448 li
417.4 275.948 li
417.5 274.049 li
417.7 271.248 li
417.9 269.248 li
418 268.748 li
418.2 268.849 li
418.4 268.248 li
418.5 266.648 li
418.7 265.148 li
418.9 264.349 li
419 263.248 li
419.2 261.148 li
419.4 259.748 li
419.6 260.549 li
419.7 263.349 li
419.9 266.448 li
420.1 268.148 li
420.2 268.648 li
420.4 269.748 li
420.6 272.349 li
420.7 275.049 li
420.9 276.349 li
421.1 275.648 li
421.2 273.349 li
421.4 271.349 li
421.6 270.648 li
421.7 270.448 li
421.9 269.948 li
422.1 270.248 li
422.2 271.349 li
422.4 273.448 li
422.6 276.448 li
422.7 279.549 li
422.9 282.148 li
423.1 283.849 li
423.2 284.948 li
423.4 285.648 li
423.6 285.549 li
423.8 286.148 li
423.9 288.648 li
424.1 291.349 li
424.3 292.349 li
424.4 293.049 li
424.6 295.948 li
424.8 298.849 li
424.9 298.448 li
425.1 295.549 li
425.3 290.948 li
425.4 285.948 li
425.6 281.349 li
425.8 276.648 li
425.9 272.748 li
426.1 269.748 li
426.3 267.648 li
426.4 268.049 li
426.6 270.549 li
426.8 273.248 li
426.9 274.549 li
427.1 273.849 li
427.3 273.349 li
427.4 274.349 li
427.6 277.448 li
427.8 281.448 li
428 284.049 li
428.1 286.248 li
428.3 288.648 li
428.5 291.148 li
428.6 294.849 li
428.8 298.748 li
429 301.049 li
429.1 301.549 li
429.3 300.049 li
429.5 297.849 li
429.6 296.549 li
429.8 296.349 li
430 295.948 li
395 318.948 mo
395.2 320.748 li
395.4 321.148 li
395.5 320.049 li
395.7 319.148 li
395.9 320.349 li
396 322.049 li
396.2 322.748 li
396.4 322.549 li
396.5 320.849 li
396.7 318.748 li
396.9 317.049 li
397 315.748 li
397.2 315.049 li
397.4 314.148 li
397.6 312.049 li
397.7 309.448 li
397.9 307.049 li
398.1 305.448 li
398.2 305.049 li
398.4 305.148 li
398.6 303.349 li
398.7 300.049 li
398.9 297.849 li
399.1 296.448 li
399.2 294.349 li
399.4 292.849 li
399.6 292.148 li
399.7 291.748 li
399.9 292.648 li
400.1 294.148 li
400.2 294.748 li
400.4 295.248 li
400.6 296.349 li
400.7 297.349 li
400.9 298.549 li
401.1 301.248 li
401.2 304.948 li
401.4 306.948 li
401.6 306.549 li
401.8 305.648 li
401.9 305.948 li
402.1 307.049 li
402.3 308.448 li
402.4 309.948 li
402.6 311.448 li
402.8 313.448 li
402.9 315.648 li
403.1 317.349 li
403.3 319.349 li
403.4 321.148 li
403.6 322.148 li
403.8 321.549 li
403.9 319.549 li
404.1 318.349 li
404.3 319.448 li
404.4 322.049 li
404.6 323.748 li
404.8 322.549 li
404.9 320.849 li
405.1 320.349 li
405.3 320.448 li
405.4 319.648 li
405.6 316.849 li
405.8 313.948 li
405.9 312.648 li
406.1 313.248 li
406.3 314.349 li
406.5 314.248 li
406.6 313.049 li
406.8 312.549 li
407 313.948 li
407.1 316.049 li
407.3 316.549 li
407.5 315.349 li
407.6 314.148 li
407.8 314.248 li
408 314.448 li
408.1 312.648 li
408.3 308.849 li
408.5 304.549 li
408.6 302.648 li
408.8 303.448 li
409 304.648 li
409.1 304.148 li
409.3 302.849 li
409.5 302.349 li
409.6 302.849 li
409.8 302.948 li
410 302.349 li
410.1 302.148 li
410.3 302.248 li
410.5 302.648 li
410.7 303.148 li
410.8 302.349 li
411 299.849 li
411.2 296.748 li
411.3 294.049 li
411.5 292.948 li
411.7 293.648 li
411.8 294.849 li
412 295.448 li
412.2 295.549 li
412.3 296.549 li
412.5 299.148 li
377.6 264.349 mo
377.7 263.948 li
377.9 263.648 li
378.1 264.349 li
378.2 266.049 li
378.4 267.349 li
378.6 267.248 li
378.7 266.648 li
378.9 266.849 li
379.1 268.748 li
379.2 271.148 li
379.4 272.148 li
379.6 272.148 li
379.7 272.448 li
379.9 274.849 li
380.1 278.349 li
380.2 280.349 li
380.4 281.248 li
380.6 281.549 li
380.8 281.849 li
380.9 282.849 li
381.1 284.248 li
381.3 285.549 li
381.4 286.448 li
381.6 286.549 li
381.8 285.748 li
381.9 285.248 li
382.1 286.448 li
382.3 287.648 li
382.4 287.349 li
382.6 286.549 li
382.8 286.648 li
382.9 288.849 li
383.1 291.748 li
383.3 293.049 li
383.4 292.748 li
383.6 291.549 li
383.8 290.248 li
383.9 289.248 li
384.1 289.049 li
384.3 290.748 li
384.4 292.349 li
384.6 291.748 li
384.8 290.248 li
385 289.748 li
385.1 291.349 li
385.3 293.549 li
385.5 294.849 li
385.6 295.948 li
385.8 297.748 li
386 300.549 li
386.1 303.349 li
386.3 306.349 li
386.5 310.648 li
386.6 315.448 li
386.8 320.549 li
387 325.748 li
387.1 329.049 li
387.3 329.849 li
387.5 330.049 li
387.6 330.349 li
387.8 330.248 li
388 330.648 li
388.1 331.648 li
388.3 330.948 li
388.5 328.248 li
388.6 325.148 li
388.8 323.849 li
389 324.849 li
389.2 325.549 li
389.3 324.849 li
389.5 324.448 li
389.7 325.849 li
389.8 330.349 li
390 337.049 li
390.2 344.648 li
390.3 348.549 li
390.5 343.648 li
390.7 335.448 li
390.8 328.748 li
391 323.648 li
391.2 321.049 li
391.3 319.349 li
391.5 315.748 li
391.7 310.748 li
391.8 306.948 li
392 305.849 li
392.2 307.049 li
392.3 308.648 li
392.5 308.948 li
392.7 307.748 li
392.8 307.948 li
393 310.448 li
393.2 312.849 li
393.4 313.248 li
393.5 312.148 li
393.7 311.448 li
393.9 311.448 li
394 311.648 li
394.2 312.049 li
394.4 312.349 li
394.5 313.248 li
394.7 315.049 li
394.9 316.849 li
395 318.948 li
360.1 324.148 mo
360.3 324.849 li
360.4 324.948 li
360.6 325.748 li
360.8 326.748 li
360.9 327.549 li
361.1 328.148 li
361.3 328.148 li
361.4 329.748 li
361.6 334.049 li
361.8 338.849 li
361.9 341.748 li
362.1 342.549 li
362.3 342.148 li
362.4 340.648 li
362.6 338.549 li
362.8 337.049 li
362.9 335.549 li
363.1 334.549 li
363.3 336.248 li
363.5 339.349 li
363.6 340.849 li
363.8 341.648 li
364 344.148 li
364.1 347.049 li
364.3 348.349 li
364.5 347.049 li
364.6 345.148 li
364.8 345.148 li
365 345.148 li
365.1 343.549 li
365.3 343.349 li
365.5 344.248 li
365.6 344.849 li
365.8 345.748 li
366 347.248 li
366.1 348.549 li
366.3 348.349 li
366.5 347.549 li
366.6 347.648 li
366.8 348.748 li
367 349.549 li
367.1 348.549 li
367.3 345.748 li
367.5 341.549 li
367.7 336.849 li
367.8 333.148 li
368 330.448 li
368.2 326.748 li
368.3 321.349 li
368.5 317.049 li
368.7 315.049 li
368.8 313.748 li
369 314.349 li
369.2 316.448 li
369.3 317.549 li
369.5 317.248 li
369.7 315.849 li
369.8 314.849 li
370 315.648 li
370.2 317.248 li
370.3 317.549 li
370.5 315.248 li
370.7 312.349 li
370.8 309.849 li
371 307.948 li
371.2 306.248 li
371.3 303.648 li
371.5 300.948 li
371.7 298.448 li
371.9 295.648 li
372 294.248 li
372.2 294.648 li
372.4 295.849 li
372.5 296.849 li
372.7 297.049 li
372.9 297.148 li
373 297.248 li
373.2 297.549 li
373.4 296.948 li
373.5 294.648 li
373.7 291.648 li
373.9 288.248 li
374 286.248 li
374.2 284.648 li
374.4 281.748 li
374.5 278.049 li
374.7 274.148 li
374.9 271.049 li
375 269.248 li
375.2 267.648 li
375.4 266.349 li
375.5 265.448 li
375.7 265.049 li
375.9 265.148 li
376.101 265.349 li
376.2 265.648 li
376.4 265.549 li
376.601 265.448 li
376.7 264.549 li
376.9 262.948 li
377.101 262.448 li
377.2 262.849 li
377.4 263.648 li
377.601 264.349 li
342.6 292.248 mo
342.8 291.648 li
343 290.549 li
343.1 290.148 li
343.3 291.948 li
343.5 294.148 li
343.6 296.248 li
343.8 299.148 li
344 301.648 li
344.1 303.849 li
344.3 305.549 li
344.5 306.049 li
344.6 305.049 li
344.8 303.448 li
345 303.248 li
345.1 304.748 li
345.3 306.748 li
345.5 308.349 li
345.6 309.248 li
345.8 309.248 li
346 309.448 li
346.2 311.349 li
346.3 314.948 li
346.5 318.648 li
346.7 321.448 li
346.8 323.049 li
347 323.849 li
347.2 324.349 li
347.3 323.148 li
347.5 321.248 li
347.7 320.948 li
347.8 320.049 li
348 317.748 li
348.2 315.248 li
348.3 312.849 li
348.5 311.349 li
348.7 310.849 li
348.8 310.948 li
349 310.049 li
349.2 308.349 li
349.3 306.748 li
349.5 305.148 li
349.7 304.248 li
349.8 303.148 li
350 301.948 li
350.2 301.148 li
350.4 301.448 li
350.5 302.849 li
350.7 304.148 li
350.9 304.049 li
351 301.849 li
351.2 299.248 li
351.4 299.049 li
351.5 299.748 li
351.7 299.448 li
351.9 298.248 li
352 296.648 li
352.2 295.448 li
352.4 295.049 li
352.5 295.248 li
352.7 295.248 li
352.9 293.748 li
353 290.948 li
353.2 287.948 li
353.4 284.748 li
353.5 282.448 li
353.7 283.148 li
353.9 286.849 li
354 291.648 li
354.2 296.549 li
354.4 301.549 li
354.6 304.549 li
354.7 304.448 li
354.9 302.648 li
355.1 300.049 li
355.2 297.948 li
355.4 295.849 li
355.6 294.849 li
355.7 295.448 li
355.9 297.049 li
356.1 300.049 li
356.2 303.349 li
356.4 305.349 li
356.6 307.248 li
356.7 309.948 li
356.9 313.248 li
357.1 316.448 li
357.2 318.648 li
357.4 319.448 li
357.6 318.849 li
357.7 317.148 li
357.9 315.049 li
358.1 314.549 li
358.2 315.349 li
358.4 316.148 li
358.6 317.349 li
358.7 318.648 li
358.9 320.648 li
359.1 323.248 li
359.3 325.049 li
359.4 325.148 li
359.6 323.748 li
359.8 322.748 li
359.9 323.148 li
360.1 324.148 li
325.2 263.049 mo
325.3 263.349 li
325.5 263.049 li
325.7 262.648 li
325.8 262.849 li
326 264.248 li
326.2 266.049 li
326.3 267.148 li
326.5 267.349 li
326.7 267.448 li
326.8 267.248 li
327 267.248 li
327.2 268.648 li
327.3 270.148 li
327.5 271.248 li
327.7 273.349 li
327.8 275.849 li
328 277.948 li
328.2 279.349 li
328.3 279.849 li
328.5 280.248 li
328.7 281.148 li
328.9 282.549 li
329 283.748 li
329.2 283.648 li
329.4 283.248 li
329.5 282.448 li
329.7 281.448 li
329.9 281.549 li
330 281.648 li
330.2 280.849 li
330.4 279.448 li
330.5 277.248 li
330.7 275.248 li
330.9 275.349 li
331 277.549 li
331.2 279.948 li
331.4 280.849 li
331.5 280.849 li
331.7 280.648 li
331.9 280.448 li
332 279.549 li
332.2 276.849 li
332.4 273.549 li
332.5 272.248 li
332.7 273.049 li
332.9 274.448 li
333.1 276.349 li
333.2 279.049 li
333.4 281.148 li
333.6 281.948 li
333.7 283.248 li
333.9 284.448 li
334.1 285.049 li
334.2 285.648 li
334.4 285.849 li
334.6 285.448 li
334.7 285.549 li
334.9 286.349 li
335.1 288.049 li
335.2 288.948 li
335.4 288.748 li
335.6 289.748 li
335.7 292.148 li
335.9 294.849 li
336.1 296.648 li
336.2 297.049 li
336.4 296.748 li
336.6 296.448 li
336.7 296.549 li
336.9 296.349 li
337.1 295.148 li
337.3 293.349 li
337.4 291.648 li
337.6 290.748 li
337.8 290.748 li
337.9 291.049 li
338.1 291.448 li
338.3 291.948 li
338.4 293.448 li
338.6 296.049 li
338.8 298.448 li
338.9 300.248 li
339.1 300.748 li
339.3 300.049 li
339.4 299.049 li
339.6 298.349 li
339.8 298.349 li
339.9 298.049 li
340.1 296.448 li
340.3 294.849 li
340.4 294.748 li
340.6 296.248 li
340.8 297.748 li
340.9 298.049 li
341.1 297.248 li
341.3 296.648 li
341.5 297.349 li
341.6 298.549 li
341.8 298.748 li
342 297.849 li
342.1 296.049 li
342.3 294.248 li
342.5 293.049 li
342.6 292.248 li
307.7 221.349 mo
307.9 221.349 li
308 221.248 li
308.2 221.549 li
308.4 221.648 li
308.5 221.448 li
308.7 220.748 li
308.9 220.148 li
309 220.248 li
309.2 220.248 li
309.4 219.748 li
309.5 218.549 li
309.7 217.748 li
309.9 218.148 li
310 219.448 li
310.2 221.549 li
310.4 223.148 li
310.5 223.748 li
310.7 224.948 li
310.9 226.448 li
311 227.648 li
311.2 228.748 li
311.4 229.748 li
311.6 230.748 li
311.7 231.849 li
311.9 233.148 li
312.1 234.849 li
312.2 236.448 li
312.4 238.349 li
312.6 241.049 li
312.7 243.748 li
312.9 245.648 li
313.1 247.448 li
313.2 249.349 li
313.4 251.549 li
313.6 254.748 li
313.7 258.948 li
313.9 263.148 li
314.1 266.248 li
314.2 268.448 li
314.4 270.049 li
314.6 272.248 li
314.7 275.148 li
314.9 278.049 li
315.1 279.948 li
315.2 280.948 li
315.4 282.549 li
315.6 284.148 li
315.8 285.248 li
315.9 285.448 li
316.1 284.248 li
316.3 281.849 li
316.4 279.148 li
316.6 276.748 li
316.8 274.648 li
316.9 271.748 li
317.1 268.049 li
317.3 263.948 li
317.4 259.948 li
317.6 256.948 li
317.8 254.248 li
317.9 251.049 li
318.1 247.849 li
318.3 244.948 li
318.4 242.948 li
318.6 241.948 li
318.8 241.049 li
318.9 239.748 li
319.1 238.148 li
319.3 237.148 li
319.4 237.349 li
319.6 237.948 li
319.8 237.648 li
319.9 236.148 li
320.1 233.648 li
320.3 232.049 li
320.5 232.849 li
320.6 234.549 li
320.8 235.448 li
321 235.948 li
321.1 237.148 li
321.3 238.748 li
321.5 239.849 li
321.6 240.049 li
321.8 239.748 li
322 240.248 li
322.1 241.748 li
322.3 243.648 li
322.5 245.648 li
322.6 246.748 li
322.8 247.448 li
323 249.148 li
323.1 251.648 li
323.3 254.648 li
323.5 256.349 li
323.6 256.049 li
323.8 254.648 li
324 253.748 li
324.1 254.948 li
324.3 257.148 li
324.5 258.349 li
324.7 259.248 li
324.8 260.349 li
325 261.849 li
325.2 263.049 li
290.2 147.248 mo
290.4 148.748 li
290.6 150.549 li
290.7 152.349 li
290.9 153.448 li
291.1 153.248 li
291.2 152.448 li
291.4 152.148 li
291.6 152.448 li
291.7 153.248 li
291.9 153.849 li
292.1 154.049 li
292.2 153.748 li
292.4 153.349 li
292.6 153.648 li
292.7 154.648 li
292.9 155.648 li
293.1 156.248 li
293.2 156.648 li
293.4 157.248 li
293.6 157.648 li
293.7 157.549 li
293.9 157.349 li
294.1 157.748 li
294.3 158.049 li
294.4 158.148 li
294.6 158.349 li
294.8 158.748 li
294.9 159.948 li
295.1 161.148 li
295.3 161.248 li
295.4 161.349 li
295.6 161.748 li
295.8 162.248 li
295.9 162.648 li
296.1 162.748 li
296.3 163.648 li
296.4 165.049 li
296.6 166.248 li
296.8 167.448 li
296.9 167.948 li
297.1 167.549 li
297.3 167.248 li
297.4 167.849 li
297.6 169.049 li
297.8 169.248 li
297.9 169.049 li
298.1 170.049 li
298.3 172.148 li
298.4 175.049 li
298.6 177.448 li
298.8 178.748 li
299 179.248 li
299.1 180.248 li
299.3 182.648 li
299.5 185.349 li
299.6 187.948 li
299.8 190.948 li
300 193.448 li
300.1 195.849 li
300.3 198.849 li
300.5 201.849 li
300.6 204.849 li
300.8 207.648 li
301 210.148 li
301.1 212.648 li
301.3 215.748 li
301.5 219.349 li
301.6 222.049 li
301.8 223.549 li
302 225.648 li
302.1 228.349 li
302.3 231.049 li
302.5 232.648 li
302.6 233.049 li
302.8 233.248 li
303 233.648 li
303.2 234.549 li
303.3 235.448 li
303.5 235.549 li
303.7 235.349 li
303.8 235.148 li
304 235.448 li
304.2 235.948 li
304.3 236.148 li
304.5 235.648 li
304.7 234.448 li
304.8 233.448 li
305 232.948 li
305.2 232.549 li
305.3 231.948 li
305.5 230.648 li
305.7 228.648 li
305.8 227.448 li
306 226.648 li
306.2 225.648 li
306.3 224.549 li
306.5 222.549 li
306.7 220.049 li
306.8 217.849 li
307 217.148 li
307.2 218.849 li
307.4 220.549 li
307.5 221.049 li
307.7 221.349 li
272.8 117.349 mo
272.9 116.849 li
273.1 116.849 li
273.3 117.049 li
273.4 116.648 li
273.6 115.549 li
273.8 113.849 li
273.9 112.549 li
274.1 111.748 li
274.3 111.248 li
274.4 110.948 li
274.6 111.049 li
274.8 111.648 li
274.9 112.648 li
275.1 114.049 li
275.3 116.248 li
275.4 118.748 li
275.6 120.448 li
275.8 121.148 li
275.9 121.748 li
276.1 122.248 li
276.3 122.849 li
276.4 123.648 li
276.6 124.049 li
276.8 124.148 li
277 124.148 li
277.1 124.148 li
277.3 124.148 li
277.5 124.448 li
277.6 124.648 li
277.8 124.448 li
278 123.849 li
278.1 123.648 li
278.3 124.748 li
278.5 126.248 li
278.6 127.248 li
278.8 127.549 li
279 127.648 li
279.1 127.748 li
279.3 127.948 li
279.5 128.448 li
279.6 129.349 li
279.8 130.248 li
280 130.948 li
280.1 131.849 li
280.3 132.849 li
280.5 133.748 li
280.6 134.148 li
280.8 134.349 li
281 135.448 li
281.1 137.148 li
281.3 138.549 li
281.5 139.948 li
281.7 140.849 li
281.8 140.849 li
282 140.349 li
282.2 139.948 li
282.3 139.948 li
282.5 139.748 li
282.7 138.948 li
282.8 138.148 li
283 137.648 li
283.2 137.349 li
283.3 137.049 li
283.5 137.049 li
283.7 137.448 li
283.8 137.948 li
284 138.849 li
284.2 139.849 li
284.3 140.648 li
284.5 141.049 li
284.7 141.049 li
284.8 141.349 li
285 142.648 li
285.2 144.148 li
285.3 144.948 li
285.5 144.748 li
285.7 144.148 li
285.9 143.849 li
286 143.948 li
286.2 144.049 li
286.4 143.349 li
286.5 142.448 li
286.7 142.448 li
286.9 142.748 li
287 142.948 li
287.2 143.248 li
287.4 143.248 li
287.5 142.948 li
287.7 142.549 li
287.9 142.349 li
288 142.248 li
288.2 141.748 li
288.4 141.448 li
288.5 141.849 li
288.7 142.849 li
288.9 144.248 li
289 144.948 li
289.2 145.049 li
289.4 144.648 li
289.5 144.248 li
289.7 144.648 li
289.9 145.148 li
290.1 145.948 li
290.2 147.248 li
255.3 73.9482 mo
255.5 74.8486 li
255.6 75.6484 li
255.8 76.1484 li
256 76.248 li
256.1 75.8486 li
256.3 75.4482 li
256.5 75.3486 li
256.6 75.0488 li
256.8 74.748 li
257 74.9482 li
257.1 75.3486 li
257.3 75.9482 li
257.5 76.6484 li
257.6 77.4482 li
257.8 78.248 li
258 78.9482 li
258.1 79.5488 li
258.3 80.0488 li
258.5 80.8486 li
258.6 81.8486 li
258.8 82.6484 li
259 83.248 li
259.1 83.6484 li
259.3 83.6484 li
259.5 83.5488 li
259.6 83.5488 li
259.8 83.4482 li
260 83.4482 li
260.2 83.248 li
260.3 82.748 li
260.5 82.0488 li
260.7 81.6484 li
260.8 81.748 li
261 81.9482 li
261.2 82.248 li
261.3 83.0488 li
261.5 84.1484 li
261.7 85.4482 li
261.8 86.9482 li
262 88.248 li
262.2 89.3486 li
262.3 90.4482 li
262.5 91.1484 li
262.7 91.9482 li
262.8 93.0488 li
263 94.248 li
263.2 95.3486 li
263.3 96.6484 li
263.5 98.1484 li
263.7 99.5488 li
263.8 101.049 li
264 102.549 li
264.2 103.748 li
264.4 104.448 li
264.5 104.648 li
264.7 104.549 li
264.9 104.648 li
265 105.148 li
265.2 106.049 li
265.4 106.748 li
265.5 106.648 li
265.7 106.248 li
265.9 105.648 li
266 105.248 li
266.2 104.948 li
266.4 104.948 li
266.5 104.748 li
266.7 104.148 li
266.9 103.648 li
267 103.549 li
267.2 103.448 li
267.4 103.148 li
267.5 102.648 li
267.7 102.349 li
267.9 102.549 li
268 102.849 li
268.2 103.448 li
268.4 104.748 li
268.6 106.349 li
268.7 107.549 li
268.9 108.349 li
269.1 109.148 li
269.2 110.849 li
269.4 112.648 li
269.6 113.948 li
269.7 114.648 li
269.9 114.948 li
270.1 115.849 li
270.2 117.049 li
270.4 118.148 li
270.6 118.648 li
270.7 118.448 li
270.9 117.648 li
271.1 116.948 li
271.2 116.549 li
271.4 116.849 li
271.6 117.549 li
271.7 117.349 li
271.9 116.448 li
272.1 116.049 li
272.2 116.448 li
272.4 117.248 li
272.6 117.748 li
272.8 117.349 li
237.8 69.4482 mo
238 69.6484 li
238.1 69.748 li
238.3 69.8486 li
238.5 69.748 li
238.7 69.748 li
238.8 69.9482 li
239 70.3486 li
239.2 70.748 li
239.3 70.8486 li
239.5 71.0488 li
239.7 71.6484 li
239.8 72.1484 li
240 72.3486 li
240.2 72.3486 li
240.3 72.4482 li
240.5 72.248 li
240.7 72.0488 li
240.8 71.5488 li
241 70.8486 li
241.2 70.248 li
241.3 69.8486 li
241.5 69.3486 li
241.7 68.9482 li
241.8 68.6484 li
242 68.3486 li
242.2 67.9482 li
242.3 67.748 li
242.5 67.9482 li
242.7 68.248 li
242.9 68.8486 li
243 69.248 li
243.2 69.5488 li
243.4 69.6484 li
243.5 69.5488 li
243.7 69.3486 li
243.9 69.1484 li
244 69.1484 li
244.2 69.248 li
244.4 69.5488 li
244.5 69.8486 li
244.7 69.9482 li
244.9 69.6484 li
245 69.5488 li
245.2 69.0488 li
245.4 68.3486 li
245.5 68.248 li
245.7 68.248 li
245.9 68.3486 li
246 68.5488 li
246.2 69.0488 li
246.4 69.4482 li
246.5 69.3486 li
246.7 69.1484 li
246.9 68.9482 li
247.1 68.8486 li
247.2 68.4482 li
247.4 67.6484 li
247.6 66.8486 li
247.7 66.1484 li
247.9 65.5483 li
248.1 65.5483 li
248.2 65.8486 li
248.4 66.0483 li
248.6 66.6484 li
248.7 67.3486 li
248.9 67.9482 li
249.1 68.3486 li
249.2 68.4482 li
249.4 68.5488 li
249.6 68.9482 li
249.7 69.3486 li
249.9 69.8486 li
250.1 70.8486 li
250.2 72.1484 li
250.4 73.1484 li
250.6 73.748 li
250.7 74.0488 li
250.9 74.248 li
251.1 74.6484 li
251.3 74.8486 li
251.4 74.748 li
251.6 74.4482 li
251.8 73.9482 li
251.9 73.4482 li
252.1 73.4482 li
252.3 73.9482 li
252.4 74.5488 li
252.6 75.1484 li
252.8 75.4482 li
252.9 75.4482 li
253.1 75.4482 li
253.3 75.5488 li
253.4 75.5488 li
253.6 75.4482 li
253.8 75.1484 li
253.9 74.9482 li
254.1 74.3486 li
254.3 73.4482 li
254.4 73.1484 li
254.6 73.1484 li
254.8 73.248 li
254.9 73.248 li
255.1 73.3486 li
255.3 73.9482 li
220.3 74.1484 mo
220.5 72.748 li
220.7 72.1484 li
220.8 71.9482 li
221 71.748 li
221.2 71.8486 li
221.4 71.748 li
221.5 71.5488 li
221.7 71.5488 li
221.9 71.6484 li
222 71.4482 li
222.2 71.3486 li
222.4 71.3486 li
222.5 71.1484 li
222.7 70.6484 li
222.9 70.1484 li
223 69.6484 li
223.2 69.0488 li
223.4 68.5488 li
223.5 68.248 li
223.7 68.0488 li
223.9 67.8486 li
224 67.8486 li
224.2 68.1484 li
224.4 68.248 li
224.5 68.1484 li
224.7 68.1484 li
224.9 68.1484 li
225 68.4482 li
225.2 69.0488 li
225.4 69.748 li
225.6 70.4482 li
225.7 71.248 li
225.9 71.748 li
226.1 72.1484 li
226.2 72.4482 li
226.4 72.748 li
226.6 72.748 li
226.7 72.3486 li
226.9 72.0488 li
227.1 72.3486 li
227.2 72.8486 li
227.4 73.248 li
227.6 73.3486 li
227.7 73.4482 li
227.9 73.4482 li
228.1 73.4482 li
228.2 73.248 li
228.4 72.5488 li
228.6 72.0488 li
228.7 71.8486 li
228.9 71.4482 li
229.1 70.6484 li
229.2 69.5488 li
229.4 67.9482 li
229.6 65.9487 li
229.8 64.6484 li
229.9 65.2485 li
230.1 66.748 li
230.3 68.248 li
230.4 69.8486 li
230.6 71.248 li
230.8 72.1484 li
230.9 72.6484 li
231.1 72.6484 li
231.3 72.3486 li
231.4 71.8486 li
231.6 71.4482 li
231.8 70.9482 li
231.9 70.3486 li
232.1 69.5488 li
232.3 68.5488 li
232.4 67.3486 li
232.6 66.0483 li
232.8 64.6484 li
232.9 63.1484 li
233.1 62.1484 li
233.3 61.2485 li
233.4 60.3486 li
233.6 59.5483 li
233.8 58.5483 li
233.9 57.5483 li
234.1 57.1484 li
234.3 57.1484 li
234.5 57.2485 li
234.6 57.4482 li
234.8 57.3486 li
235 57.1484 li
235.1 57.1484 li
235.3 57.5483 li
235.5 58.0483 li
235.6 59.1484 li
235.8 60.4482 li
236 61.7485 li
236.1 62.6484 li
236.3 63.3486 li
236.5 64.0483 li
236.6 64.8486 li
236.8 65.5483 li
237 66.3486 li
237.101 67.5488 li
237.3 68.5488 li
237.5 69.0488 li
237.6 69.248 li
237.8 69.4482 li
202.9 67.9482 mo
203 68.248 li
203.2 69.0488 li
203.4 70.3486 li
203.5 71.5488 li
203.7 72.4482 li
203.9 73.0488 li
204.1 73.5488 li
204.2 73.8486 li
204.4 73.9482 li
204.6 73.748 li
204.7 73.4482 li
204.9 73.4482 li
205.1 73.6484 li
205.2 74.0488 li
205.4 74.248 li
205.6 74.248 li
205.7 74.3486 li
205.9 74.4482 li
206.1 74.8486 li
206.2 75.9482 li
206.4 77.3486 li
206.6 78.9482 li
206.7 80.4482 li
206.9 81.8486 li
207.1 83.4482 li
207.2 85.5488 li
207.4 87.9482 li
207.6 90.0488 li
207.7 91.748 li
207.9 93.4482 li
208.1 95.0488 li
208.3 96.3486 li
208.4 97.3486 li
208.6 98.248 li
208.8 99.0488 li
208.9 99.748 li
209.1 100.049 li
209.3 100.148 li
209.4 100.049 li
209.6 99.9482 li
209.8 99.6484 li
209.9 99.0488 li
210.1 98.1484 li
210.3 97.0488 li
210.4 96.1484 li
210.6 95.4482 li
210.8 94.8486 li
210.9 93.748 li
211.1 92.248 li
211.3 90.8486 li
211.4 89.748 li
211.6 88.748 li
211.8 87.6484 li
211.9 86.6484 li
212.1 86.0488 li
212.3 85.5488 li
212.4 84.8486 li
212.6 84.3486 li
212.8 83.8486 li
213 83.5488 li
213.1 83.748 li
213.3 84.1484 li
213.5 84.5488 li
213.6 84.6484 li
213.8 84.748 li
214 84.9482 li
214.1 85.0488 li
214.3 85.1484 li
214.5 85.248 li
214.6 86.0488 li
214.8 87.4482 li
215 88.248 li
215.1 87.4482 li
215.3 85.9482 li
215.5 84.5488 li
215.6 83.4482 li
215.8 82.8486 li
216 82.4482 li
216.1 82.0488 li
216.3 81.3486 li
216.5 80.8486 li
216.6 80.748 li
216.8 81.1484 li
217 81.6484 li
217.2 82.0488 li
217.3 82.4482 li
217.5 82.8486 li
217.7 82.748 li
217.8 82.3486 li
218 81.9482 li
218.2 81.6484 li
218.3 81.248 li
218.5 80.6484 li
218.7 80.0488 li
218.8 79.5488 li
219 79.4482 li
219.2 79.8486 li
219.3 80.248 li
219.5 80.1484 li
219.7 79.8486 li
219.8 79.248 li
220 77.8486 li
220.2 75.8486 li
220.3 74.1484 li
185.4 75.1484 mo
185.6 75.3486 li
185.7 75.0488 li
185.9 74.5488 li
186.1 74.0488 li
186.2 73.5488 li
186.4 72.9482 li
186.6 72.248 li
186.8 71.5488 li
186.9 70.9482 li
187.1 70.5488 li
187.3 70.6484 li
187.4 70.8486 li
187.6 71.0488 li
187.8 71.6484 li
187.9 72.1484 li
188.1 72.3486 li
188.3 72.248 li
188.4 71.9482 li
188.6 71.3486 li
188.8 70.748 li
188.9 70.0488 li
189.1 68.9482 li
189.3 67.6484 li
189.4 66.4482 li
189.6 65.9482 li
189.8 65.9482 li
189.9 65.9482 li
190.1 66.0483 li
190.3 65.9482 li
190.4 65.7485 li
190.6 65.6484 li
190.8 65.7485 li
190.9 66.0483 li
191.1 66.5488 li
191.3 66.9482 li
191.5 67.1484 li
191.6 67.1484 li
191.8 67.0488 li
192 67.1484 li
192.1 67.5488 li
192.3 68.1484 li
192.5 68.9482 li
192.6 69.8486 li
192.8 70.5488 li
193 71.3486 li
193.1 71.748 li
193.3 72.0488 li
193.5 72.1484 li
193.6 72.3486 li
193.8 72.248 li
194 72.0488 li
194.1 71.6484 li
194.3 71.248 li
194.5 70.8486 li
194.6 70.3486 li
194.8 70.1484 li
195 70.1484 li
195.1 70.248 li
195.3 70.3486 li
195.5 70.5488 li
195.7 70.9482 li
195.8 71.5488 li
196 72.1484 li
196.2 72.8486 li
196.3 73.248 li
196.5 73.4482 li
196.7 73.4482 li
196.8 73.248 li
197 73.0488 li
197.2 72.748 li
197.3 72.3486 li
197.5 72.0488 li
197.7 72.1484 li
197.8 72.248 li
198 72.3486 li
198.2 72.5488 li
198.3 73.0488 li
198.5 73.4482 li
198.7 73.6484 li
198.8 73.5488 li
199 72.9482 li
199.2 72.0488 li
199.3 71.0488 li
199.5 70.4482 li
199.7 69.9482 li
199.9 69.5488 li
200 69.4482 li
200.2 69.248 li
200.4 69.248 li
200.5 69.748 li
200.7 70.248 li
200.9 70.5488 li
201 70.748 li
201.2 70.748 li
201.4 70.248 li
201.5 69.4482 li
201.7 68.5488 li
201.9 67.748 li
202 67.1484 li
202.2 66.9482 li
202.4 67.248 li
202.5 67.4482 li
202.7 67.6484 li
202.9 67.9482 li
167.9 74.8486 mo
168.1 75.748 li
168.3 76.3486 li
168.4 76.748 li
168.6 77.0488 li
168.8 77.4482 li
168.9 78.0488 li
169.1 78.748 li
169.3 79.3486 li
169.5 79.9482 li
169.6 80.3486 li
169.8 80.748 li
170 81.0488 li
170.1 81.1484 li
170.3 81.0488 li
170.5 81.0488 li
170.6 81.0488 li
170.8 81.1484 li
171 81.3486 li
171.1 81.8486 li
171.3 82.248 li
171.5 82.4482 li
171.6 82.748 li
171.8 82.9482 li
172 82.8486 li
172.1 82.4482 li
172.3 81.9482 li
172.5 81.1484 li
172.6 80.0488 li
172.8 78.9482 li
173 77.6484 li
173.1 76.748 li
173.3 76.1484 li
173.5 75.5488 li
173.7 74.5488 li
173.8 73.748 li
174 73.248 li
174.2 72.748 li
174.3 72.4482 li
174.5 72.5488 li
174.7 72.8486 li
174.8 73.248 li
175 73.4482 li
175.2 73.5488 li
175.3 73.3486 li
175.5 72.9482 li
175.7 72.6484 li
175.8 72.4482 li
176 72.3486 li
176.2 71.9482 li
176.3 71.248 li
176.5 70.1484 li
176.7 69.0488 li
176.8 68.248 li
177 67.4482 li
177.2 66.248 li
177.3 65.2485 li
177.5 64.3486 li
177.7 63.7485 li
177.8 63.3486 li
178 62.8486 li
178.2 62.3486 li
178.4 61.8486 li
178.5 61.3486 li
178.7 60.9487 li
178.9 61.2485 li
179 61.9487 li
179.2 62.7485 li
179.4 63.5483 li
179.5 64.3486 li
179.7 64.9482 li
179.9 65.4482 li
180 65.8486 li
180.2 66.1484 li
180.4 66.6484 li
180.5 67.1484 li
180.7 67.6484 li
180.9 67.9482 li
181 68.248 li
181.2 68.8486 li
181.4 69.3486 li
181.5 69.8486 li
181.7 70.6484 li
181.9 71.3486 li
182 71.6484 li
182.2 71.748 li
182.4 71.8486 li
182.6 71.8486 li
182.7 71.8486 li
182.9 71.8486 li
183.1 72.248 li
183.2 72.748 li
183.4 73.3486 li
183.6 73.748 li
183.7 74.1484 li
183.9 74.3486 li
184.1 74.4482 li
184.2 74.3486 li
184.4 74.1484 li
184.6 73.9482 li
184.7 74.1484 li
184.9 74.5488 li
185.1 74.8486 li
185.2 74.9482 li
185.4 75.1484 li
150.5 67.6484 mo
150.6 68.0488 li
150.8 68.4482 li
151 69.248 li
151.1 70.0488 li
151.3 70.5488 li
151.5 71.0488 li
151.6 71.248 li
151.8 70.9482 li
152 70.4482 li
152.1 70.0488 li
152.3 69.8486 li
152.5 69.248 li
152.7 68.5488 li
152.8 67.8486 li
153 67.1484 li
153.2 66.748 li
153.3 66.8486 li
153.5 67.248 li
153.7 67.748 li
153.8 68.3486 li
154 68.9482 li
154.2 69.4482 li
154.3 69.8486 li
154.5 70.248 li
154.7 70.4482 li
154.8 70.748 li
155 70.8486 li
155.2 70.6484 li
155.3 70.5488 li
155.5 70.5488 li
155.7 70.5488 li
155.8 70.5488 li
156 70.3486 li
156.2 70.0488 li
156.3 69.3486 li
156.5 68.5488 li
156.7 68.248 li
156.9 68.0488 li
157 67.9482 li
157.2 68.0488 li
157.4 68.6484 li
157.5 69.248 li
157.7 69.6484 li
157.9 69.9482 li
158 69.9482 li
158.2 70.0488 li
158.4 70.0488 li
158.5 69.748 li
158.7 69.248 li
158.9 68.9482 li
159 69.0488 li
159.2 69.0488 li
159.4 68.6484 li
159.5 68.0488 li
159.7 67.4482 li
159.9 67.1484 li
160 67.3486 li
160.2 67.8486 li
160.4 68.6484 li
160.5 69.5488 li
160.7 70.248 li
160.9 70.5488 li
161.1 70.748 li
161.2 70.8486 li
161.4 70.8486 li
161.6 70.8486 li
161.7 70.8486 li
161.9 70.748 li
162.1 70.5488 li
162.2 70.248 li
162.4 70.248 li
162.6 70.1484 li
162.7 70.1484 li
162.9 70.748 li
163.1 71.3486 li
163.2 71.748 li
163.4 71.9482 li
163.6 71.9482 li
163.7 71.9482 li
163.9 72.4482 li
164.1 73.0488 li
164.2 73.4482 li
164.4 73.8486 li
164.6 73.9482 li
164.7 73.8486 li
164.9 73.9482 li
165.1 74.248 li
165.3 74.3486 li
165.4 74.248 li
165.6 73.9482 li
165.8 73.5488 li
165.9 73.0488 li
166.1 72.4482 li
166.3 71.9482 li
166.4 71.248 li
166.6 70.8486 li
166.8 71.0488 li
166.9 71.6484 li
167.1 72.3486 li
167.3 72.9482 li
167.4 73.1484 li
167.6 73.3486 li
167.8 74.0488 li
167.9 74.8486 li
133 72.1484 mo
133.2 72.0488 li
133.3 71.8486 li
133.5 71.6484 li
133.7 71.1484 li
133.8 70.5488 li
134 70.3486 li
134.2 70.0488 li
134.3 69.5488 li
134.5 69.3486 li
134.7 69.248 li
134.8 69.0488 li
135 69.0488 li
135.2 69.0488 li
135.4 68.748 li
135.5 68.4482 li
135.7 68.1484 li
135.9 68.1484 li
136 68.248 li
136.2 68.3486 li
136.4 68.5488 li
136.5 69.1484 li
136.7 69.6484 li
136.9 70.4482 li
137 71.6484 li
137.2 73.1484 li
137.4 74.4482 li
137.5 75.1484 li
137.7 75.0488 li
137.9 74.5488 li
138 74.3486 li
138.2 74.3486 li
138.4 74.1484 li
138.5 73.6484 li
138.7 72.9482 li
138.9 72.248 li
139 71.3486 li
139.2 70.3486 li
139.4 68.8486 li
139.6 66.8486 li
139.7 64.4482 li
139.9 63.2485 li
140.1 63.9482 li
140.2 65.3486 li
140.4 66.5488 li
140.6 67.6484 li
140.7 68.6484 li
140.9 69.5488 li
141.1 70.3486 li
141.2 70.8486 li
141.4 71.1484 li
141.6 71.4482 li
141.7 71.4482 li
141.9 71.5488 li
142.1 71.6484 li
142.2 71.5488 li
142.4 71.5488 li
142.6 71.748 li
142.7 71.8486 li
142.9 71.8486 li
143.1 71.6484 li
143.2 71.1484 li
143.4 70.6484 li
143.6 70.4482 li
143.8 70.4482 li
143.9 70.248 li
144.1 69.8486 li
144.3 69.4482 li
144.4 68.8486 li
144.6 68.248 li
144.8 67.748 li
144.9 67.5488 li
145.1 68.0488 li
145.3 68.5488 li
145.4 68.748 li
145.6 68.4482 li
145.8 67.748 li
145.9 66.9482 li
146.1 66.3486 li
146.3 66.1484 li
146.4 66.1484 li
146.6 66.4482 li
146.8 66.6484 li
146.9 66.748 li
147.1 66.9482 li
147.3 66.8486 li
147.4 66.8486 li
147.6 67.4482 li
147.8 67.9482 li
148 68.4482 li
148.1 69.0488 li
148.3 69.6484 li
148.5 70.0488 li
148.6 70.3486 li
148.8 70.4482 li
149 70.1484 li
149.1 69.6484 li
149.3 69.1484 li
149.5 68.748 li
149.6 68.5488 li
149.8 68.4482 li
150 68.248 li
150.1 67.8486 li
150.3 67.5488 li
150.5 67.6484 li
115.5 91.748 mo
115.7 92.5488 li
115.9 92.748 li
116 92.6484 li
116.2 92.5488 li
116.4 92.3486 li
116.5 91.8486 li
116.7 91.4482 li
116.9 91.748 li
117 92.248 li
117.2 92.748 li
117.4 93.5488 li
117.5 94.3486 li
117.7 94.8486 li
117.9 94.9482 li
118.1 94.748 li
118.2 94.1484 li
118.4 93.248 li
118.6 91.9482 li
118.7 90.748 li
118.9 89.9482 li
119.1 89.3486 li
119.2 89.1484 li
119.4 88.9482 li
119.6 88.748 li
119.7 88.5488 li
119.9 88.1484 li
120.1 87.6484 li
120.2 87.748 li
120.4 88.0488 li
120.6 87.9482 li
120.7 87.5488 li
120.9 86.748 li
121.1 85.748 li
121.2 84.5488 li
121.4 83.248 li
121.6 81.748 li
121.7 80.248 li
121.9 78.8486 li
122.1 77.9482 li
122.3 77.0488 li
122.4 76.3486 li
122.6 76.248 li
122.8 76.3486 li
122.9 76.6484 li
123.1 77.1484 li
123.3 77.248 li
123.4 77.1484 li
123.6 77.0488 li
123.8 77.0488 li
123.9 76.9482 li
124.1 76.1484 li
124.3 74.5488 li
124.4 72.9482 li
124.6 71.8486 li
124.8 71.1484 li
124.9 70.8486 li
125.1 70.748 li
125.3 71.0488 li
125.4 71.8486 li
125.6 72.5488 li
125.8 72.8486 li
125.9 72.6484 li
126.1 72.0488 li
126.3 71.3486 li
126.5 70.6484 li
126.6 70.1484 li
126.8 70.248 li
127 70.5488 li
127.1 70.6484 li
127.3 70.9482 li
127.5 71.248 li
127.6 71.3486 li
127.8 71.4482 li
128 71.5488 li
128.1 71.5488 li
128.3 71.4482 li
128.5 71.3486 li
128.6 71.1484 li
128.8 70.8486 li
129 70.4482 li
129.1 69.748 li
129.3 69.0488 li
129.5 68.248 li
129.6 67.9482 li
129.8 67.748 li
130 67.4482 li
130.1 67.248 li
130.3 67.1484 li
130.5 67.1484 li
130.6 67.6484 li
130.8 68.248 li
131 68.8486 li
131.2 69.6484 li
131.3 70.3486 li
131.5 70.9482 li
131.7 71.248 li
131.8 71.3486 li
132 71.5488 li
132.2 71.8486 li
132.3 72.1484 li
132.5 72.1484 li
132.7 72.1484 li
132.8 72.1484 li
133 72.1484 li
98.3999 88.248 mo
98.6001 88.9482 li
98.7002 89.5488 li
98.8999 89.9482 li
99.1001 90.3486 li
99.2002 90.8486 li
99.3999 91.4482 li
99.6001 92.3486 li
99.7002 93.6484 li
99.8999 94.6484 li
100.1 95.0488 li
100.2 95.1484 li
100.4 95.248 li
100.6 95.3486 li
100.8 95.1484 li
100.9 94.6484 li
101.1 94.0488 li
101.3 93.4482 li
101.4 92.8486 li
101.6 91.748 li
101.8 90.5488 li
101.9 89.748 li
102.1 89.5488 li
102.3 89.8486 li
102.4 90.248 li
102.6 90.5488 li
102.8 90.4482 li
102.9 90.248 li
103.1 89.748 li
103.3 89.1484 li
103.4 88.748 li
103.6 88.9482 li
103.8 89.5488 li
103.9 90.0488 li
104.1 90.248 li
104.3 90.3486 li
104.4 90.248 li
104.6 90.1484 li
104.8 90.0488 li
105 89.5488 li
105.1 88.5488 li
105.3 87.6484 li
105.5 88.0488 li
105.6 89.3486 li
105.8 90.4482 li
106 91.0488 li
106.1 91.5488 li
106.3 92.0488 li
106.5 92.4482 li
106.6 92.5488 li
106.8 92.0488 li
107 91.1484 li
107.1 90.0488 li
107.3 88.9482 li
107.5 88.248 li
107.6 87.9482 li
107.8 87.6484 li
108 87.5488 li
108.1 87.748 li
108.3 87.5488 li
108.5 86.8486 li
108.6 86.0488 li
108.8 86.0488 li
109 86.6484 li
109.1 87.748 li
109.3 88.748 li
109.5 89.5488 li
109.7 90.1484 li
109.8 90.6484 li
110 90.9482 li
110.2 91.1484 li
110.3 91.3486 li
110.5 91.6484 li
110.7 91.9482 li
110.8 92.248 li
111 92.248 li
111.2 92.248 li
111.3 92.248 li
111.5 92.1484 li
111.7 92.0488 li
111.8 91.9482 li
112 91.748 li
112.2 91.748 li
112.3 91.6484 li
112.5 91.5488 li
112.7 91.248 li
112.8 90.8486 li
113 90.8486 li
113.2 90.9482 li
113.3 90.8486 li
113.5 90.748 li
113.7 90.4482 li
113.9 89.9482 li
114 89.748 li
114.2 89.9482 li
114.4 89.9482 li
114.5 89.748 li
114.7 89.748 li
114.9 89.9482 li
115 90.0488 li
115.2 90.248 li
115.4 90.8486 li
115.5 91.748 li
540.9 361.648 mo
604.8 361.648 li
.613275 0 1 0 cmyk
@
1 lw
98.3999 11.9482 mo
98.3999 388.349 li
636 388.349 li
636 11.9482 li
98.3999 11.9482 li
98.3999 11.9482 li
cp
.929717 .879728 .890196 .799985 cmyk
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
/BNSWMN+TimesNewRomanPSMT*1 uf
/BNSWMN+TimesNewRomanPSMT uf
/TimesNewRomanPSMT uf
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 16.0
%%AI8_CreatorVersion: 16.0.1
%%For: (Yoshida) ()
%%Title: (exp-torque-smartsuit.eps)
%%CreationDate: 9/15/2012 12:14 AM
%%Canvassize: 16383
%AI9_DataStream
%Gb!j.Blc('G8QXlD\`9S_%e'u?tQWq+Gg+'"+pCOmOOSH!"p4U^qK2:W`$G&V@k1p@[CSkS]$QU`6i$_8u8%-/#br50ooY_qA8DF
%4Zs`r_fD;Lb4?;P^eAsEV,*^IkB*?\p%<]^ghX9Dc$]QCRH4u!>@nPrj[:r5SD]Q'^KOu/BO=A!;k[kac#PA"%(!3,*#28(\L>tf
%'&ceP)2!f5^HV'X^!XCGY=lcAU#5+X_p!/[LMCc'UtS44Wlt-7VpkZp3T$ge5P90;IW'n^<n^hnGUe,kg$_sgk>s#GI@7/+@*iU\
%%>V6:3W:M:4-J6_]@G:abCpg]QfVQFj*%>?3ptQE3O>5HEVP"T'k;MP7-GdfiB+cGHnBQiXXe*B6;0Y[TUGJiao.?n3-76Pk0cgZ
%M8#dKkp2UI056/8-d\2j3h9$bQi3!&If<]hrUaa[Iel:DrVV$3rTF4XgJ@k;gWtB=mH8ur*2%PtrB[nBIf_1n5J_B`aYZGl,'=-]
%l:Ae*&S9t\pi83^J?/C7(.Ha5@Vc)W8>4=%KOZ_`[N&)`_?d=ZP7#@)l*O>plSRk<[e+u[q*:r<,['(P09<9i^OoY+U*^^t<?>G+
%4-G!ICI;1-pg0CCo;(9*3qOJ26L7[@$=0S>mAcDL<99u66:0;mN(<8a08"5>cVTB;=+?<B*K[UYe>r4[0X;iS*a_[J82?N7&C:QD
%>ilY9![<nh1+H+$].-NB44"=O*t/*/lLcsDh/)g@'Z&jG8T$ID;+P`N.<<6mKN#Is2#U?l7?ij&;NE#_`3=3T'.P>VEi$RM[#etp
%WbpZ6&u.9u+7RBF#Sj$oWb-dsGSG;HYF"iFN2.VCb+O73-sRDl\>I_o/JRF)BG<Y*;0X"=_UE1_4;C:iSQ&6-TNEB=^Cgi$Q:O9G
%6p_T%UZjV"8Z/6j''hBWSk_YXF;g%Q2n22Z632rY$;e-,J1$$PPS$?/.Z0&cXtGT.5SQd9Ji#c]?pnCcVbiXBO%)uhpjcg=(L3XN
%cpao[c[[FR65^mQY*aCT%T42.Jh-a#U>QAQ&S@0&JLJ$;g>NFp#.adai@2SCM?.F1KefA.pLl3gj9_^j0+"];8u`Nh#lt0WJfTE'
%Of)JRMi`Eb$tt;E1dsHg:emT2*=#rE(skg#R]qNG"rcG-^OSQn#B3\)LKe_O@R)/C8S8ZU+j;5L!)+jM(jRT&[-J!TK_J<%0TYdZ
%:eqA4a:m&/AC<C'2H#5-K/,\7Pu/Y8=!s5ra$:kSTbro7TTS_t</)of!<Q,@.ckat&bZeR7+/%o;k]n*LQNr.6\L%$'&'gJqZK.#
%HNKTh%jOk3L=/T=LLLr]Bq@.HSs+X2nmnC+aX2F3(dsf(nNS5?g?9o,:j"gF[;e[(V2YR$l#[>IP)-/SdR6U>f%ZG@>&OC9Pb#=q
%`Y+.]7@?Ih%?meCbM[m>WMiEiq8[L9OnMBG_;kh#Zqp6'<KG2B/a\c"9.%c!m?@H@V9&+)8qij7rp`*rUj\DUq)nJTI?K)Y\fd)=
%g*c\t/<\oE-i(f]rtIU,I0`p&^Z7?P76Z8l/lmeI7=da09aZ7TY+h#r^YjU36bi.UGfHZ>5Q/M@A@seEVc%ro-Hsi%V@'tY'f.8*
%Jb;G7(76:"0g[P?%K%>RR/BA&a\Vj[4r*6O'D)Sfbetl%@d)ssAiOd*J"LAqB.B4#R5C<c<n%'7;9,4V0La2H;@Hq5&+G2QAs2_A
%^ZC_BK)Q'U(Dn!N4Sju5H2LBEGc_N6NP:7lSN%4^(p3s5M9d"/BT+I6W%sj8=KjOQ>=rU3J^/7-Ff83Rd%H4^1p<h\g^pLlZG7qd
%8Mfjp.h\*a-.Pip\B",L:sMp[`P496N>OB<VifuS3*[Uug*`.?_J'\<-l\A[H5^LK<15He@]=I^aJ8cc$fXQZ_+_`iD^:'V5,iLm
%=6Ya.h\:KH/bt#LU)S>G]UqSC&VDR41jhsD:/ne9`kV`%^`V>OiB66^^]maE"Pe\T+efOEI6lKlL_E\MGS_4DkkPpJ6nGGSc;U7_
%aqJ$q6UpBAJema'dX?WT+bjr)D$kDB@9nic1<4.(=buVMJh/T)^d5qrYYufp^suG^;#5Fb)^'pGYo&0bHA4)MU8k(jg.N8O"2koc
%:IPk#NFMZ^j8t^-3NjRK;jgPe"3WcWU0sjY#Li_X#coNX?-jc]O>&*q_aS%1pGqFR5#&'I9(b0H:A^<8GUd@K+<gm)!.6P-n>TBG
%8gP#%#1F=mGlnJ*a$fdO`5j-M@djd*:1K5rs2R!6ULRA_9BKs?C!7bDW([c1!k_FN459hEUgd<T';^N<QG=d)7c5q+,b.23UbVG=
%.oPF?\gF+^p]c-SIt0Ln)fo9s4cqQp31ht_Er)S]Kfktm6l$*r$%3t)&],_\ANVUG"(;2gcRAYM;0AtqM9m^mUZhLV)/G[SP2Gbf
%n=DP/+pJn2NE]K`TF`1C;'X5I,cUCI)qE%s,!O*P>b0YJ3[RH_j.mb.<p2K.0HU7.irL&pWiO]D;,PM*13i:J-\Jm!7Q_^m5ZAA<
%!E`0CJ:LT2Ym!]DgaDUaMDCct!_h+"U9&&*(i"qgBrW@/V[*k!UoNV.7n)-/\-`-/O+Sn*j(SXhZ]&e7X&.fO#pM,mq\;M*TR+t`
%nUYju$7&W-(933".>'Z+cjMN]<!(_E`0?eCj$b]AblMo%ct8:$0e#8\i"!d=kp-T\?bcYtD8RasU_S9O15MC9,6I2AU]Lfi>7hgK
%J63Wu$/HSuRKUVb8S<E35q>W;'qM)m"?Y#gK^M6s=<^=RMUWA>:eq]0g36F4,L;M?<KTeU"mG1bV``HP*Tn-Z@qHYkgU'$6j17f1
%Wl%EH$nc:C65ZefH"^8DU8^^V&Q\cn%:)MD``&]0#kpTA2tC:[.MG4D&[Vjo0QbaHA-*t%]`4D4$2kqaf?fX2odh)_g\i9q`Ibso
%Z+BI$Z/Sb\NcUHV0ni&BK0\@(A=+cc!HVWU3_tqI)"3>q(e5EQ)Vmf4K)Wg>Zgq'mQ-o6"88)LnoF,UoYM^-#]F%bH+>(cGW%d@:
%C*HB22X7<id0=13+i@dfR\CQSeYd[mSC1LeR7qZe5&XI4lCcMR"(3803?FB=bTqj&;-&nE:8fXb8:eED$_1Zeo%J>dBL^HbFfMat
%"2lqD+g2h^!3&Lp1?/.</YLegGj=4Me?\(NHTR:NjV<O@\u.+'1]X)=k\Z9M-:fWX'O+VS.o&fJ*fFLOf[D>EA$jR=5jRqc[S<3X
%@#A)l.-P7`.#,`I;Nh8IQ9#ga)`YtG&G9^8F&[-XZ.4a[BL&(^:@u4l!&92$=Y?[G^G<m-)Xe`s"dhc,R^f2.FQGrlC?RhhNf'uc
%JPR&O'U&uJ.lBn`'9rVnj-*5;_BV+Z$o*JBL>ou-d06(p^!%ntGG#>S\:q4dqJnoQa]MA#N_"rj&n-!7TULp/T@*]BDDYcR/><DU
%BM]MV&LStrZK?<[mP&dOYjW//*0`J/MCpA<G!l?JWoo5=/F'mWW9TbD-T&+qmScn"c`kNCR6jUo.$4%(h^I'@i`BPIOK_F94XrH\
%1HF_GNQG$a?KQ-'Ch_-'--4-GK%;c+"4"rc2Oj%YC0;1VahX_o2)M8ND+OGQGje$[PLscM8pb"qlSP^Y!>Lh,NAesX:pf,b0Vj!-
%9![%:k,Atnk7j@=UD/PcS)b8pQ-pT/P&r``#4/,ieHc^$1R38%HqHb3@3(Ak,dEX"Lq5Vs@q<qo_b@76eR9[8q4^%\9[Er*ZbeQD
%WSp*b]^%.?c%:/Gp(RaZQG5bX\GoDV"\JW)SSh.Lo@W&_/dT%k\mk/'f[Y)ddVM&kF3,[R;R9%/;.(`/9L&W?eT7/b%ZXr_!\`8`
%[P/3t0#YY)`!=?VTNft!"g!>"<Q-H)CT1YgN5N"@Hr/gSW[g[V'$p'h\A/J;P`?"Q?d-*kW[dA3?46R+?O&WY`iOt&OA+fs,XQ1\
%"23qIP4\qU1r0Kml?]Lk?kJX4;Q3b0j%15J<P)%L_"AE+\Sa]nJnpVC]+WgrVEsc9V5fUkLDX)L2PI*I`=8X1K#pBS`_d?`;^7-p
%8J8EW_?JXpeap?`ZF/np;Fpr;"BR.]"DNb',/SpHZ3F"_C?U:N,7'Jp7!(DJJOK_MSVV(<KZQT858p(>;+d\.=?T],JhGKFWZRb$
%:?&3'&4qCi6VXKk1]8SpXMrP?,u*,khcfo!%CjeMlhe8DRkcstMMdFWhbhNgXf<uf0k$=#@:Ai.q61%&g!giJI]Q7;1r*bB_LZmD
%4@I_m[K]lkPa]THoKSo67,"0*Ul%PA[7Smg3MF<R=.h(Jn<iBqK1+>P<3`,\K%et!_qL&XSVA\ofaZT@2K2&&]h9$pc7-a6?pFbP
%$(BL]ADRMW[.q8f:cA0SA6:7tK\E]L&0N5rB8C#IU!p9J+4\c;3b;1;9Jgo3PZ=B'e2R#D_U.bI&$86d#)&6('3O6S/t/]45q%C@
%:E;]3lAfS02D.Qa:,U\&9b:J2`L7p_cTrrBKPJKH#a\Bh$jE,N0o?.n[n9n&RH%u==T<*$0AILW3l>2oWmF0q247LXA(6-DD+."g
%ht8#-k#MAWj0dn8Ui\[4oNl'%;8G:<TKjJo9"UrY-W^6J=o(\TDs``h2VqLD1W"9eTIA&&`CJgU>((FD_IR^Epu/IK6'3j-X%q1N
%iK&82JSsejj<H=-9DY1ik!-I)[JQ9?]jn?YgipT8^+tWuW^M^1-'e9hVG%u0EC(l@MS@97h[7Lg;p[=#*O*138Z@V^Gb>Zh!4)<&
%'jKI%TFDTH'ih8LHRl&:X+jpqLt['$pF9XIDk.4=eaVL=l(?B.=AC`t.+Lf\BeThq-`L2F3&C5Ba<sEu:o^J/#mLqiNTs"j;-LnU
%'".[.$4b5FWfX(RYSne;+JuDOV7Hq`*[.CM%S6u'higoS3\m03`)KZ'LEY3I>/aAE/CFnN.7PVGl<#%T;MHd>.*3n9XtQeD"#]6h
%8V92N-&0VOW;:hFf74=Hb1Atp$er.!4##>=HnP.TrMK-bqgkAF8Ybf`kuWp=^P\m5?fV,V)Rb";NjP<O7%//h3skU%7uCfe%st3s
%-#1u('RB0>j`Z^?D:HWiWRGPlL2@&Wd\o'nP,s&(kE1'pY)g3`*U21<JL$:[rUI,GCIG>j<Oq"F1rntnDS%.,O!85UAMt;OD8Qh4
%*r[e$S#qe[&f7B/aJ7H+h&Sq[?DBPt7AMR8(puF7.5I'e%12aXUW/$8TVQU8MDY1)N\h`aQe?UEEo1P'189$'*#T6dFi9;./5dS5
%ZIGrTJ:8af27``9okIKPkuV[F'qs_6p&<kSV+nMj/p5p^Fq7SKEY67iG.lVoogb.q%tg1tMo_hIL57[c&a<?^J/2TElD2Lo1EN9Z
%j'cKjI=F4G9PaCaaJ^CXP5;4_+-33gGJ).sU(MdV;+LSG>H:DVG,Ks<,LZ$p2%W+1lEEJ?@#Ru4Gka/!b,>etD,i[d"GUr<\BLh\
%#`n'J28p5b]WO2=_I$WGSd,<@HneMq:l#g*ogfZr7]dAIeVe1U1+?3M+Nh8NA[P3Oe;Bc*J>ekl;W3R637Cke,<26not'2/W'0AB
%&31\Q5UNW_6._q'[BB).>3hbBXL.gZOqpXW,)NFEL63qd>c%'lFg\7QFB*1RMV1jl,'D$<M,]g4l]P9d2'o6pg8%];P\TML[+-oE
%@RlIZm$$FWMGmk`Ts#/-lS[DR[G_<u`gB^G'1cU85%D"G&*36d1ZJ^dHg+TH0GsV+4F['/)32=,B)*,IdLo,"_2>,BX7mcc.'rh4
%OeuWR\FUQ*//O_U8Wl(`%nd`PdVfiFE^_$BPog25M)[f\'k)6F\mg=_fBE9"9>-p@`opi&mZ.V7hKsb:=+7m2Y=Znr;LO34h![dn
%jg3YGq@Qj'5B0B($(!$"NM0/A&UrN/?gL]JQ?_CKp5+^I:eA'<\Cqu,>X4.:W[o`cVl26IM*BhUdn>*THLK$_XT<GY:b*,g\L;k)
%>/<>(@fDpE_'G]"1Un-4/_!h+pRTgu&#<b^q9-6IH/Jk"o1l\pQ'_"C"$RD-L+nA*%gIP6K:S,cDPOc,]ScR6'/iC<%8_Q49"9fd
%1PZ%C8"MtG8$1m##>IEM"5RIXd&;W+4;(9?o)epVLMj6OBb.f[i&>tTs02V9>$$W/,Rr!&]sAcR;'$6PbE[Ok@fSB:bDRiW'^/Xp
%jGc7S]K@BWr`18@(:HSf=7L#(rsP5]("nFWc5F"CFZXs\'l]ZMNkujR,sMd#2K1egXZ@4RCM_\B21cD>SQTp#D"qol3m&:E7^a;*
%p2%+;A!sCdX.suVq7'^oOhE$NW&kQtpNE`k&A9!k8!42^q*+u&<F3CS<<mI^8rC3C>.\dY)"^9`.-,+qUrbF6K,sp;JZR&9;6U"J
%&-#hY!'bdX1^-BEX'KFb)a1oMG6]-[IEjC9To4[_@:J!H<M9amJ,KA^%ah`rFRT*<Q<?CSIXGan)b]DR,q4/l5Z%"+\@f0?X5sUB
%%cE6_cc9rgs6&9grl<oFqP.sns7*RjJ+)&*BjL-XWuuRG'eT>_['982i/U'nVs=Q]r]IA.`t/YhJ::go#'6,qD9S6Vh]Y[99^P$I
%UVFHrXbtSL@X!e/7E[<RA.9tKUU7?9Gt@9)B^.gVpJGG_]64`"jCr5:'!->;cl4*9n?ZDUD""D%"1c6!8':%h+#;f#=fV&F#Rc01
%U=-\*=+@HRR7sFibK2$pa2k)Vm@<n_3cKT%O-A'b5.ArOKd*mZK22)pPH+P[4Rmpul$n<aK9#kBpre/lbb@CDh.n5_!t>b0lB_B&
%As=2bJVS=WJ#V4T]R<8)`hh1aoIgLT"Jt_hYRT7Fa./#e1<k*J`bGe?OhtGuQ\VO>C]19g5U3.`4C9+p47pEdb@"XS`nm7+T-EiB
%=Gpqm]%cJC![4Aaj`V(nKL;e(q%(otJtV>MeQ^*jQ6e"$S0B!G0jI14$n*Y))nk4rG?&puKB.UkKYHese]q8K$kJ(N"ag+FTd@2J
%0!VG-`\.m3]l4=`oL`"lecWPV`>9uAZP/75!'A[>KQd4b:T<<086U+t68:\L=D(*Jlg&`%er`(S$no<ks*<d'Y7rbLGukAMp:!E1
%J^4+:39k^;$e4&e.\`>>($oA5>`b]M/uejo`XP8u[getE>=3]2rr$bdI/beFjMOa)rc^klX"QJ3CjPu-pX\NB-!FMq&T$^2og_QL
%+%u&Il6pp#DmIf0"gtU'1n8*EZth%t,Zq/@6n0eb>="qY#!OsIJ+,k\K"\sfa\'KS6rkf"9%Nb(`i/!U1o98ONDY87j]-d]f-U?8
%`SV0+!_mjQ'mOhs;71u!XT]i2Sf=*JL(^KV,\Xd;1r;X;/mh@,&#o_'?66Pej%^>D'G\39&/H9/NBoXBDQ)9'%lI+GHc&.!!arJu
%Uqs-GJe"VC[6_LIQia&>n&QFHI!M,%O8@%d<S3ParZ,^9%[LCt6nWu_OCQudO-Z7\ORH/W4m^(%/!k%UTS_="NqR]SY2B@TW[`"f
%jZ:%=Eg^4!<QE_!BN(5HSr[qI/nJCWS#5#1-4cWLgdnUAL4^u/&Ccs!%Fhj:a'@Th)KdX4-]GGbW(dZ!W*4u]=prm;GLbZ;L*19q
%VK5lY9(I2SE^fit#d;ZUC[FlD6mi0<j'Vf=TD\RNpn*'-oABSms7Q98PG(h.MAk$aS'.+_2dR]%a3B[2F^Z2K@Am-,,q%-FV+MaL
%*R!/05cMgCX.5/>"!i1FPo,c"PP?/"Hd-Q<.4q1d#HIRqfgM26lU+[EHs%G53jeI;,S*cLkc"lADS#n]-1pjCCk]OQc$DCV/:4@R
%A6bt\ZJaE/>1`Tt(3_;\<pLA/48W9@K*aJ63b=3V]J('T88&N(eR"eI8?qZudTDHt#f)qq?]D(#'O);Ef"G8#g6#WB&+?6hXL'>T
%Z`!TaOf#<&$3P>XARk7011gVqm.C0q8N1CZ>V_F`.]egIf<S`D";`o;$('RP4+r/G4hgGc3lO.E22S_.8MA.ohnaiD$XN5i6V3O\
%>BqhlSPB4==0uMf[T+`TduBk\WX#c5X5?"c3s(o]q%_0&cqfOUj`a]Z<dUV817H[m6]6PTXrs0EnYXRi#^2aK4bsH2DLJ.g2*F:+
%?S*1R1Q:Wr]Tg3pq+eetE`;A5LFo;5oE.,hM^!!LAWuP!!P5LZ9S1PDN&4$.MlYX?LM\eRJPn5$U1Du1.ahM#oEPTu4_ljUM*1Ke
%%BUo6*RS]W@k3k89W$hk3=2Hp8k*PgUZGfLqXp+Qn+R`!<YF0Xcj^O%'Sda9X/D+;Db$i;c.pW[$^9D:9X5_O)&fdHA_(IPeiW7"
%ZLT+NrTe%I1u;</Lb,=-EV+BaC`.r@_n/d4CXnG_QF;E%TQX`C4%UL/>.tcR6q#T&E^OSDpas[Oe,IG`S5(0H#S"B!>SaE2*fJ1*
%Ukn0.7m?dWYUgs1L(]_-RpY<Pa<p=g,3#4O=j7\[23#iVVN+H<NFUO=4.Q[JEhX\^0>02%r+lmYW/!Q"!iF'(@`aKN%i]*jq_d"W
%[1$<3m.'^gYHN*<Ek@)Q$T8`ugj4A-37rVF+PWA!%,KbK42l[IXL!rG:%lcODfdc.NO']dR5"$u0^WSGTO&m`MZo4<Jg0fQ7[Z3%
%4]CLI/&V##fG1H#;dE:BrC@gc:diAOmcD*,fGMc&R7GA@N+834k>tT$%SF@<NjS&5GGMH)o8MdI\46mOA=q;ER=B+#_/ek1_mfms
%+Q4)qHZ^[Teo9+F2opFcN0(&G>SIFm;_$ut6!c#M)I<!Fe+8UOT]*S0Z8embZ-nefJZP)W5QD-?#Z*TH*=m5@4uO5-LK[V22Om=k
%Pr-G-;rO*L\Mftl&r(K]Y@U4PlHI:IM/YT9>[#^R&WMN*>Du.!ZJ7`minMfZjP/#\k1e5^p=iAm5rOUKqtZ;erUd;.rVR2akDt,^
%Rm6l?s8((AaLT3]nXa19:EiUoF4\-jJ[5iGp%<3e6Z_C1'/G/tiGb1-SD93\m:K-9rT'L2\XF-NGAIqZm(^"WJcaM%kHNMYFfPU_
%,71@f4(aZLNZ<e)lr!s(e4A2N+B7Yp&/8,Wjr0bK6kq:d=^5itO[BJr.9XU%bU)/oUsSDM^I&6]9sK8T^!KV10]6Qq=W!DjFOplC
%fG5Dm:e,BI[GZ6]PRd#3:AkD&X[WZJHP7HY\^1UB)sTP$:F5;3:3GKG*D/UF!X?p;B3=H8L5L]f$+SV!pA'#uAR(h*Hei*";@/>7
%;1#*uY:pd%<09um9bh%\QkYfCnq]QQEIPbAbPcur))/ANaPM%i8$ZuC\$89X6:edjQ0DsVL#\-b]VCXAoV?Junl.uGXZTXGh6]6r
%NXl[W@H=-S8C).^_KnnW7.e/O$9(!ug6!'faRB)!UM>I&_f8BkYu.Qn)^9=;P<)IVAf.\Y_7k"(J75r8264;Ok;K0PDiu8Tgf^5A
%+I]'O0!07uBWnFi/$6Ek(`p-D>W0]\>>Rp1JRdS)phBZ1CsQ'3Bf.^EH4Vuh&7US5>Z=C_c&49G?.%e&;4E0[oVi3q>4o!uOG$22
%MPB@^)(J$eX%$16VIY0QGLA[b`6bL\EJ_\;FX(1XgItUQC_XE'%o"j;D6`hTYO3YgUlaTAWZpIYNSmFZ?;Fk)[LS\_@]gbD]rO*%
%r.ifg[7AMX>Xj=bU9E)ZhH91+(Ntp$W&GWslqgXe*'6N0cDhEbRao#7HoeK5=0b&*\]1h/SN8Jj4AHLn0?&Pn2jCd/2q7!16V6Ln
%oC13i!l`WWqA>G\U_)-YA'`oEQ9+2lr%=rp%ElX7el%[iXU;!d,bpRr@`K3m;X5/$(;*=UiPk2@>"2U>0JPF=;U#;#2>f57Y1]jN
%Cn[4Ee*;F4cu)rRLT[Z78LNRV(D:YD%CudEb+6fp)b+KLrT<kRq-X*,J+<"-n5#//3_OS6C0h)KSI=Fm!RG\$_q"l>q1mgZo%-58
%Mc3&_Kj.+r"]0e1)B/V?&Xl&tQ*BZfqVV%g<pufl](Wt[D6U@H2^qk!eO4.N)]piYfD;MhO`7@*d#8Jub#;9O(fti#_8T\G_MPS<
%4XB_a+]j/\JZ$M&;mOnTGq+h@e`drdW\k5MU$<?Y4R)V:op4D%8sW/13AM=!47FQY$1@H@3@AfDaK*fDL"j+uZrTV5GG30]5)Nnh
%_kT*1FoW*tM)=,aIJNJ:F*XX`R+KZ9doF)O);C&6Ej:pR19GeTS0&'0NdV3TXL%cA23aA[MJf3C/-_uN3EWT*$Pb_!+1(Z@]^O>/
%ll5H"2p=`"4YEG^nBc0ML'NOcHT#\j\a7CV*bWEkjQgj$<ZR;iXI\ZsU`QspbIos*rUEXa:>7L<7Oot[#^BNOeJ"b;W81BqIHg%,
%GRkS?:Hbnhd)n`b&SgB+H6@Ud7M+YjI=u^Nb2iiEV#B0D]$a!9\KjJB+']Sgbeg&0nR-\kC;,3<-Z"XI[J`LR$HQrlRM^mI_1Uuq
%-J6J%9cn\D5>2(N=-/F0jJ>^U88/P<H?\%KUQ]:q_JFtD3gK/a_USq&&]g",h!CkAAC+.6n)j2?1DX8Xn75u@.fmn3*[W9rf=U69
%blH"(!El>+BT2/E[6Zd,Q&=S@dQsgUL%%G#^V[$sJ,J]3J%2Smb=3&0@@ckb5Pb$Es75R?Ig(a[5QBTL+91ibO8n:qO2(^]J+:j7
%o-aS1gQ2Bj\"EZ#hu([tj#?u<4o/*j;t]Ou5CfZHq\(FSRm6q"hgYL`AHU^0s5:*\h&lX@s6uWu>5?trb<5kZTV2Gek1brHK\FE6
%*;S4U[Yg]++-;$)<o=/'TDj'5qaXJ8J,0-B`F&Y?5;Y7mmDhHkp>`p_p>c0bT_-8h74%urGQ6("+912)rn2f"=9%p-6/X.;Igh%)
%idZlD.J3Q1&-(e45PqM]np_qWJ,Ad)J,AbCIf&XWJ,Ab#77;H&m<,s&E!ZZI3Xlt2A`n<QC9o$_F">dKYHeqA5S&YS;c"K:gAP1k
%lX-!3ha@&:QPt<E(+b=70t'I@<g^dRD>B,QdVn2;EZ@eCR4+qR!@%=tFjp/e6FiVD$PMq=5E5'&D*/$/\%A+ke[t4dkf-aRT9Dq(
%<i4RA*K%RJs(7s1%1h&'f*B:5C*n.1g,k/YB9&TB:NH$9SeR+<8SXfU`E!jg.!u<FD.YB/o+Kp&A[_o^h!g,X+>C?sA"QFf*KK^8
%K8\bp2C;]Eg:M]S+WT?T:;Ao.g`q>@6!V_]+%dd:j#J3.#]91hrpc('?]A7*]u92<'Okjeq2`h`/HR001P[j2f%-#KpZ0T<itGcK
%KQ$4NlH<b1F4j@Z3L:V<]0TkPI4Y4fNHYL0o1OHuF,08aI%/?(Eh0hdHbM?e[#ts$JKo(P6Cg:=b%:<+Db3;%l!`PIq9hdj2SOib
%U[60Z;BK]P<G8d1OLV>L`X#97_]PrrlgY@4TbVq1an"cFNF;a-q^n0cCgN#'BtUitF1BrXWRn2Cn?!]^^)sfiBU4KSPB)$;/^o//
%Cud\DqjS`hpb_,oY;X+FJ3\#8YQZ\;:@-aukP/A3ZQ%[_fngud:V6")1,=6<noDFf#!XoFg14JK*8Vg`,r_[]D3SaFg4`'4FY\<L
%lORi*q+gLn95(h"?I'A/g""j:Fug*d<"d?7M:K:MU&PbLhD?90>]'-O\%C6r7jRIJ[T9)+*YZ#>M]T*;0E2n\KG4I#BcJqqoBM/D
%WFe(W?gp>c0F<!nJm6&[&/_:Q;NB]X_*'NRI*:@^O%B)`G4CR!`nb]I,f+[uE,VqibmF9l?)=7Lh<[nsj7ENLVM[*CmjoQY?r3j#
%To-^nL'$\u]nB9]%,[!?o"lnh2c<0CZ,B#hUWuqoO.bt`3Vk4+X.*o#7.'gpID1/Sc(>aAkJI*rq^_F6S:UDak@=7O=2N=>7,t!9
%ap)eTYrhqY'L$DA$gj!CAEUY<h@p@d>:edmhHMa\g$!2O;cd>^,Q@%SlUV]kN?c:\b%ia85QjQ/n3q<rVYW_Pg.S6A\XglVKs)JV
%`fn?/R&f6Mm>O-[8"7(V,Nu3/]2jh#NV+XmQJE>onL59nEfb^mM?8s'XmKN1T7/NhQ]\iTcD@'t`+QhB*+M/520r:D*gcZR6Pdj>
%2E9?7'E.Ai@@kSA*k9#>99rspj@Ea-R?g8@`ZS)k,q_E?_;hbuaX\87pO0,ZY)3Z"e/TB4h$ld-C7rpi'o0o%qXl/,I,JnerG[54
%\M5qT;C[F0CMBhe8Uj?&E(UOG3GAVYZIqkYq;_?J.su>6?+JC3nf812,0+Z!fZBraN6]DXH"TV]iX]:5YOi%fe^?uUFOf9fU(C,_
%';;`OXF%hN_9Flm.R`+t>PX=WURU`EDYeaWFgm+Z3!uYp%#Wg<;bl*R,p2s+pXU[kp:QM`"HQcEl3mseRg07QDne_?@e&UKJ800/
%iTRfb'm%XU44*_?67pd"jfd;%6Y!Y9rj)+I8UY\I=fgGdGlb]o"o=!J2ZN"`[)Hj<p$5TU_rXp!cPA@HkYsLaeAarWmanR!o9c,$
%5l4'n-:1P?ROF8D$gs77mmqr[=6"RLgj.tah@9q9dkq)jb8qA7W6!^&dKdf3H1k\Eb$U,Y1$pDB$p"jRl/q&QAqP2nI\?,BA[ZdM
%S&s_gFd4ubC^A6^+FUCtfT-*F1jF+Vk0^#o@ugJ2HcjZ"refJm]\gs8R,cBd'm#lr*i$pC)0>__;e:srh)lBBUW/A$W-X_1CAK%H
%dA9.$Nm=r/aRqa.4S$!Rk.'3\@?+9;=6B:_>sXh?Et"qn7UXC-f;O#i!7bnAkZbBX]WBnj-W2V$pZUJS!HYW3^PQi=o1*WaV2L36
%p2AW$Ni@!$NV[^$p:'=DFEmO#ebpnY)Mb0M/oCj"!,C^PH',4XU7-op9#Jj]!\d-$YKb<F:<`;47A.YRj^BU(U1![J#tH\9#T3RA
%B`4T"EP$ec"["3N]kbRZ]pch<jM;/6<%]lRJ7%B_AK+7<hO*?Y&c*p_FnG&=Z1P;N6^WcS*$d23N@uoG%$`ETM=B;/Nk"'XF#_HO
%"0FMj+qWDALP??NcO6\$4/'i.4</b3K\Qa\N*[BJ.<12K,7k>TGJM;u#Hb`pdgFnU`0'"5)d9F0W$6c=l6IkCgGS!dkX>LFje5aK
%`lW=\YM:,j`8%4h5mGh#V]U.t^5(35'..G`mGpGUqR46m7]L#t<-<rHcpT"(k&+8(Rt^RZCT^e>r7W8c6)U75UN:cD;([R=+?^dY
%[5&IOW^8KUfI)mIGrbAiBa]P:bH0iD2Z;l,COGq#*$'Ihod&X+nLGV5HbrqRl:%j!K<r`>_$%#;Q8rM;YM%9lfJc$SX99T,Kmtm,
%f!d/lHt&QQl"kAu?Y^"s<Y5I<2dKDna(^Mlb-^l,3n)KV=38PQ#L=RL&c;#T%G\p![1LQROd!s9*cMK1,:NOFO4@lYnf][p[/+T5
%4p8mNlGLOPO2Ts[]R4Ik?`Fd*&!VOQ?N4!eS%HR#2@VK,_0i#cp5<'iAG/u][U7<h"#-b&L)h"DWZF8/8,:(MJe4mB063+Xq2=q/
%&[jEU.U\GUXO>jJ=Shb)7q&+hOfU#ZLTV_`0&V']ad^RqKg3153^Bu(1sME?)/Fo%H\o\,3Y"biWco*#8!@49M5kYEPWm\F1rq;T
%i&B67\*[%,YYn,lK0->:A%Tc.it#+eU;X@,(bgHiaTYQ7jqh7:gcsh>f=nWO#?8,W`37LSMc[k\I'+5g:VI7Sq"7W7!mb:CF8.0`
%GnNL\hYDLl*@MdZ\6e`ugoaG"TZTB\BllEFFOd)$"\IdoD"/sU[Xq<'H[4IO'oTcq)n2F,VMKV:Y=0L2ankO9ro-%ac3<XJV[BHa
%qfVnto]cX.)>`:b,H@uY^VM0[a0g!NGS';-L1c[.6%eI0JA,^D#`K6SPtWn[bH:)4k2^\-6eGi@GM^,U/hlbY6<Vq8fcYd+O,``>
%]6uhASL<2!O"Ym,k9u!*-p"ICq[0fX<1palP?/5)`3$gu%&pC6A3"NdH>'n$'ZJ[SY6D:&F4o8?06_aTgrQjS=)Bc5VE_;plZBP^
%7jK9t&/#K7XZ(%+nJ1f>kZ3JDTf#W`(^-:#n/KNOkVSGW+^0E:Go5j$JROMQ+A9?H?>'l($/n&>LeP#3=2EC^#<,9,mY)0Gk&_G1
%fi$e-U\%88_kqgZ@c765`#mgA%FUTT8#Hfid7nOX&bN7L5A6Z$$4!WtR&-LjD_FdH/M^bjm`%'2gP/+LN&s"[j?)<n('OKtri2la
%,FR$He8t0QAc347ht6$Enh5H7$>ZWhLNIKE%60J&_]7/WefkWAULf)NpETBk&/\so5Ah[]3Z20?kAsNXR>huYilbKl'j3(LTR5Mt
%`HmVkia_u["]C&`.:OAIn>!%pm/H[4;!tb6oC8<^0MlhqFl#OC>#6cPQ_'E::UVG4%2^k:lpc[!j7*me+IBSDdad#$/+cc*NO:;,
%F`l_NGXj=.G>`2flP'j-!P`7>.-<s>r=b#VH=c8fmAa^u228!Yb@*-8Q$Cp,GL0]LfDJ;0Ao0A&60$>=mSVH"(`eO$q042*d[m-;
%Rm*_I=NW+1W'M%9&3K]4J'YJ\02@V&\'9iJrP=d7EOZti6]8s:44!lG-`^.PaN[cV[(^Tn.^C;4"?ph@,'2JnBd9h[JOMUTcLP%V
%n[[-iD/J:co;;%DPg+k4XU`b6Emc-9aaW6P<&cJbm$e,G#o_"$7q>MI?(u5^IHesFau!WmL(TVf#<;3hd19YB:lc6G?1I5'.s-g3
%RXqP^jNFQ!Ge\Rj(YUBTE?sGH1VU>"m[GE0<0jcTnRqgs+FWf%@JR6'nL1l1+6^siL!6V_-\p,[d*Od:q:mqEhU?D*ie')A0X3J5
%+`CD;/b!f,pKM97-BV0-./`[.6Qb9o?e1(VhJONP,pheO^0'?Xkt<#)6RLoqn:!)S,$I@MpL$uPnBXh6ODA/DXR3<)4rsI[Xc)[Q
%+1[k5\LM3FOU`D-PZLq,R9L!5jAH*U<>Pkfg*gum/_j](QHi]@BdF?Q@k.gY[a[>%#5=:WKA>(rcFqq3;5?(-6\p_.+9D;jaPFL1
%`k'1a&r0s?I+\ee18c4d3m/OL.Z"nF=&<A_1i`skpP\3po3F0p)S0=_'5:#kDj9'U9[AiRZa"K=1)pYU26iMXXK>hSM7il2GL-!B
%-D;RaIBeB9[*OO*k76fJ8h[W5Cq*)*Gd#30+(X6?\tN4I5/3B67Ggs;?@<[tmsR340a,p<*c2*(WdZ<2hY/1<D]22T0dIq178,@S
%mI$aoE:M8?:tf-?OPQ$oOH<QBk$b3s]-I0qNE^?eT0QW9#u^I#*/SYHCJ,Qd,^bDcq#dV+]Q9!iV:#Tu`oa&;)rL\>AbQD0qE[]T
%,P8)Md5A]J[iZ60f<HMA%inr+b$Zg:i)1EB(Qkb#:/WV%EN`K*pCQOb3+0S+9g3iF,,.iB5NhqA]AEf$ir2ftXpmTNWgID\,T&sk
%CLtEHBuhbs&Y92W)Xq9,BIm524N$QE(J(piQt$##NXNCM_&"]9h$6;#6):K%T*(8Z0AU$",Ii*qE2[7XRY.4'SRcUIHQ(%!;?B1r
%afR;]NQY#Z4Y*S?l=1PV#6?1/kmXfdf<pi"h,I]2esPg$hSN<^9TTL,V^atdGSQt6%"Hqp*XUS6?O^a8I?%=J__BtU0H8"-9&^_6
%3^-[tVCiD'(<G+DjY:qVGM]qN)p#Yk8/U_=P>uRRKD4V>fWNP#6Y#;f(d-O]+s+IOSBC5iT^d96L-UZ*%C@%&0L3CtANO?dDkNS(
%].sm^]bZKTIMGV9kr1B0ljY&bqIqO=8_WiE"Ra*Y3K:CI1Kh]JV+&>S:*bB)AtkJ^hDL4=W\b^3$=l^"+,4Y?ludN^,@rdEM!E06
%EG^]iqs#XHk'gSkWm3>kWXYE.)$6krLPtEu1'7?scML_,2+=S`]N[]j<s,O14Z/)7(Rr-*`qYfIk*igjKZ>&"@[t6*1$/U`#q+XA
%It;J,Kd\KEU(CSA`k`A"5Ld%5ib;Eb+6?GBQO!n*\Sb-ar*'TSRI:6R-6jJA:I:p3PT(D`A6JatZ@mFa]kJ_dYpphjI5Y)?oJN6b
%M+m;Q6Y606;V9M@Rf7V255*ZCR$;GsHuXFeqWiHsBME)WSCAeh]A4<_@ODjGNCLTJMFL+`L[=a5gJ,Bq@On;Pf>/E#Y`r098ZJ"S
%9r9BpU:dEHJpX5Fa3E`IPQ1FEXT=e6iUH7bB*`%>59qat7=TK-r7"2PhqBO10*8b?3$Bnp&.sUN&*m+8(MI./%&(d_mm_@*cSpHf
%r7U4R0pG5;OZ(uu_-rVYjg]8]^?r+Tn&Nn".=ICnUtn3B7u,DtA/H?Ck"c[%$9-[f.HEQg*o;fX)LXJX'*[I:Kn4YBGs8WAhA)L,
%Ju3l#Rh;&TUDQ,,fO3>V^7ba90u*.6[0hu(,rFY=Q1S_Wj#EB1l/#0/-?e0G4,>MO?`]nL6$h=chY'0e8F^1qdtaslg$Ihdr7THu
%XDKi`d?(p$P./hT8na0)2_Y[fF>VpmkGsFY\k=0TSuSmb&uNZ_iF2oU[,>?T6[[_M+!K!0Z3lYff!_&q72Tnc,R.d4M*V7sONh_g
%DBb9W1S2+eI_Np)hqoa)^Jq10)bQt[qH(P-n!u1hS(:F"!R4+0Yo&SG,otEK"0(A\/lG-/NA)!,cokFm&:m`k%*qnlqKSj-O`jg<
%.LS#C5e3a:c6!RhMY6q-30LZCVQsI<c0]2;GMYEXVT<*Ym]jZYqj^N$O3^&cb&u[j*9ZM),@h2CMeg:u:UUFjaeg3S?LNR1jticA
%[u">2(=Mq_Tj7?h#rR'd><bY^jK:gc/Z_"+=$HgZN;AP"!V\ZbFlPmE=s@jKNX%k!e^rf6EqG"uefHW+j?)7Yq[-OY1@G^-1r+2L
%"HNOl9Z>CKGo-CpkL_K>^Cu=K"4C`YgfOL(s89;@rD3-Qe.aOqjs0uBM-&@j246P%4-@^.a:mpU,,[Xk+r#G2V[0%&qHMO?SUu4Y
%[q'IXVA<Sa_37]7^GUnc2_LE0a@+P`([<sW?miNm)<I!s;#3:V^"f`Ae\A"Gjat+2M3]gQbHekOat4STmb;W-,^c<,`lJt;Ss4VR
%\+d*[36ke)[SQ;o?\g`$Qq6SdO3foRZ<M^YLbV3.%\/Y.0mk=PQ@edO\aWpOo'p?GQ"so<`BNcid#jIKnPGO^@FZ0An/qLYV6<%S
%^VPSOTr\,2?RQXu!0`9nPeW86OkkB!$K`NjjG%>SN!l8_rNiuHBKd/*TqU1g^d0ol[0JoB42g"LR"JJ>+NsYrEW5?9I)6sNl=ZNE
%?@/^e+._JG#P$q+(E"r:k4q^7Vr+XD4=6)&CtoCJe:GL+h>8$41Z':Gibs&rJFFOLM@",HEqbtYQ,9&WT;msWE:c+I%doU0)]BmY
%a=pWR`qOC/oX!%E5\lAI%.=`Eq)KRf&FKWU)KD]rn0,6WA[YE0[\rF"%/'E7R7qd#itp*==bCI`AnUlc5C\ZqD4hYZM9BXiZ\1A5
%h6M3#@BD/J?KXPTaj$u)$ocf7""U>@pas/@YH;(o=[?UeAj<=^"Yb8<M:K#`c?n7`C@(qV&M*Yb93PE86"^(sI<'$*'a2+Tg-<"h
%2mKr>GT8fMle6.MWQlLceA*>b=)Of!n^/\`(5%mmM6>+)m3tlX2`FH:)lk5W*=PpcW-YDgo(,TCdL%H*K.:M?j4B9&"9UPLI0inK
%D4r:$moQ"0:p[ld4Nmq`(b/ZV1Qm*VI#6[eNjl-`%QF.M=W==0<a[^:Q)pXq\3XDIc\Q;te<7p(@PbQ<g#^M\TJGNuZY0FuZ+Bqf
%4"4R9Y`<HF2g/P>9&"8Cekf!J^FAuBpQcd?X`!SX;"$c#%4VF3a3Xa!D"idJ>C?8]%8\.Pb],DV!n==YW!?4m%b]pY9^D6/6PVu-
%o8Nc)-9(bR&7=ds$I$WCF4qOIq(%[+OA@N(:iX8g!+5,07]jbN:lhEQ-t<AP0uR>1#$.h!*Z[eLNt28q/M,#Wg$CS5TjG,Z'Q%Xe
%[D^i?%C.=Z!/:J;Nil`I\a6IVeA:+$/_$9Ad`TW@l5=ZTIjEt*du)qE^#JA$`UgD^eE=0aZ7XReqfkIb6.I=HfMdZQ*d0m$:es:[
%h6V2QC'jR@*9u3DQ.N3k5%<2IOaDT&'\hG29;ni=d#'LN*%E/2R4n0i)8@M*'r\NR!(/&?PfY<BE*V59:q=h6s+(49dkUI&Q/Mc/
%p;G2HqXLu0*kkYde6R?/^?]_(_XJh$8,GRc\NVkG#7/iW4^0i0`GKmF^#oKriCW]A%T-C;,7G<a2&1(Lk?oT%T^K-V+d66f*lLh2
%0\#;iVJp(!\gGVN=q@8]Am/bPK)(.YnY+:1NT2+K]E0s3&N3AP.t-Za6KUA/qO0+tFE"q`da)T&c'*8Ii;S>qhUkhH0aDX_A)!nP
%$O[nS:Pn@)rNHkbX=FH<UnjuV&h3O>@Qs]`R@j1V.sJEtPNV&O',>2]!\&$Qo$./JX89,9qip8%*pVJ.8^$6Uf\>S*Wuos=hKNe.
%SupLX#?FXbI'[gS]cN=<n!dZu;t]HaHfmbAb-#:!:MY_e4klkn6L[oSR:]=SG.e[]ffslt1:stjhpu.tCYI6/VL=EK#7%]f5B"(0
%L$d@WVmuJ1oi.&17+0%LgogMM+W&nFZ[H$GeZOr"So4<]b"l4O9\Uud-T0$>komON_V.07IGA!KA'_OW!E7e0U4d1W4/Splb/J=,
%H!1Jd9i!9XV(LQh.:HDm[C*G=:$'L^Xf_PWgmS.UD#7+M$DVAQ_*Vh9^bdqk$]69X>OUdH2t8c.W_Uepe#>`Q["_!9Zeu33VXK?D
%MCr>I-i19*b5tpdOkNI3WI?a&2@@7bAR9!Wa=H'.mWh?k+4t`7S?]OAh8Fah*adj<kse\6,h:X;cK<q"4$s;3HWC<[)JSZk!_CY>
%5f*Nr6Qq*UejBmY\`SSTeAUY;oq:ni%5i>/TKsm4J0$D5Ps/;SW/UM#H=[I!VU2mh<5hgTkfJfiXm)LU:@hOJW/Zdr<=S54[3]+Y
%:no?ImsV<\+*G"WWFI&0E,Q+!EHmhVKo5g9/#[R(!S?=bP&#Yqs(kKsME$RJ6Nt4kD[Ss-9Es+CAIUN_$TgX;hR%l,9m(9MfJ"2f
%XiO8:(qNa?;u$-WdM[VQ6_eEs%WAL-(4@'EH`g'i<khsuGA")?i[l^0=JmUJ,EE+[ie(u.8K5T=J,$XkTM&R8D,2.pMOrM2b*g75
%/6Qh*(Be>gi,;SZO8rrB@-uenO<(8oqJdI$l%?ASN5T&6oI(h.<\4C:W'NoSr4V+$EnNY@j5r4;NC(uG6H&7$#SMm-+BF$g84sTH
%e]XfG&iU$f:glWj;ps.mG.:>1^-5%O2aHbi[jZlb8"_8C*=_0N7NUht&'F#g^.p:'RCCIT+l/Y@45f`lhF&!(ZH[7S1M&/HUBFM;
%d6u3'mWk<eEaq4:'_I7JDF*6Y%i6D'k6-ncL%qB5M1$IPXZ6%uN#VE"WY2jR'e^l-L!8QB)>d5H*@0InpEZ[uIb@@^TA@Y>Lq"mV
%P'.Od-[tH9Cun=M3\\g:I$L;;gddGhl`'>E\;r2<LP:\[5*pai+)7l9oo1K:N*7V`WJ+Z9`m0S/D1O-_V"doTofQ48`PBA#U4mE=
%k=\Z`Z48*B3nqVjE`(IZ6FE$D]+7UE:V@gY*hG@jB1^nWMDK7pnC5iu79js7VK1Z]*57Yt2?<>A.nh&k=aUj6[e#]C0'PL2TnpL;
%bSLkYS%^IG$8l-\!cRU(LP.]0p#>rdfKe*F$)XlR,jg&-^fK&F&*Dg[0SZiA$oZXEmV_]M]2XA]J]7^9ldf0b1Vf_6X9B$7)$f*N
%j8c9=<Wg]ooO5q_!oN:ch:PRo=4utVFrN&p6/=lHKPVbOl,VIKY.Y/Ye>ldFHW!*?KdM5HDs@bn)\jqFDMX`YaV)(r;Jg);Ar`!C
%f+H7gdsBZ^1h3ut-bH3PEgu];[#bJ]/,u"Ug<NYECXU@ie-[E>kAd:iRa"Of[?F8!Q31cp$A#IfX!Tp=;)2m'$\"Z=[>EOhPMT_$
%6!X*0#-G4)"W`X`)%AaXm&B]OQc\;E^#j-J\9\:4DX=Je=rUfE&?$cM.\1eHDN-PseMB(Zn!g:\1JTW!LoGqXLXtmaSX_-sk$mgS
%6ftG^8>[94g[n/Ykf)p@.8P2tUHNsPAEB*hPJbgh5+'>o[%+J5r*@M/VUKY<\+T51mB8'YGinJ/eu!Md/b[76P'-g52TPDDk^I*\
%(*1)Zk/a4/TfQ,a`Z$6V7[4l"%5D^$m0tp+d"D]@BNJ^m-8,/1*YZf`"CqpAkB(O6QqSn.4k$M1a.U\IeNAALpYut5A*-F*UQk9C
%V:Hpd4KO6ZEH(QP%"_iV!eM'aYcqr*Q0=]0P?;]L,</P)7,-,N%4qsX<^!A_*#EQQ\=Q4Vc82kd.aUroj_7\F1PM;F$8n\TcZhD7
%5ps4c[KJZbs.]uQMmmb+LaN8=0Ofsd_iiUOWNGKHL-R8(,n\WUS<dO5KACF@X*^Kjq).8A2t5!MdLhl1>5C$a*:/IC_/AMW\]:G+
%jK<_9VDn`"%aBQ01HI@SM]E<Eqn@Dj[-qj:B;\"t3Y<M22Wp'u*5X=b'.`(XjD^06:eVA>`gPP%+N0oVO>)'%o93^VAbD0i]==G4
%=2?Z`rDZ',X8)ti`[s5b;@5=e*T0]0Rm?;(JfuCJ1p_75Z^Hf+5rUeBK.45?Cs;5jZ^G[N5,-Nm6n<>`mOSrV!th2Bp90[LmbqIg
%/"$r]RMTTU2joT>N8guVkbEt@d5?kG.IMg5o0fO6J>]WM-:,X3d#0A-mC<C/hnNKYc`7D59J`;M$Wur=h98:r1<k2io+Flp>.V/+
%+09['l8OCs?0IjrM85n4Zpetdq?"M^C`b8'-5Lf,(lYpAcuo2s]>@EK0B:&>PSRH/)26OQBG`jQ06,pAe)io<pVUeV)4aM!<YS,H
%BP?\)B[mFm;s%BK^^W;"KUO:U3Z!t1$k&&dVcBa5Mue&lA_?\q/^XXV:cm_.KJ=uDBrs'maRfR/ET-.`$>m?L+`05\dhq39U>:Qr
%JI1^%r,c'DUmipjc&2Y_:$uddmA?B(m]IA(h6'K+c*5<!C@-33<P(70:_:u[J9F:C8&<F*OL',Z,gF#r3OG:@8`PQff5@N%X5tTY
%Cq#u0Ws_3*b7S:O1abNblp=p*e42M-[YqGPN:(gV:=2I/*UZY.Pj>]O$^T;[o3,r61u-DHC:JW92.:1c`oh'NJ/>'J@7,a6`\D:/
%L4Ob_lZ@J3ZZ4;/2b_mT)u#(6%=d,5N0.=C6Z_Uod'nV^DD)CnmL?_pBd3GJooWsDetrms)u$7uk!qgMcoaOeHQfTD^X_DDG7"`!
%o=qZgF5YUF^U9LM9hqDVq=3%eqR;n5>p?c)g9fH2AA:<ViOH\9o-<mtoAo+T>(_RB>5sW3)K'5+lQ<TF0f`G)[W?<,@Cq6<jCk`5
%T"_(j+.XcLgc)(]a]2u`2t^3!C\fi97Mck[hO:9XmBG,2YHk:TJuR-Re:n/'Z#hq<&T#3OJ6JFSS3%5O3t0-H3;9/c?Y.uSDRGAf
%kVAhA%=9jc%Eku>:*JW^9uNN'GescFKg*iuoe=\Xh)I7465.gI+WQn2%W1CKEV[5$m1)Ce23+hdRWc_SZ_.l<?U8WPA<rp_g2Knn
%H_Dljqm#OXWV5kWetQqA8&kuDVBD`^VmAJ7<<Wb]cJQ<]nH2<t2T,ONZk7'tEbj;aBt`/-_T@^<&CkL>0/A?k$#VDFd^+$XP^XbD
%O_OYY]o,tLp<?7X(ZM2COMM1dEJmEOF3`mbe1;f7cT.=&^apb%cT.>1Bd.\>`cOE->eVM/bK(mUq1=X;I#:28T?cVibI9l;(["TW
%Z\#4=nkj=BmW:YU>eVMQ.R.i4T5uXBP*YGn?TOg#/t[%5d!Y)*cFJ=[WBO6AT4%i/6RL7WVJ'-a[W7E$#+p;bR.Ce+WhDSLjgJ6<
%bLU\mCeI$a-[OY,l55Tq/-<bmXKo0l*sJDC@,HBM.trR8+>jV/$j$keDHd=U[FiX1>P!3a#Q0[$XDi2^.<K=LH'd,.Km"=amR_et
%.@^fgc,P"D.H6<8d]]N5b;mr212^^Jhj[7*.(`H:?FQ:]7"F^78%*_E>E/3^`PadlC`@0@Hd_b$\,!pGpEAA,;Q&nEY%`+:pQsOQ
%"]368'5=o@Y5t4<4Le7+Bm98g[ilR>PrGnT9>mF8'MY76-Am*%i5M-dI'<n+\1b<3<F-A.<ODFXFhXbDkI;:5n^&/NUfTVe?!TJ\
%QilRoBLC!qI@^(IiuS8=VM2P+eA)bq6$9ABe"YGVaZ[]bZO;^u/ue)ThX](L2De3p;`OK>nD]mq<ccO#=Z+.-luV7SPAgs+2r;nr
%XkNGVc738P0rNB0kIp%iQU](6osDrapRG0LP21/!BN)K][o7(KjfDW3`h:n!ZZN&ldj4^01<hC\B0)p#-E^+_1t)gOVJFG@]9C"A
%%iO7jXJ?dqVXJacF!j;n<_5s<Y]i[pF4V@SCMTl.:ZqJDXE&77$O`:[7pUON?75io=RN`mi"%^V]_[9WaR)A77U>!.L/e<kgCikb
%gHIdF-"YEX99VGn+m-smFk!K_)J%QIciU?i1$'"WZXY2ZDP+.G1Z-m=1Pd;n\1cOKcc51!3EVZ:iC"$(?Po3@^,1u:A[F/YF0f,2
%%m?LWlDorI;P9nE"kfebNE-j,Vj4C(^4m:=2dXQ(8(mLd2f<W(OL4SCYonf1[YWW2FGZ7+Steeq;Z"H?/T.$@N?q=F!X5QB?3dnX
%:,1@25L6F"/p_#NUQ!Tin7;0gHT5O-AjXoUkE"IB'7%j`kufGSDdGkS/JI"1)SK!8W\tdYE;o&1C;B;FARp[G34J+rP)&csToPa(
%H:.CH*004=QNX:,0jDZEYam`0fLKjbZ@gBu3[%qY>CqrlN>HOt$A/fP,u^\-@qr)(6TVf.*F(I!]ek.ljPX_J]b,EL]$R85.@J`b
%[:b<*N8JIWYnuC^lj>!Wa.*9Ts*EKb(?IE5NIZ"no9nbU5K=5E3g7H=`G^bGo5n.<hBZ^gG%+pB<S5f)TPa8tb^8Ht-Pp=PT)3j>
%4Y9CROI9bGXkd873]#+*[d+*-k'<2uGr,'!*"PDWhTRu$2OShhDhaf71N1^\,n2Fc1N1AiF`CiXH1"n=BVi6po9RIeqHWSZk0D1,
%m(Cr5o+mmbkM/!(bKR:q.J1&$":92Y8Gn8=DD>?Kl0LG)Rl>EqFV\17Vq2!fcfk"u_;p?oaZUFr-!m9G[Tu>;@maS.=E#eEIKAbh
%(6D>sHR$aPP[ThiW\)d]cd+4M5-a_9gD9,"YH<X5esg%$Y5XF$nTZjbT5BI.QL4tcgBrq/;?rt0SRsr)mg%-BTtQlZ^iOjpd]9l0
%/a-3TODH>t%jUNq/oG@R@:YbV]Pa-V8&tPAj2m[J8&N(qq7^?of=@k8)i&re@!aZi"^,eC\D9f<8[@^*!dFuh9m1St]dLp&='k:C
%>*l*\P-(n:bcq<^NiG+,!ni"n-cnQ#/LX1+)Ho[p/EEqXT-OfH/0me&)KL/O[GHZ3O@FEZpaTC4rC[LH9]Ij<0cofG$%j+\%HQXL
%,"[&\e(QI:Pdf`HD:eA*j\600]3cg4DdM>M@oAo\HeKn#`?aQEi<M4nmh\R<e%j>C]K(3062&j)`MhOWTMMb6J,=Y&@aBbWg[DNr
%4GR`1(Ve)0MN=?CT&)9c*dEF:bjip1/XqSu-p+P)/6TXb_jjKbAI#Ef4-5S6a.$N)Va:'YCGS^]Q7q`)[e"b#m]$_+3(e,D$D>fR
%p]T!XZW=&H;gh)BK[n)P.&PU:04JM]]U4V92@Eu*5C"nEM"_YCTd]+!K1+h*O:TqNKm_qeNa9.5d)g"8@q;AJT/(#3+YXB4E*;(n
%I0*[=,'0n'1?/sm48#onisoN]i-9$Q4mVFg-,A=sV;4!Q[ST6mi%T2"[+p`W#)A=Bm@_0R5V7]<`o1W,$HiR-.TCKC*LtEW*r'Ek
%6X0(B-2YgE2cbF:XV#;%]@4/\p.MKiIO3!0G":aZ3[OYH-?l#DrVDe:/_#biWRYrYp62#l.D30sLKZfg/D5&gXV]f=[6LSYraMU;
%dC<37j)9gbB0;L7=i+ee],-Gi*IB:Q3%*gPan.Qd&)2(;K30+;bY]7UR'Y!8?;'<:fUGuS3oB/IP?aoQU`TcLc*6=1MuB&M?RD;u
%G'#`TpUT[D2=Ka4nF:g*3.VOPi8aL3\o50ah4rnR-`5'N)o9F+.gFJOiG:Gi"k7_aTQdC#]C+7i41`(qL$*X+MDKrin/frF7Riqf
%no2U+=2ql?dIobA9%(d*X)r>ZX/nLt%;rG-I9'L!1WF7$')ScC";2h`BO[SKED%A1B/;tcT+u?\J9Z'jIJ,`G(Rj">S5?Yu`'1YL
%pOX%TXKq\gApB`#94FMn<o:!BZpS;peN+3YSdS9ZZV)oXE+5Hi/d6)9=BK%)CW=M+')Sc9qWO6-a\JEfZ-Oo#cY7ZI`l('Aa_==0
%9R(!&I9&=1UlrrkfVe%&<VL:HF('oR<ddMJSI80YZYIXi=M0I.5-(bKqi$f.'Dpp&Rb,JADbQW^Z-Oo#D`4IQ-MCSRodr19HHh],
%B4[8Z=_E0/PLsN5eMe'VQp7k%C9`K\JQcGjT2btdk*MU`T@df,f5:sH1F2Zgp<r9FM_l63f]VIFg2^`h`4efd]XfKi:S69P72"u,
%GC0!j*Zn7_dk''f5K_HgF36,/:YB:;FH!-\m&Mf:A6qomA%kn>4IR8]T&QZQb*0s+NE)b3V?aBQ%8U2/#pWMe_bCUT)nPCpb[,5D
%B75)uis(!g,PU!=l8@O2Ri$e)Rd-DX-_0Z=hI9UK*&0<#)dAYCT040_>c-^gHJiff]S7X#4l+E`RkK'T1L51\BB.ZOG<>`K)!,`$
%K%U\7dmlFbci9IY:!rh,^M3F0cZo6B7(D"Br4f4_>'h$?s32=4SGM_>/-<!;s36i_V$eFY;r-j=^Y*gm%#u+nNiqUF2="h7USf)m
%UUf8RY$5*L*-p1Vlq6&N^gZuT'Z]nbc179GGN54-3K>+V'Dfp7W,4H.\/sC;]ea31oJjp9[,9Xu`?mJ#%Q:IQ#dhX:VLuA.9lio?
%]Ed$[<\()icXFYgFPc\P?fo'K*f61U.`XAMX\`f),4cka>+qfUDBa;]8WC.9@M1EY5CsQXEmo4G!KR\8RKF<)`j)3dLS@d!9?I8S
%1M5?:iai"N`!OuY1#)G;EZYLs\%pT76>KM4T@n-,8,.C-D#28tQCH%.Vu9gIXdr1a'T0"a\,Yl"=^I[!jTVm<\<t2Oo4snp8>2ET
%3h`rk&":F8$H3d1DLT:X/Apo0X)UpfO>c*Ae">%-0X]oGIFNU2$[I^4BkZ36^9+i&i.gTZ)OkVKm'YAQnJ#+?(?7,_0ck6aK(h']
%a(`it>B7m\KVSP_PL;iW^as0BLAeZ4e!]JWTDN8)-CR'nDl-r"EUM_CqeW,mpWn:l;i^jHT.Ut>`gG"-L\4BKk4Ctl:"ac<YKr0j
%r[iDDI6464c2L`qSPFP.>$/3dC<C5fQiq`HCu;-DYJ0aoe*5M@kB!7K&'9hZqH(,NeW>\%osCJ%2`+TfWM7j\6hZpfe'MZoT1b`l
%.1\Cj;ZuJh\L%uhLe`"2Nu@uk`-BN$>rok[)"%(N5SB^fGapOOC'c9b]so&K2W9f\ABS*[>ZHQ-R]SZuR]#e'e[rj?g,>9Ij7b;k
%4X<o;VY*'a&'T[pH"ZI+g\@?u9'fQL0p0U>r,Ci_VGD+bL?\&=1`Gg!jM@N-Q.6>i\as]S6g*gY--LMh4(Y;6oN!R0^:@V+@@6e6
%.G&i&b-PYX)`k`;9,H^ZEe%Q96f+rqAdJ?M<+5?gc*QKeC,gK7a*,V;<Ph2O)95<aJ@`(D+SY;3[j$4*Km_tN<`kUsYCul4<FrZ>
%(/1B>V/qf4GkWIA\BV]%JP8Hk,-6\_/)Ld2J>`9Z&CN$gDn(+7J$+iK)3:Z<'HZ^[1@kR5q1)-5NQV$0\dYVef5qECZZT^Z26j`Y
%]F6pWjT@\TW-WO3R#!_Xg-[Ho5$Zi/h(70p9iI&l2K"fHZ@G<&gj.[=1N0dkgsAeuN1)LS"9/6h*/Cs_s3L3P^8cSs+sS.?cV75m
%(8+6cYuBW+/eRX(!GZ=#@1TbfZ21+(FI?&/%B5q2W0^7^LdsBNW'j"RM29,ddFbjBn8qn5VPJm*[rs!fb!c\s;;'S:A_sjN]S@hd
%RJs.`9q7%)qj>?g&Tte-@PTMppfHb)kI<Tp8cMZm`7fIO\=t6"k1Bj3"a6I.X!WEIpA%3:]=+$TA)06hH<-EqNVLY"RC7NCA,#f=
%E&%7A[32\[Vp2_k95m)r7^q@)KiM2l#?H(FO.1%IQ9u_I`(nZ*F*cUU;DlE70ZRHd3!!ue@g?gi+tF^5D$+iO!4:J_B!Bas1#DmE
%4k#F\^;Di_"eCKu\4-]CiOQFol)c9!+LD;s)Q<23jeCdWOkZ5^N3P&eVVR#4[b,h1"P:N=F"J'='YV4if.!<"OI+f=kq^YV$dLCo
%%hWLg\TLV<SG2E^A1;!IQ$5$123[L@1W=/mZtA*N@^0$>'lEPeVc5S6,!G1j\>V?r6LLK6[5lNNA9&1t+FZ>`q#B\Ifq7CHjtfJ7
%@UBd1&jB7"Z]VQcX(h.kmd+<0k35SUL:fp`NVK(Yg*Rg53DuNup9.rP@^t(\E(.r!k3Qi_)\&al[!e*fF'dj:++CB'^0e[&?D?2R
%5Is$X`f3-rgf&p>8-JGgTJ`4&TVn,0X+Q(Iq`:Wlbr!VfaY_UcU8aOBYTmRk1+--gk@*(am)]I:M(E9!@e%qsM-`>OMu9&Y;A-\*
%,>J`pWDXABjs0.mULm%goU:i>T06gX-hNjgBYV"<.4*AW5,*\ImNj1,CHeK[mK[YZM-fccQeXC1S5Kuto;$"o8bAI483CV`Pf+QX
%BTfO_%P+>9c#Kk0rkf*-qTU[@=<Ud)E*f5Z?d=(%Tbb*671UoUenGLVXO+0VC.:5QE*/e_D"gRC<iDL`J'#S8-[4GI,)6mom2#c0
%&e9(B7`Xnu<ai!h(N\N.;,kf<*R;+JcJlW,k>:i7_cs7?3q1KnAK<BTiiQ7#i8Fb25^>BZd*#Xq(3&3*o4`t`0Z?t2jK+,8//e"A
%(R9_0ES@+g5YlabTo+llBnm@^a/fLecB.0EbCPH"@R3dO[+PF8rIKaL`%?6ohp^&*LT[o-`>j-dI+mPBmRW5G%QsBn)0Xj=&(T`3
%bNrNPDS(0(4EMXa-9#]5!tUr85&35sL'%r<[Qj"O4&eq7R?R0+!tW)H&M2kU6dOMik<&009ocSCm8*m@775O:"]#>$Aj#S0Z5(D#
%>uNT@2(a="ofN;:#9Gq0a6:DOEufMhm*!f4h9<M:*Z>TZ3:1\5,FJ#:6g&S5h9Pon%Qq*VUieC2a-6tX#9LIRa"8k(_VqjhPL\nD
%jhgl0_s+SE9EuW-1CB)=*?$lS:>:m/)1,;R;s=%m6g)o.(QqAl#9MU2_QZ5:oIEq-ju`(ZGn7$gqn\eC1$sOIc>OaYCkLK3j1n#\
%ig4@5l8A4`j&(<aTkBoShgpQcVYXa34ETHTTfVQ3*dB[+3J@i#2q6hMdWX*nPQr6j*)T8C/EX`8$Qij;,sVhtnBh!<_hI;23:P;J
%psF#cR-VOTBB*W6pVX';*]fp:3*ULOikWH7F)e*?nBelaE54VIXEZhrd#5@km=C$kVs<Rl;"G]P34VAP5OD8XB!)4Hp#C&_ZpTI@
%S*.RSk=np%j*%R-&"UC\,L[EoG\')+E9^Q'O_LClHr%JS`rcjC:HKiD(CN4l:rCCI/@=oaS-L*Mq->&I=(abecq5a#Z]!9X4k5+=
%cJ6?]g*."h<1.?d<]_1PSFOD4fe&\m%QnjYh^"+d$TRY&3D%i,YB-9;&"VkjI7VmF>sp5[[g/hAip>Cm[B)j@B!9^QGWR1bB-._/
%hX=7(.#GD;H'AN4,&GXn?@09dSQD_VEXFA4JI1;L`Y^%C-7/;8Y#BtjH9@F'DV4NRC$*bYHot\E,'TYN;?X;:Htt*VjY5``q',LP
%5qFLp%`Q-,F8FmBb9-!R2Y1:$k+I"BYC;K&$/\[h!TkO$nWmBPm>QrB-YHeQnZU:9a(.:PX/A_2]C8["p;N(cZ+'YmkOj;al6LB(
%W^s&XY8b7K^37[)@`$/XjmqUke&gJ>V1!j^lS\LG0'@P;;r@!,roRD6?V2FplgKnrEa[[+I>mikU^ZZuS8,WZ?+IQ:KnD$=+4pG%
%$"fs%3C_47jVdU%I`R`d)jdl.QM/M>e89K@qN@cdj0cpK2(>dCgl6u)_pRN:$8>1G_#&r/_l*JDgg7Bh-e)tL8F/GY^S^i'`;lcB
%omf^qDKG`qY&Ej@j$V$DbU`lditph`U3X*hbL&0h-J+:/QG:![SZgm4<;+mhE^\^@@a4FXVr;DVDX/Ij<V;?\#I2`:@LJ^uE/(0L
%(FtbnAkd$5Hfofe1im%C7YnSGJhD=EgFAj@%]MFY)l586nJmA7Wb9@BNE5''KWUkRf1rb^GM^R\jW$9>eB\=`PE7JDs,u+sp;n.S
%^=tjnnjg0uYJK5Ch#VmjFjE-X!bQSE\Fk4=HPsFh9P!4>I1*5'U2M:Hn0\+RqJdVqd@0EqT?/[T@uPM%H%:A3DW@@&Y'Q>[cU(`>
%@?8@GLfi_5;Q/CR-7E]6O%'(7\]er0[U(D_7fiR@oVecR#jNKO#OCZ-OS/[TcBk?&5)\VT%15i&!NUQDb'u^g_WdBchR1*f$_M>&
%+#II:"@deTL4#gMHa&fG5kD1a#9bf/%p5WDqOd,jr[%KTco59H#(a<$gS@Ag/X]Jc'2iur3I/%Sg1?,:>snsOqL0;AGG2BJ^UV;N
%6M>5='mLdQ<+\8kXDref$uGp#N]13N5IU`&G$n&B1>`Bs\+oRk4)DD@Nlo'd:#+6PJqDBc28.KocNOfsXAtHbmEmcm[jEbgGL\&3
%n^70$<-j!a2>O<C>.aRV3+mao<YK!2H2NgU[&Xe)M;5jrlD-aIM<UrTp62MtgkIKn3T6\4;r);D9)gJX]_2cSd+u!bKc@eGo4T5[
%7Fc<2gc*SLEMo9kG92tq?gG5r+!S)g"/C=oaW,-!D,YNtUA>,3k?>.iq3>P9T-&%n2%SbU;2,CYV&6@V[9hW`#LF#pDV"I=RQ&!e
%j@Vtk/kSN<$/=jdT>QD''AWqa!Ge=Tjo3gAhcTOjV\P2/S2=_p04od\L%oh4?P%ggJ1)1/DGnXD3U4U%WKp+(asJ*6b@]YMf>-F!
%gJ"_Cms/H_"cJ8G6.Mqm)[u\S`R`"7[eh&V^FMXpk+rbOf]cXQA]FWt"Jmma]8AX:BTR4<>r`>O@76%/I"C(-JUP=eV]e0^W.Ob3
%W(G-6-/q%$SBl"JM,uFe3&iQu9!?6U+e5nL)qL-K[=+f`>j4A=-!'L3Flq*D3aHkgjo$M"AF<WG!(o(WTg+/tF],$-'fE[+#Q]g3
%mWhq3b]d*6ie6SbEfdpo.(k!!%HLV$o#_LoAHK[B'5VM/#,PG=5,9l2W99U^6t'OFKlgm2d?.NGY3!H''+V?s"uUMB!"+;@g.mj0
%NF-aG&(h[TV55"#NZ+AOo[_^:T2?&(/`0L908A4h\_".U#jK,J'AYW23'\7!0LN<h*-Q>6lrLhDONoNa&0iQ(URarfG/qK]iWaF"
%5'#HE@h]!_3+Qo8l"f7H6g!mES7W7(U58SEMK)k7oE"3`/cLUInA2uUd"`*M]EtQY,WV2&:IA`A3=DiNaOZAYE`$Auj=EH4"4^8A
%+jRclSgL3Ofo(bZ]C^]PYi?HkW[FS,[Y.FNFd+Jkg^-jW1j_n@[pH&+O`Z9q8q"'K7XZnHd>dj'A"GkCO`%kK+&P7Kgd@:N#C,X2
%,]f2qbVMcUYV[Th0Kc8,*Z9O@I$DtF-__Pa#t4W8j2_>e=OQ@!p`jrY5_[g/.WH(=/jl3jXGM9BktB0'7XfoK&&_<'7\18G6SU^*
%SXuE*B!C$QDV,8Pr:[H*RdG:mT]7h/eB^[sh.!X\qX%7HhqI)CH>Yr',O)EADRPR<9._72+&%$S>2'-:J"LdZme'sijGM??>nbaf
%dMC[%3i_N-"?u/KD(AnF9p<0sluTcB8Nlb:'V_:+TQAih`#YfH83J?]63?c(IN6.T<GF#3YmAS(nW>4IKW66`p]jI?6$</^*P^1L
%Z3Rr")3CH.9WJ\K4NID@':cLZP`+l.%;A8S(N1s?KPpnN^1;]3KLY`#RS:%sUqN>;q^]0i4uGN$<XY/d'ue[AkR'1b'dP!$H]L;;
%OcK`h>!odtBf&$aj"B0$[sGk5U\Q2Xg^ic4:rae*)*&/X8s.s,/&c0Kr\/;Y/=sq-RHX>%A"P8l9b*<_P%EMK`s'*VATE(SGZQP/
%7f%*eDd0a4I%eXDWA"&)chW0`R-<:RD*YZ6g^3aBLZs.mYT?"$D0'1&(YHlKqa.:/M_EHFm.iu]M^Nbl5f@U`@UX$Va/9FX1Ufq^
%$`1KTl_Fb,7S"6pluk,$)_#uPZs+;Q7hoD$/TK>S?agPHq6O],R'-e#2<"LCGY*9.ht*_\1tI#*/FPd(Rb;KXPm4fV^_EfqbFb?g
%SjaeDJ)`%@++Bp]QoIJT\pl#mh&!tD!:NR=-Uq;*4W,+?=##WHKC1QHIV/P$/%>-"H54;`DfXfb[o`/n0VsL;l=]u`dGDZ@+rT2G
%Jf(VRGD[--`%O!0Mk^lp6<i6,F#TS4?b-/eHuB1Wkd3p)"6_-dqh3Wf?O6*>K@NZ&+Ol;!\,%TV1G.XZdN874d?:r1\PQVbVMjpn
%ED$)m[`B@i.6JuO2!V<[V1O&NeR:2bIVA8:Rp1/.9$<i_<aRBQF`;V2XB%9t`J;H*$P,i4-8d-fF/q=.lt]%4cH:43$jSl]qK8hE
%Z%\"B/nI]SN2.[PcI=L:g]5PTe>oBd>lL<HX0J4BICOc)Vh43@;lfDOnSNabDM_*t?EELD3^*(O%^+FA_&6q72,L__^(;CBK1j+k
%I<'Pi$cqnIDqk$[s0DBrgKEU]]&<TlbP-Of..HTIe<!9,)mI.j.)o^M1DCNlJYAI^\+cNodH=R,B4"!_c+/s3ALc\boOcg%inNX<
%n+H'RbJYn[UekUc;+RB?)+Sq4GAB_EfhX#Fb6FU;@4Y/(qMXgfIJC2I]]FWiCLRpN+*s:"ro:lCfX^4!h!;7d#fV_6[I9/:+)n8u
%pQ!9u$Fdd!r`jk7\R[WPSD9\.e5(jll"J^emf(HO7+2WREMh1-Y_TLSHW\k6UM8a=q`\,[eYUa%*rokq?IfSgA\KPX%WZr@b^12r
%W4EEsKh!oI4+:P-:$Y$Ko@o&KZs?O6LMZZo@cC.`]("Xsf87*OFBJHdohBl"aj&_3o:+U/C]AH&?@]TUr;&(u4%aQKI&f0\\+7h`
%q\S[*41G-1p$2?I2uS$had)N\(G8aXZ,e!p(I(,Ip%7moCEHS8hVW\L\1R9M34JhIT>.r>h!C[mSht7gSJV#fHGoO*Z[&)6[ehBb
%r%FtNh*-&Jip4&ihTa:"]"!%WD0bQuq;q56Qabk$\[;@M]T@"Jf_)^_kIt3icIM)Z:Tp9*hGjgTn$2k)D=,3PP91jL0@_GbliCG7
%62pM[+.oW/LjQ=1:L?9!rcij$j6XC$Ra%c/+IgGp!a-KI<4-Q9%k77f[\_;k0C/H%TPA\%a(=WL1>hDrIjfi!SPr6E$8fB$e>'9/
%&l>k1MVbYlj.\`SHLJlI#WD&*C[P87o60j$R-=:TNS5bO;uYU!'>*`Y<ghp$^#`8OUbD/bna1,&i;`&eK^fVofS-00$VNq=/g=NO
%cS,2pS3-bkXm;>)=6EkeBaZ$O(@0jar,ob[FIli(pZM#FSA+doaibX$=3Gr!rKgUC0!;D'>r7ms?`gede9Z14;]rMm3P.@te9fp*
%esf$EViMp<=4pB1j*0.)Jnn.(A#YH#dbe8G^ZWHniq;FF93n_&h])/p^oakEr3.$pn'uF,H.@sbVHX`6cg`%S#7&edqpkPkd[Bta
%\:.>I4+65HmG3n)B@D#(=%A'd=uQ9Sc46do&O>a@D74B6SYkf74$2@jVAo6(1G!#Xfg.K4T-%4ZAmaHK!CttVmIp(@*Uk;3VK4uZ
%fe+A7?+=/k^\CdpI-B*RcqhtoJ(R.bi48WT$dn9a^&R9^gkBKhnaXR[d>N6$q?4"A+-rc?rqcLer9'p@fe_5U9eY:K>)YHLUD#EW
%(]Fs^c;]ZJ3^Q@8(sr/(T+N(8E2NX<^1VG8bYEJ7YU@:&I_`Kn\&jJE];'N%O)D7t$679<GnA<h5n?XYYkCB\Ba8Y>NNq?L5Ad%!
%T=,Ws\_ZT8O32P@]e*R]VnN!'i;PQOAf$fbSm2R\g40*Io721UZ-RhJKpD@=r9E[[a6.reqtJQ&II,csQ_$plk`hG4U>'PKqO!79
%h>:u,htc9W?[DG6rS47@mpH"+#<UQ9e[@5_l-&_PLEFLf`$K?d5`>*QRC0NQO(S-kNU!W^r+iQ>I5%3E<[Z5X5'="jq>0F2?hKW7
%hfG[QA,A*T_IhTsKB\H?^W2fZVc(1Y4qMlo2EuBY];b8]k(h622t[DESU6uW3F;[#Zi@^KU*H-*DX(Fa5Bun:G>`ZRZS,A;#L@i7
%L%jV>Ii!(9g[$<G?gT@]NeGtR$HO'q2[VAL<54Vk2<QFJY+L<^dmN@h_TJ]nn%3fHYj'`PZcdh#3u"lJG0Agod:1,6>B3d;H(I7f
%Y(8C0GGp)9Nu++fpBA-A`3_<n)l:/L#0f?]oG>A^-QZ;iB`*:Kjd@'$i"d6(D:H%rNQi-+*)C#3o][4)pl,$6L$M`4Vq#P#_WH7D
%CIr6`8h8W1mX0ns(t$a]a1;s@9+NDaY&8o6^RgjB/n(#X/(KWoAmQOnrOACT]+G--o6%<rC[/Xq0&^@t/IFXjk4J@arOTK7f[B2C
%e*la3BAI5cUGOnGB!9KQIa-+b90`H)\,/9lY"LKemcMR;`1)ojX:q&%DnJ`jY19uoeogua+#eY,&]6h+G:3LW*!tTOBCca]:rR_;
%1L>G'lD_jum1IO8bMgpniFsZp,_YI-/JZ,i(.-cHM;*2\=$D%.%PQ+4LE+O5pLU!+),IuZ>[jk#LGT;\ZIqq^9DAjg4h0.fiU_c*
%7se0hF5Q1TqV*jf0Q"Qe3h^S=Y_t:/Dj0mHI*@1QD<`':9cLHZkJLW\fV*kC+43>WV"`]beisgT`pTHf2`Hq;4T9HDJNWfldD5P?
%\SE-;^[,_Y>lt`Zp5R[2%lo`d^5;)b]o&td]rT`]l*3/?ciEd22t)/Sb]ho%Yk<"V#.fLr05WiNkKq62k-H':em<"Mk0))_2pb]Y
%M1/.,nbUFQB4UEi26a[cl!r;[?XIeBE'Vsbq<luY)G!n:V`$_6Ip\YVY(<3pL?Z'LgM!A7r,(b\$q`Z`%GIQU(71V/B!4=84kj+4
%=OVGWc.:'*)5'aR[U/Eq.!to'[f6,`Q6]2ZFWg,_Bn3WUHt,l4fK_Xh`;o;.Bj9JD5$THVrpn5R(?t,-A$dt=o%m_t\;ch.pM>Aa
%85Jm<jm,_"'?55WnJCH?`$2lr@D%!^ARB1,[Re12nF^`im,b-:"17ek3c<(uB6rq>kGal(_I7$tc.R>=qa%lPI4_%dglO,]B)_j"
%][o0MH20b]p:6_8d.n66Bc^"k?OqY);k(,`&Ee4QpY,8cCZg2E7s,"FUjX1D\rQ)d81497oss\QAD5E&nbkC2VC)?b]UM\Olk_j2
%NF?b!qUXDTCA-WRZJ9\n5^;(_/r7iNgI0'k1N+i/5o+ag"a<Auab&^hB_U2h5K+rODbs3=V62m7.cS<tB++[E"0'ah$G+U\Ink+s
%@4^r_I/0*^BBJZSrd="ULQcp8S[iDu-ADH^mYN@IhrC<s/+',i1!O6R>'dlB"5n>DnE.i/Irf25J$OZAE.SPTf)L$ie4SHoa5AOi
%W8IMuX.,DMRSopPHrLLP>;U3Qjm7uGm3h&o`Pn30YhV@MGWA6ISuH>Y]NE/]440+oUrq..f*saq$^(,An;$\:AUS<Bq7#8I1XQMS
%rqZ$7\sH.FC&G$^O\`qrF1ce-9X/Mc55fi7r1cHdhG<%obfAg[DL1ndEj@ndRriB&anE%koNF\2?G+$`&YIa%n1MD-,?f>a-iWi!
%REf*cLY0QU9(/c?F+3Q<jXrm*HFCAtDU..SIl[dE4QnQb`dlT<SO-DU:W-0;1VZ!JlaI]ZG;bJ^Bn)NG<^!('cp.#3Nh=%1-,([E
%FntFLCDZ"m-E#$O/iOTIg"YY((]IUNIVG9"Nb^@/eX#gqDY.23qKE/dpX,2l/=iu9]kX^jLuD/n2s+!qHeI21Q!E).1Y6)DiMnnX
%rPGDm[p)Y3QCIm-Zi1Wb2`ROqlsq[&5OHh2]eS%@qk]Djb:@b5G9CH-LAaIX4S$BD!3nb9rY_$$MceYfEB9b(Rd.5Bm+F@0TA?>^
%m+,#q1X\_JGbCDZHT(`g9)$+mCSC`pceaSs"&\/R2hlK6n$^F$er:t:W4@9KeCs`1-Vf/I%c[+ic(0?qmD"#Jo$rTiLR0(-Y_ATl
%`FeVBr9`8fh<GfBeahuL5<@CB;6[A$<?KDp[7:blh3n1P6$iN*JsPief&DG!p%nGU&kr2mAuAN!obXZAjn1`b4kZ@8GVOrr?Fq1a
%FfO3"Aat0Da.kF0h0Y^+-T3;HT)>Uhk8uX;Cee?IIIFZ%,FmMLAom9BHo:]sD"^#^?/Ud;'57f:?!;^So#4(G%A[5-(-6[6_RW>1
%SP>KdXeol.Uic<G[+[=l7&JST*Yc?tX1?1UXrX"M3'L8\H)7nMB>TIEg5)08g,?ZF^W'?1:<*SSHu#;hISNI!^<UO`47?Ag>WUc"
%H*_DgF7o+pgQftP)I.[Y@^VY1gg2G4gq4?Y\DHf,oBR3r[BqUc$S:ZZ>e`=eTR(oAR\K+"s7/joE9d"/CTUX@7p`+;YHNg6/HYe'
%80YG#e]dE_W)Zoobs'6=hegZ$d9gn`+X)<dkW;fNY3MuPim%IN]Ph`Vg%A]Y03k)egtdsJT:]BAkZlJ:7gAE.E<DhPYgQ^5jZXmg
%q(FO5Ljo5_^?urDkPBtQ:7f/J4`3+22q/e4NO*]f`g`mhA*Vk2<m9_jb5&oLchr'[]![cNT"DZ#2!edlG48UDpQ4LR[C`=uSa.NE
%Mj^F'rkYG_J%qTB+\-p.kgHs7q=A7qYh7.60>%h1FA)Td&VRlS2Z<C7KbnW@lo\Z2RQeEQP"2\4JotcD`,!s]Y2!Gjm>&9XOOg]3
%h+X>/:cS6ib:fDUa9@stlajVqZH6q5`?(E>::5pk3j-/"/Jip02`psr-d3R%Cq/<5]<=)%-77H<lU(Y0MQEOZH#l0Y1NRR!?ooU^
%iA?%dg]=i7a5HpF$OKdT8I6`&j4eLAZk$;&Fn=o9;G&>'HNZt\A_YbM2lcOhO%s8`0O@T.BS"@lCj"P2qX(S,H(FgHhiFgB-3$g9
%mYC50hoB(b0O"Cbp0bk0s8;Rs`&"=NF$(uL%b%!1\%eHH'K*2!B"*8.D=o,pRI/Ci#*0M$`a:B`$hpNJl\s)F%9m'hmm^N,rO:F(
%g\n\BZ90<.4`n%9BI*JErM$&?^J1?)QPZPqb[5V;5\K-qL&<d-4.T(Gb3\/B[d18*6iDq"XaVje0<[NpB!6Q3XF'4)=pJsBJ&k.5
%)TS7?r?tJ/hTNQio=Vhb56%='hRhlqGrBBj@b90(Zi><M43_[+CT3"C)jcoN<ah[ZNit+Wa#eVoghO^GV=V1I*d'+_[at-<k3(&@
%B4%gFcJSGGI;STGPCpNB86`OT_1a,eXbidRFjGr\.%GVVE-4ftZItRfq;gdr^bTHP!M\hhc0d$dBE]RgW+Pum/*4Xl[Bn]3^'@?=
%00n%Sedd@ip&U!9VfZM2!16<f/sdO=U\KSn.l.6_ik;G]]BP@nrd9%;nto*VRRDK"eX=]t7$CKdVeO`+M<@Z0a62o/Zk2KAL&PrR
%rfD<oKtIe[3h5oeWO;LTA14UPHF;20HhU56bg5;=0,M5J[Q4tA(^0J:@tV13#6a\NWJgN&Q6*4o>ha^LWB"i<[f;kCGj4sfG&`D<
%kgYHM$ZUZ;(gs^P<&>o)p?i;*`D`hNDU_,q>sDenf'Un3/+<X!CAECln&?rMPU=S'ib.nt]0jC'EF>YVp19K\U9`FJDTY_%mtIJ6
%HB5YbI+NpkB^\g]*Sf1ro]J*DFBJ!/d95](db7G+UlFTOnI^Kq2^e$1TC%/k3UuIZ9)I5bpd=^I6np3LQqVT7Ka]S>Mok;.QZ)j`
%+,+^3H@Da%d//FK)-L]5AT(UrJD-HkBH]%$dnW##02c(\]c(f`Q0,r?[o_VMMjN-(qV]MM[21@Dm&LUFSQP;M6e)]Y\otGb\P:i#
%FNlafrc>J^b:l0OrqA$?j*la[>H7W\h(C`O7(W0gI.qd0M61Oe#(;WM]<07r%>aJWXtB:<;7DPMY?E710JB'];7j9Wr7Y*6*N13)
%D3+M#3t&a.CV*@Y,)5k87d4Fg0;nH)dsZhEBU<Y_B<U*EkRKbiQ5glsk7.<kN`qt:b8p[\UW@3<lM6eUBf>to(:m9a)Op@6FAhLh
%k'Uc;'pU=/%pQTH]U`6LTP'>Jjh]p]C%$<sYBahPY3![WV(h.65Iihad=)>fmQ-s9B:bhCaNcZmbB!1m0M]%TBQXDQ)7COa^7Z>+
%n`XbD$Vt-:gTss_USg11k1<[m=3H;5gSSi`f!PuQ.Em\8Y.f?L44k@Ar)>,r/E:6cZ[4u,\m^p^(us6@cRthCSj,2@ribW+lLWO'
%s2m4Khb?8(CZt;d6b.s2V6BeSce6L^=4J8Lo%-#(2g#T&NrR#.L;M#\Yk&2b]bnN8GQme]QUgl!KHQK)`auTqS^*gC]le2%+.IN*
%2)A4<gLo4^*c55=To'W^8G6Q*S"36HG6BebM,,el!C71CL&=bDUY2o%/?%eE9ntcZ.&\$,\p1TTVLS:`D*7M&C>uqkg&0+W;t7-I
%p!2)Bq.d0`Sj*q=FJ$?Jas$T@5`IfJNsaBQIE[be8<=jtRBRFHs'EOje75/KHbc(VYKdQACE(#/CJ9qcRaS9q575mo(>')GgtuF#
%Zs.081RJ+i:t,BsD:j=dW9Fjf2jtfqC=IA)+Ad.JUYIfo?FAK?W/3IuoCK,O:]EUKkIEUOkn)+(]O^QM5Y^tZFBIIVJsrjrPe>Cd
%85M+og4T3.!,<h`3Rq]"JZYkup'Ug:W0qn/T++fra&:\r?$issbt_2TPW.1)1TfM#+2P55GEL-Fa'.Z':ON!9k8mC*p2HOemR&)]
%6u1dA9:'6OcC30_iX^L4[>3eDVuh`;dFuKXes&?fT<-&fr_KmJO0`#B=\i9d<!Vq7mN8mfB.!$g7`2Og+nq@gi+tK'O-[f@a&DUQ
%i'HfRm_O;k7rsL`LCpf9pI>T==0J`J$(B9lQW7hSe:4+G>T*9?DnK?o(q04@b0&;PVs;Bj&(>&pO?J9!b&W<1^f$50`b`f'DoM\L
%j;t;U>ZtrFYHPE^5BMp4G2=>f@rk&IG';L\Sc8G7mF/!dKQ[lof;+='rC[o]Jh;>b/87Un.+g;4=Yfm=<+u/^/N:->>P<SMVYW5M
%'Xkqn`#Q3:r+0%GZ1_RR,cT#T]fKU8RmY#X4^aSTPR-Z'Y[qV/_dSS$H=oiMmK-V\Q6i/[Ru=c0Eoi^VVfAQ%X\W9M1\&Um3,r`?
%\FT(8Pu5Wmlt\HDO/qI<YG+uQ2D6](9ch(&$LQ5QbkbFCZaYi#\B,CaHWsDIg"?\4h<Ne/r\Q)Bm\7ddg?iU8[)6,Ee&U)+Dn))q
%7Hpe3nn.I2[H-CHh;cc@qO`0VGb^1;9_:[^]]\sp42Sh/4RgX4.]t(AUY57`jE'5PAR]%S\fJVdRpU6To!hsIcSaP7fKI$94^]&q
%Vu=,(mudLo#D4UT^b#7C1Y=JAl(-&m`n4k=`oKV'].LYtHKf=EPk4?="Y#_1R"_r88oNHk)=cSMccqA`E(>RjQG/;D(qDVLKICF@
%_K=(fUI?nI&127hNY9<i6(#UQ-rJ2*KPB+e#K:?V`Vq*fib,n\Z1lJ*0oe8>&*)WfDXG&2hSXS_duFEiG'6A'mp8/i`Lh?]Xc-NJ
%&L[$VI[Bh,]E!#P\2s4pI=OTFc9qeUG<NeY5Cl)J?/dk?73\30"I6*3R9hB[Ir0(!J=se>?2.+i@$+L;l13YG`9QR_Z.Fg)>/L%4
%/r+GXFEaDOk'&hEe"t+3Hh+cg`p(pX)>IL;-XTYT3S;TD@9h?)o36F\io]@QBN%Us9s4MXCW(41%M;mPf5&>'hK.rA@BU7rQs]mG
%?6$MYGHnb?gpuh9#jI#GSm=Ooej7%W"B&K1T;H/5A*6@Gq0j%ZFe<;(>?!Cs*j&HZV`1):&9K2\8',haURg*6r2;aJAU8'oNgS&6
%EAT(U%)UAbfAHr!#g\R/;PN>!6npd9T=-ruF0P6\5$i*:IpJU0+Gu"3ZG;bg9;UH)+nKO(5N;6>r&g#W`QXC5;l:R?#=UAZSl7:c
%G,@&N*?7ar-;R9@CrEjO[HK,#eJaPd/*4XGk"6HO)=>Yj!6RtO(L,(i[b5,`?X:9h]c.KE/p9*W5<$VA>4R<?rN"UVrp-=BItV6-
%q$!-1L,'Db+o+0K9LKS6N8/kAC+(lh@lc!uO,A_pNg]b.a$?%!*$\Zm%3sUlPZ\tm)&$M(f$8@Z6OR<DX`dP>pm8%`*IVqtW$A%0
%rI+1S%uH*O*#&(<56B!g36(Y/qU'%uVT`>URF&t,G;el2f#?CO:pm7_n'*KWS=n)kYE)_ap!ph/3\/^Kq!2#0k&pMo%*:&%3mVei
%[W^s0>'4h&p%i"N^&.Qs:)KIkgqCJ:0'DtI@UNR,!mK&](bG";9)O`)0sE>0`o@;l)#Pa!RiP5I!M7B#5^"]crL91.Tnt5X(quS5
%T#EYg8.bR\%]]Og'*J+E(P3kh1&V9qafX!i+*qQ5ZP7?3DXJEb=c=1:PN$Lco#7!HNS*h;i0h$+.qO*JilVOkaX6'9X0^p-5MHu9
%-kgSo]8^*CFYOf7Gj]9pI5SM0KCAQWNNV(X^WW,0mOf7k:Z&89s#XoYs#WM>ZOki7?bI=@H*]>QjfZ,amW)62fsl,Q/siHjGl"*3
%Wihu)p>9imX`]!dcfH"U*JOgO&%;?/;?r??`EL%5Lr%`Rp@N/`PJ/#TimeXoXE7NP>"_o"kj('da!RS;B3mZ"rc.@"\%Acs)Wt.)
%+\]@al-+j@WW!L&cA:lLZ)n,b]?>R[]0%J2i_=Q_pU-mZnZ8L4r,:r>'@XLqKC&Q/@]'\4rXQ7.Iu4]*2Kk1Q3M[/W^/k8?s$;:'
%U.NX*Yof8bTAF88p%HQuqufbrl\jM!3X)>sO!B)NDsS1M])Zn_O8nn0Y)uZLWBo&./dL'6cY(uVDm-S$\9<M"m#@?=U2sjjif\4m
%/\4AS$q:ZG^8sDpQ0oQ/7,KMs&Qq9)URa]Y%*rnK[,1_rGbsc0q@7c47<o_4"#-Lik(go+M<FR;a"):?VZ1O_AA$@[C@;bS.nr.b
%a*2F9O(W&On)EH/D-LRfn:2)/R&S2oqMm=W!/Mh6g(0)_5db8/%L6S%I2deoKOb#VFn&r(kXpnk"uS,0CWF2+k3kE+c9o-fm\E#b
%RR<L$f5F>F)B'@ea+b.I3(@i@AabB!*;(hUrTAG_.)p_knLi\ZBT<)3N'Wg[am!qi-tWn)UlC-sih;""R+ZMs`5'*oCqa[og?Q4u
%B)2;G[0mS\T5Kuge#o;:hqs'=Bag8K.WDcBOCO&/h<0'F;l5uYrEPSTlCO[jS2+*j0$dh\aYa`=@CZ8)Z-0.-@EufH4R3C2g%"P`
%R&=T/979UFYK"Xt;d=Tnp,"I+kF*:6_k4[ss7PR'9"[IF)A_?d`KuWebk^o:d1i,YCj+o&45Cf9nrUr"kbYU[4#NG+10K1=[ISDE
%)P\PO=`<5n[?.`gFq%W"o4DPTQe@\^rS40"(<(0@j\t+ScP5&#-hgja=(KsDAj.eOh*4][6lk)g9`Mb;;]C5C4nVg&j-P\bVn7HY
%8ZVVnS(,cLH5:,rm;G+AQ*^)S_i*PjBB=oV7JtM]Bm3Y?LWdm9Tq.Z3kN.I<-*ql#oL[XmcH_!\XBT(%57m.?bOKQu2rC@.a7Hu=
%Hh-:eDs\(E9*r=G=1%4XEq:7hJ(E<-Q?K6[??>+q?@Nc`08`>eY(]n8Dm[OSk)JKD@A2fPl$3*O]3W$ir<+_0Ht8Om]CX;nSCV,(
%?b2:MH,$hk5rR%F(\knep#R!&:+2"s><gdS).K'u0nIeWXOHn1_qJN;l<;;mfni5ugr\1<3SjAOYKfljUUToh'UAX1;Bp4mRXP5&
%Q_[G^0<>ZT"Y8*G)iNMjP^q'&]?<dp?TolWe`u7k1+c3RT2mK0L8CH1QS4<qou_GpUksJC]5)GlK;e0%+"X>$miE57f@*X0o<Q-\
%QhG@bDm'RuX.E(UBAK/WHN)ZsPV?tMh6n[2q>0@BT5/rP9/k:iM]JsVl6QhOBu)gt^-5XsY(%_Qq"h?G2p-1tm9_M=q<M%7EbX_+
%ol$<gHDM[nYP0Zoc*!S>mk+P:gSO)JrRuhm$h;oR\i#?9m/lUFGe1!hDoTl8g#k?M3PYV)@KA@R#Oq@YDkZ%eI.N"pW%VUYqKj0>
%l-jZr[Y#aZ`L:\r?FEMh9#!>7!pjh:hht7abmo])CYSfpe7i\$9+U%nfZs)^Er/4t7m\Tq5I],8o]sYtEhW9t]JI1ukBV3QhcMJ3
%rVB=ToZF_i!6c][[g&mP0<`B4gsm]aHF`Ok>-WP<bf?G6?('O.lU7;IZQJ9$Gs7jIg?#ZQhEnuFp!7Vf(N7],DuWbngK]+)melD%
%C;'Jl=Y2H?]9O">rq5CQBJE[2Jj1#U#fi6LIs_4lo8V(7hn8o,CglV,do/I_T>+WsG<`b:Gj4hcf>#*"O0@jks7j&$qSUopViE@$
%^U&+ZEcC?Js7lBSos'3W.*lZd(P5>EJt&<+#Q),(l[Lf3ml#[+IJ1YVT>fC(jDjDMoU0`Gl0%q@@H4N?:G4>mpc:Qbk-p?7g#mi;
%:!\;NFXLcM=eB"OI]L&=RiPIj_%&VkrV!_QqRlOb`oH=T2kL"Dp214?'u.DKSpr_@AU8gce&q=,X(#dhn]pF5l,Bl/FSk+_`=#nY
%5HuEIRU5I:q%?lCUMnh5RCRh;Y?PYKrjmIMk>0(MV]2t3Vr-Aqo=4i$02`/-q_S2i1hb=VVl.fc6ZhA]LSTVUWbc\*X+foC7]R/O
%FbXe5dos>oOZ)^b-'%O`pSi<8`2D2b1[28.\(L`Pad:VMZC`toc^]:;)85G@rTUjOJk`Cg=7tnD599T/mFR^$_ZKjW[sY#:d.\3g
%MhO*&s4#p5WjI$KnmCt*p"AF&\G#M%V9Mrtp.P6LIotbRrfQ9$f@?"(^$'hF&`gLJ]H%Fok\\m'@,P^[5e=bG(\c1'0Yq:H]fUSR
%aW1E!rm:ba]fcINrM,!?B_qr=qaUn%LM;eL@K5PagEu;(+RC0jA.^7'gGVb(]8'T8dIOKc?MjNpg>+8t[Yh1#gGb%;Dq<fZb[?H)
%pO38$g;WcX>G#-ifdMNAV9Y^,\!Bh`.C%Ttd6'=8dEbFSUTKSMaY'0SIa\,(s'/c3LbCnD<):6IRmdk%0(hKhmD>juc7.WGb6I]Q
%qihcM:3C#\4&88fVZ,@fVKaK=l$'arP"o@i89!X-)+S`_E8VHh;4U%W>UpMSP\ft=h+[bQ,Og#,?=6@fdr&kQIX_!3IiG<?-FH\;
%mgJT6rm:(a(GCX0jMj,[Db!HDCG,Es`.ug$T'uLG6,8.(358/ZgI\s?#hA5#fZr?ape(*7s)EXO$2T%o=7=INVV5ePpQp%IiU\^p
%r3tRZJ`jdC*&YYm^:h2TC%m#"e'hs=,T#iM_IpK'P8eH_026#=Q1X<s00_cBGPX5i*d'^']cLF)G-[Rm^/.<:0[hXiDi+f&AeXRN
%Vn#3Bp[`cn"^X5Yc*&ne8!cR_GYDI,03Nu.RQG_Cm_t4>PUY:4GI'n^h=^U,L5CSqr,Xr2&Y?hollh:+b@[,4GY(e<*\`NAbB>%"
%69&W?e$Wp_Eh29!QQ_.:UN_qs3EguuKQ$h4*>QG$(;dON2cL%n3[(_%>M+QJbdgq61F\gaMq&c7&5MV_RrE+\q)_[$.pr"B=rTeq
%lCTLR%ZsrlA.O)!Q'V7lP]Ff&G&O&.Gtr'S`IkRl8]GuS/@rCFWJq]YDp0<#'2Zm?o/p+oEEBl0JTM>posn'-D1"S$q!O^:O6'BF
%3hbqB[J$en;dGhg[T0E#qtSI9!Ra\V+:2o2D=m!ILGCbDXIe4e?>!f'FYdg+(YWOe-JO&smQ;_pVqui`#3KS[df*j5eajo`27'o4
%WYO0o%B/GBdbJ[KbY2ZS\UN_<['B9I000IU/2$mM62S:eA?su32/S\"c*F566b'43ZTDmT?IaH>RPpic':QAa5^7_6YEgG.Rq5;U
%cp47<A*UcU9q0s1e+VRR]e.[]-eBHt8o7O7T&sn6mD0-QMtAY#R"K]+YS.\.oKe-ba1AgN>3rOccg@[&HSAo7",C!S-"pjM41+Cg
%R"%g`?>1HM\)kMpmrWVsiPt597Wl1Ef2m?4jQr0ql9iYl2Vm:2nu*'B486Y^*:g$=+be1Z3TO$Z6L+5?4bo!NoNBmC@uL<Vc$\=B
%hb&oZ5E=?ndMsn;ed!G?<1%Z,GAFa5AcAr\3DS;1;Qmb5EU.MoXs&R14M:./Ch=K#S;5u<feLMj`O@M5?[=MProP;P?L-Ti-=Uki
%p6+Y+68cB#l-*J'gf#%cgZ5JPB8;&aiQ_0[hi>Ibq!chYm\531S)WV]PAa7CV&@s4C=FVF1I#uh^07QBq0oN=0cs0g!:MSa9ptlq
%j"I%C3:-O=pnI2#GB#gd^Pr/'qZ\[EhY->$+"k]/j7+_,3%YZk)?$ed^W=S21H3(6mQ<?(_tq"*ic+hMa_2alr*ie$rm%\`(Rj$T
%E`6VK><2ISIOf'M4X!=D]FG_=qP=)9f)<+`J'r+9qFALnIsVi9Q[`K?DG09?X\7"/D69qdLY5=e0)g#ILmrJ?'sCu9o%g:"SjGR+
%mU?+(GOU*+mpJ8JN%Z3k,KOL65J6"9a-QX=9=j`klaJJPos/pfiUr\L+0N<Pce"eeIO^EOs!uh'`W+N6Z*F_W.d,N8\4F=,EpBQj
%s7nnYn,N35ra5]sJ$f7Mru<P%O'R[3XIh):s87$<m2o]mIf/]po7%fCe^5H9G4"_Zojan[AX/jpPtiEjBmWrECMU=(B"N-2B<g@?
%VLC"TSWEern?;WEg[0KVR]<@1qH1!:lDAI2eGdi0A`MN0lDA9Ilh]C;kpi"iYQ'R]]$gTNG?_:la8U4_/<9[Plqr&03qf@/p1gTZ
%e$^@bOpuOq:_T."&]1g?WLnQ</JTir&Dp:^FD'm:\Sk>?s#TkPX$9XkC&8T23E^@S@,t4sdDC#\//t#79kVXh;PT&+A'=Cu3?C%J
%$$Q>rZ2OOiLKC\Z,8/5*jZ?g6If<+h<6(;7h=D`&^4#PNm>EW95J0R#f!0BKN`U(qNm5chHZ9!M_FMWSmWamY">>?_7CcA49dXkR
%m3ZeP-h>Q`%9d7Uk=)5n<:V0;/t;kr@5ip%^9aoS>q.2O>D]saRqet5o8:Ei1P+_C<T7!O5U$a=<?aBIF3f&p\ZPd-4e^b"gJ-[,
%:B[7j)mmWEcAP;eWT8V`?2mt4gQmCO^9an.ZXeukb(VFc?):7Q<SVl=@=su`o>94$.XN;#qu8F6LQ["uUWf:0#5287]1JOXM88^t
%K@X/[Gu<f^Prt/4h1(]oS[EgLhnHHjc(oe=EAqTQ9bI+f`F4BMn;5$1E@uS\Ok]mcOo*":cZbU6"0d>5pPK6Af$8=bJkm-%Ak-Q(
%=DIlNR4)7H71Y"UbC;SrCnXE<>"[<PHoF;m\oPoJ>])m_<T(JhS.PIg4m%k7>['1h^oMso^e8#cR1SZP9"\n?e[A_R8PY,Sb'`r`
%'2fo1RISD\N^aL/q"!;opo:?\>\HXu?,6b1gtaE!GJW`OF].^]-8Rh!K%EI%/,8,]0)3G`:%WW4Dd9nMb')NV5pbqKpt_uG#_(E:
%`[;Qb)EFVOs6\Q:j3+8G">_M$.(OoqD,mr9==d,I"OS(gF@rDN\^Dh&l0dV3I>:`b<PrE)?MRQoO[Dmo^O=jONE\0h%MjcgW=!d[
%p=1c3TG$jq&i*7Jd(V_E]5sF.W^3s/YDK7,7LhFYs7T0j/#oFh6SMV37]4Bh4'[S-bbe"S1f[0FmSnUi;a+4!Ai!ch<2#FA:=[+-
%Zg<(G<*T+qKkK38];I79mStXq5/)kP@P2j]E_*__DVs76p&8Ok9tPt_DQro#a4>Il=g=lQeB'p904T@D1"qt#IRWVB@VM-sZ774A
%Du5^biASdS@T=EY\/fN0G7]q3U9Zu<$-9l0s(.X6WGJYMH_)7/Qt-/bEb0%@4+.JGH$o=@YP0iGerEEEae84MBBLPr]XQ/]U+1!W
%_tq7(@r`"0m7EXLCnR?X*\V!pXsoP(:UKl6YLqNs^Z)aTG;er'fK07RZXf4NChZUN[F+G(\EJe58E-Xd8X37$R['neBPaDc>[=&$
%(dVGi"]t*%[PY83mC'%Tl:Q0D-a#$q#N=VX[@m1t.s/`(d[Hgd;H:b@-a)_^D(.qh(+>H8QKW7XQtE/41nuKuD([58*GPT+F<Jto
%&lZ\*H_uO5-Dh!B$Gr%M22S;!SX*`\-C%K+-mmBm8SB7&>"e*>7Gt;jQ=3&,ECt"@1#U`JA=OF3FI\2#;i3foC;hs5Zmq$#PZV*G
%<q]m6U_P<@;cP"FWN%dt[i:n!BZX.rFeBJ&9?!-r!DU)(4=]=Tcs\/(*E\]IeYtfm0Qgc<KP<pIW@!bETW//oiF%qKG0PW<5tto_
%jT\D\0_LO2';hltOHClJP`q&*-(8jS@7Kieqam6:<G?nM^sW.W\iMSWD5+U&Y9G>ICk4Ye%rKap2,m\Xf#!\o\/sU4O%a@ACd"+X
%C]f>1KP^hUKuDRZ9^DM_2!J=;CqX-aBLtA=Q@r.!;m1q`BbJaX'T/b][)=bh+JgBUL8m;6Wl&S)Br,4N&L6@FiQIqq?dZh`XJE9Y
%N^PDJ!tc2bUV%g+0m>+r85.eZE>KSUSTZe%/#f*C(26fa'?s*[gA#c_H2-EC:[D.emqK#&FKAd8Zk$Wd=sA8sV%pHcU3\+Kb=amq
%?5;1i1AA^71%ur-"0"Pa7[Q8HDM5Qs3AHm7Q'DsD<E;p2![CK!ba68f$L`R]$a+6$@M9s5VqRM`5ut^qiE5S=PKAu56_Y96jXimb
%0PlP#Tdt&<MnlAoBN/+L;/$>CGt54!+`Jd.*b'Y+3BNtcdVZ/C8A@Ga+DZS+K@VKQ_3tc.e8Yo.*`KEa=q5g*W9"t5;2e[aO9,^A
%W_47>Jm3A_d<`u:)j66^Y1c^9$$"KXf4*N=+r!p?='a2j'C;_.k-+l%N2?VkPsnh(CDB8ed&X$X.)k8tUf1hk?T!7eV808Qk,B&I
%=(D%YbCmZGO)fiflC,:4p9(:W.ME#%Bng;XZ\KMn0kiM5eM=tFRP_LT0P[g(j->Tb+gHlU6#)%3(pDYVHkI9snI:fhF'XEa31I"P
%9Jo:V0\>6!_7:hcE+YQ!)DVt&QH:\GZeB'!+S,b6#VN.sC,23`:llY#R0BmXV*MAq2OEcU#KXr:2>SQM/F0+`a[R?US7NoZFB3`$
%OOmp94!)$h631b:-W+(j>"cdb$:\ffQpq*j'@hI%cna%#f3jVj!<^@b"fLl,VC%9K'JOL/Xh6AM!R*hD]LG<Z3"1;lmYSVOcPSS(
%R\R=!C\kRuaf&i.g;*&'Yppk3PuUh7\^!cHJ@Y0KM@k98jDIsl.&AC_/5K8t3V\hH?;O3D2G,<r.e*sgP<*_2WeCNs!Gs\pp.@"X
%gSh-(>t9[klqqW]NIb.bll[2T>ec\!0H7'0-('\bTJ@(j9#EpZ6rVqZNZIp,.LY*pOC1!G1b/t"_o/-l-qNV)g-UW;M<,,PJZ&^Y
%Ko-!aW3*02Bd>2FMQC2(GT^,rChnkg4_!No**+-'L<:Pma(W+<VZkI_OW)hhL/L[KND3KNQB,im<J.afX]>khWH,:-KKq#<D%(ln
%"P[[Cm?QBg6=X"4e+96F\R7!iPM,0(;-RF4PL1$3S>Z]_LY_1*!]`.m,@"A9Dj?#*F=Gh%)hMq\U`nA;XA,D`V4hpE5#m]A!,Kt<
%;sJ*i,VuMp2N<QB=BQN:f4<=:f>)4dFTp(e[@7MnR5gRJ6^Wi@2Bji>"D00?Ad5cgW'LNK1B;:ITRo)Vg5MUoTM<C8FjuMI*L!sD
%Ul#rd88T*OEcG250YdtIC,_h^%\nd&*3^n+I:&O5i@o*0XdC]8.;SR20H4OlQq`=;NfX+YjS1E8Yp?SIh4ft]e:=e@<37hi+qZdN
%$4Kn\>\i5j*6HV4g<gd(F+Mk9cs.\T@$7>o["]GaF!5&t'CS3!K</KU<kW/&d)'AtYVd^0,^?FC82TF&1aa<a7k/I0)bks)CF?7"
%[6U@A/[0\]G\r#&"4p;laYRE1Y44ho`Rs]u`!T`W(o(*<emnrDBFFU"!"Ll$.rN^bgCh.r>L6P%1SP@!bf/QFHrX4o>(GG5K%;^Q
%MJWa.XBG_"CPue`[/jkG<*P%d5)Rp[N))7?#[0Q1QuEG_Jgn#[lKHXJ51Nip<$i*g!1'^Xp.3OK0-8\q3S.<oqF+NljqX?7'a7<X
%fQub9i\aVV5N6RdC=lXhjWpNHGGS<P`fh`o/Z2Udg@Z;(!GhbM[K^M"VlWl65rk^t$J/ZMXeN4Tlh5^/dfL@b3Q6gd/R3+"XB:HH
%LB_heW4%46VWn)ICCbEZ.hj%?a'A_9-lmMhe]:3A!GbiK>+>pWBHrI/h%OJ4El@_18hajd>//2Q3O2sr178k\'j[)jn-Pg,<j0<P
%Tp!Q(-d4#I$Q2gNJZ?u?#_8R$eenHu0JWXL>ga#Z:oP+=@m90VPoea!UN^\iG.:UnMWIHnLrF#iWT:k6lkIXjaapeV%97AIrtr<L
%T[H[u5UQ-D%Fs@HOUZpf/B>]fYSG@/2sSJaWP3[92I%kj>95@'>[n#QPOeqR:^!nGg;(9<B2jF3pZDi?<t8+Gh%@$Vq3)0.=[fA]
%UpQb;!Lt1<.%CAsQroOq:u<0AccBOHCD])?CNZc,VVa9#2fM@-a/Y37!+q?'H,=<$Dua$g!Q_!&oYh)4oSV2?b^.6Cj;%1decPTO
%"A7d=M0keY9\`2Z^'&Wk's6T9C04d/>u"AeWkQ1KGEoeD^`EA1i*I&$'%,sFHa.bq5#&5*%@G0D>RN0";#r_6((Mrf;t(]XEA&Yt
%EM4cK)WoI7j-Ve+Mr):6>_/cD4UB]Vh82S1G)XJXXbcMW&\k'<P6GOc7sql(O*DbZ*s&Cu""SD72;[Oo%C:qTE\>MCf%4$KQoIL6
%^;eOIc[#^_pje>X'8JXo+#)s;*YcD/6/<Yc+t@[+#X1.6ZqC$lW83!5C.tB4<I>M*LbmXA5VP5`FeO/1AR-)h[W&2R30K+F:'MG9
%>sQdfPg_@>EN+1[gXD-1RB`2g)ng>KUi5uq58XiH:l1D4[F+[.HfIhB?""MUE]*F<f?*\DdGSs[>Uts^<N1s-J500_YQJO4NZ,Qi
%.N]JVe]\XFjc(G;TnBh_,J3u%bhCTJ--e=f2gF'hr*6k-Vl=iicfh1B\9/j_%\#!7Ydq%L)aj88Dm&dN[W:m_^qKHZDlskk7SofP
%cncB;<R2enHGnE6PCJR-MkVpXKMYCm%Y-/X&VgFKOKGQX*h5:,jh\mOfhJh`;Hnq4^rlj=NNu$o)mI=51g!!F&]N<Xe7-amG=k.s
%6cge]Cec"uN7?E*6NQ%!RXiY^Fshad,&qQN!??2<+kaC+a)<A;eA-s8"BOTplJGK"7`SJ8)r%fo@#Z-X6#@G6mUOk%2u"e'X0RoR
%<903NTI[idmF:ZnOejl)SCEg37MIG9D[d^B1>PX2i6B2TYjt9"8p+^J=H.HRYSoI"\crmico%&0=N-pd%a)d;'s031#[,"]=pp#7
%:ibnZ1sfqbQQ2M\#7os_C9(PN:"F8669>m`i>aJ/J[M.YNV79V_&<?i5j+gX\Ul]mD$L5[jP(('@`-:[-4$ZBTJ[gsP$R,TDd;t`
%LP?PbNtHpG^"*Ps*<aN1g3RFG!FMW3HF&t+6NmL3'?!A?lPR2=KBU_A]=j2s3PP.=Ukn)'U6k/*g/RK69QHiPGJOJhFn-P1K'Bf:
%9f^4!>]Fa6SM"kO@LAG.HE0+?Hg]:,+W!upEQ(AeM3\hhkV*rMQ'gSMJ(]W&Niof\@cC*dQ_kDPjBcW?&N<!L]^[^57X//&\bP,3
%%O)N!F-Dk_b`1IN0=r'SXu^E$&V\#!Bn^o!<DVDnXCSmf?]ZtDE9@Ojo2>mXNaMunrYm6/C&Mu2ps]=N,93E$C,aR`&ENoBR>e)L
%!U-B#S80c@k.Cn8&:kFMM74k;e\[f7,2s4T9j/"_BX>^KCPO`%_3!#Z9Y'jP@,+0!!#qY8W=+gniG;%K'K$&gQnedg7@LO%?lCFt
%T\:h9K@R7.F07]7?>5c.l$juDG?,>RKe@4C)Q#dK'8_QmSX%]LO>P*PUD+\k<0<Ql>KI%+3($`_MB`_#R&h7u0&^NHV9'&s?M%K]
%)]];TU0cVE0/X<7abYd6r1/re`)E_\2%ZIYY%o.HNI`%YH-mdp6O;IV>!@0j\iD?6(`%R,PdED$FAu/AB:tT528iDc_(fXL%^("V
%"[T[s9+mJ1<)PZ3>[:2X\-nOrRrXWN\-imYdFI'P,51Nu(0"*n]e]4AA+]/[W#$29e\D\6M'JRkZ)N8@"lbZbZms#4"g%WakU,aY
%<#Vc%f0cQ)Cg<p;HGF,b72"O3-!K<Q?U5NuNW;S2+Z><ZLQi`o.T!g01,,ur:3XT#;/s8mU-`Xo@["<c+13R+5\h6K=TDUja&*2"
%,N!5]%^+;NioJA4WY>jH:L-uKoanK46L'Se8aQ)WQ=Ao%M#%j*ok'jOV4OQId4TPX)lQD]i<$YN<@LtO.C,+"pBG:T&ps&++ejLs
%"ue:]1#3.fOXp[S23)C-2ih4)*6<MlK&M;+hLa^<Truk,"(YpcG:r.A(`H\X$b\U9!o_3J<0[OD1-TfR=)/1s_^2.Z'ElH`GtBoS
%.OWeXT1_IhCj.^P@A9Q_lIr$V34;8P+5uV')f09Y`is7J`]Vi1XlHS#S!tCddBXf4GQ;eYUL&$ui"KL%M<;i.&+5lTU+2W>UVU#d
%:?ju$=t!#uDA,DkeKHiakiSj7@b_$5:mF;U$)/;:f>%Nt#*hH`M3:.cO-48#W1R(HZ!/\<SF^L6*uBd6ls)<eXFZKpj=kFNKo]KX
%=j^5.SILQPQlml"oXt<IR:)"JT[0u;cY5ie`3)V.3Dk3U?mFfNJf(:E@?KtYlL;h"81H]+djm;(gpBMrC(sX@TXP\]!n1[MK]4[/
%W9rLdV1N;=SIXA($#r4."VF`N_8enZR93%'%,?nl$"Gqi!uL1N4VIE=>mF=2>G@e-3'nii]ek#!hEOaqpl&sHS87H30bj^+1([;;
%,aTL5Hbc.m8Hfg.*!$UK]<8%C-2"R[U081,0dOL!"rIsnC'KHM<Rh(9C-b3'7s&n`h&OhA0EkKW7mnB-N5lVl%3V)l0%tAF6Kh*B
%Tn?'rPte)`9(9iF8pk<D8h,_9+KLVXc-TSr7UBM?dfGGr5"#'l\[Dtg4Ye_\g8#V^d#8iFgPd"QgC.@-0gm!iDFYIb@tut^=A1`D
%ZiJE0$J#=CD$\(R2M!jW<r3)<2%I3XSiZqn5YWa"$FQ/.dejqt5Ot?_&+Jk@W+ubuWLl0Hj.U>J;e,XM+kBaY*#0HUGn$/H+q?6N
%8)eK[BEZ<%+`aF<$?W-ZM,lN=g.d-<3DD/V'!3&$D87%FC#GD0G]ed6%N*Z&^+2%>_rfZ?gL^ge\BZZr/*L&H$V\(UKIqq9NaRPr
%j3nEPQXDFOf3ecN0fc*Krj^bte[Xqh=h5$cr,bCneA0No,GmK;d9EH@%!8VYdT?^b;\b-qDY'Sq,8'[8V25#3Lo!K`ECohfJWY\Y
%'&p3C)43=dQMbi<PPfM>OdNihU0d_.ioL'i85%08!\E1(75#Ykrm2etiQ@"'pU2?ANa2B>n:p(&#T)Ra_&OaMRK7I#@q+']<\+C)
%j2_m>pL"IpF?9sYl#n%W<+Fuo;PfBpeaUg%@\dmME"=qYe4C;f7rR]]@e'p(XL=>H%@,F59;!8NrtbsjlA7"G/QPYH$!(5U.1'hS
%6kogU'@ek=Sp6IFckSMHd-=A6SAQB1b)**=F]LXG6e#93=q2i!&bV4l-1r5Zk=Le<ag%Y:P'Y3f`5/ciOf51H-+2D7X6\5PQjcIi
%Wd7_+L*s!`VS&mK/LR9D.dMX8=R5j%FO9(?5a@@_SA?'ZQdi>h$sZS-bD]<XNn))44)ZF);.*X8:ldH,#C;sKbiJuId;`p_/6J\1
%HCW-j"ib,$kWG-2pWRK,?4)XLh^1561QS0?&d??N&CXjMn:3R9EL&fh_/VAP5ohpGkqR-NKV#*)*HbiKkU\Y*#Nr(OU[uu#,uri%
%)K_PX,mn/+`P0_3H6hbf\i-N8W[72d'32iA4(IpMSu=%&BL.\_J^H<m+d6OpV?m\gTgnF@[q0%r#gX-tn\p;2BS_9eA*1bs=eCuO
%;I-l:+V(;<^&W*=\JKcdDm`UaiF&.63#oF]0lV65`5o>R-((`Rq$I4*bFnqHQI[]ri>Vdg$3Q&;.uYI,`56)+'+AMf8_!eG9.PWa
%3*;NTRCJI2e.;jX\ud+cQ40Q*$th)*;_X^F>gir`97%g8G0eYUT:WU0&u#sJ#-3FoZY.@3lNP/e"aef)(MG!IYr3k#JT(f8^W&2L
%Z4^KF?=#=jVCMrkhdBQL@eEE[248\je4W)HL7CJ7bap8>OW_/k579brnJ)]]p(jh%=dqSKMW?)aXs,9ei=-I=`10kQ0*n_T%pAs<
%`AU',>D5F50*&.abn(#u/N."]"dLrud>[U5^fr+\\^DsTq&8-edID*[5j/Xh'D'#IQ+)5&[90nq53KM1cr!^!>=BWJ/`s1PEBu2?
%XeKk]%;)O=X(jA")4PB"GD-@T\ZNi4<K=Xs60\VRf9&EgK&9[5CU%aj`5J4".IaG`,@$]MW>k?hK$COc@bWC'_US_F.f+=(_/C&(
%o3,s7<G&Xck%-oK-2=U<qZ+#@\$DloK&=^3/(l^3=cLA4Q)*$>!4\2Gl+e;A&lVhn25pbp<PY#H`ou/?0o6%s[2'EW2Hd*7.80TH
%;](^c\4h-)QnpHO-S/U4ZHK+Dm2g(e/]b(=A60/EX2mET!R)_!J<;WbLT]VB(caW&#d37W?P$Ja+-@DSOu6Pg>UJG7b]T!VQof&g
%&QR8i#QisWCtXHn\<:ZT&-Q(GXENSt<[rof.nrK,bR#U$_/NtR&UWpL.7+RS=--,_K&I%L>S%<&60u,uoPF^3E<Z1.63Zd<6U>Nq
%&MdhT:<QHF&6H[:"u1N0D-_d%\:XE*5qlP0\f&H['ie9i0eY=l@ZJ]G&DL9jL]tY85s]HY_6f61D.omW$,P<7B.\;.D*rhHiZ;o'
%:6gnpS8Dq()\Rn3!LlC^Ha&(/0OZraLGU/_36N\N')#]8b;*3a)d$n_`E<NOW[-rIeu[QH`*'au;+]%9lcBo8fRq.)]i@T-c?eWD
%0Uu\rOb>l"Ef*E).E`Z.8Y'8R7VsGK&!lcN<$<,=9:)q78Y9BB)/"ePYd>heahCp7RRdbhbF:_QCPY\OQH>F]U,L\T2pmjIHCdg`
%7)?g1516=D\5b1.WZdRfUf4L>iAhO7cqRQHB209B/'4bu.B]>,X:!Mj=Ho`glg[\@@KjsS6clD@M<Ie<EL%dh.S6cSq5B5t]0[d;
%A0jU@fp)[JOiSi><!W.)gpq`/G(Ml?AK_[,&_#+-N7ckuG.gMJ"ma:Z-uf^I_khWkN5"*]S%`%ZhFJQ>849dbHK?oVp'NR[dOT-I
%,nZrL2pa&]GK;s`8]Qoe]T`/)R+AUh[)PBLR&JIGLeT,E+\sh?/n@@M#%d4VH(>[l;O\$E;AiC(_AdYbnhO>@:,fSbG$H`+VWFNq
%'*h+[_RmsZ9YC2E&/3)jU*b]\TjB&OB.[t_)`;VW)57FHHRc2So/?NK,m\,m:fJZ?ce,=,ceIr%OV"$?Ub-'LGTYfg"D97[@uNf;
%=G#2&&A)#\E1%n93*ViQAC$dmROQ2CPpWQg89L.JKfbV8]3!uR2ao1ND,rf>#Ac=3mpJcg-<$/G*Lf#5!=tK>7n*P$U-R.;R%b5U
%%IpENGsa_-'3@*ApIYQqdO5c^Za<jl'(K?[*g#$fMMIcGggnMLeK#58GD?3%@IBPLGh9l'XBUD/aqTHdaGXIPi$#*DG`-i',uk`i
%B1f0V(s]@+MLd"ERjeKY)4.b!\C5uH^)9]M4h`d#-Kb/q)i8@7-BL1i_AQAW_/L8hN0sucZ3G6+;)"O!3>2g69NEo'B8mK7B+-L2
%&8)EI+U64O)NS8cj,(<S30pBX\4g^I7-F^2a?s_M2/j!@9G"A"r\P0I^6Ag8N_VJL[rt;o)Br%3?Aa<WBrZ!L<t`sneZqZ\hNAa!
%(*dN21B!K2L.kSnW$0G<>o=O.[sMTLPTsK9m>OF$"kiE>9#_'A02*h9cB+0M=GKF8oa4m$Hj&(>$\8Sd1HqiZjR[pf$pFXs6u\\'
%1i!;&T:qE/E3>eB6a%eM6aSpg;W&M):Q:#gYTYRJk[?tp,\b.a_-/<I<)?:>C(#>tb:Jbc[PA`J%b:g*g(;l.5fC%(Z@p32Oiu$@
%h?HWeRn-4'C.!p_^f:P\?E>4DnKK]I]mr3J^l]G[8E,A+>ICELaLRrY_,3L`3[R`)>\,^#ilt2Tc)XAo"M[s&`"oSI;F)[q"1=M@
%=2[1./_A]chPu_a.0(t6O8q92g_pKBLk(29MP2Nh8J;S@Ni<`.dCLib)/OkpJZ0@!Po2;2-Y$%'JFco8Khrm)J89t.e?,Gt.=_L7
%2jFHS197"VQPlR:S\utn%^mKkQeW"X^oC??J1F1",h?Ce=A/%ELct>2N`T-s0ZS^^QBehW<<bg7<)Si77Oc?9nSi&iS3aLn4PCKb
%<l0_q(9fquD3]I-JjHun/N0=Zi%4r3UubNA)Y+@u0SbH)oNcempoSX@mDRcnErg5_8Isqe&_!Nh5d(=,'nCTCck'pHA=@Qh-igF>
%9^>gtZqs=ZK.R@1<AdmR5;d\<.(63"ZrI8`LVa=I,Cd+`J;-UJg]G"7?'-:Y]-jI^d5N>lY->iO9OCXopBB9e)/LSF_)):XX(;#M
%O_]0R,>i\YTL5NSSM81VA[Nh,K5!YA9[)a"22*_3/0`1T+q]c+iQftHiD(%6q&:MT7P9f5PI8*Rp/F+.-\E\,%]1DS9;Fp+ai'=8
%$]$;?igu*6/?&t#3?04f%,D25qLBmC+dPN=,MZQo9OlD*[<,`/A:usk0TsBuT-6L?"i,qiEJQHSX`?(oG2eK7=OK1Irob.LGoU9Z
%n9-SVR`+W)i'+3E"'7Z]Ga!iG4:X)%2k'BU]Zc0po>'6KZ>h4EXCTX>e.>KoE/)5_N<D>1L1FFs`\Eue##;4n"?XOVU-gdBm\s_K
%Ee>"U_RtGUeF;urL63>i&6Fs'_5Q0G=m`ShgT4p@mK?aQ)Rq7A-KZ&1$]:]82'WDH@ZN(j:'5EjGp<D=C"NL`VJSrBL<RY.\3jk(
%//^82]4>a!Cp(]<j<[Hd;G4qbFP?XrJT6Cc8h,ujk68j[]WqV!$A+aJ@2rE+9/*Ll@c@m\S5gEXA-EX$/2BDH+jhNcE@!5<)Tg\E
%&PbnD'ul*I=u51<Pb\a#i7'0RkS_'5&4`TbOuC6A!h-LK3++?Q`F60:S.1l^djg78g($B*M$Z^=h6"T/T`WILFr_4BOR5*1"-*F%
%!HEc=mYoQ&HXa;K!39/e*e=Hpd#R9oZ!G0L;jV/l[.O]nO>)IfA#\u!C6LO+F%8rZ_9-/$I/QmY+O%qg9:/)T9%s@.3Z2Amit$Z;
%<,gpQDZF=`V@h\G,dN<db,fnu:A[)Q(lgcf=,^MnV]_!NYq(>N/.iQi3ifDNkE96dKfR+kA<!+J4T[B60q?@A:AV,gF:.#D7at!7
%Yl^)>4=Y$7-fP+f42Ps:7o%<8R5Gid[10>r6tF(PK/?E7)RZ-;97[H$!W^&@+WN)U''>:,((#&<=9NIf$tneWp..kJ`as!6.-%Ur
%6)s5ej:oNI`*GYK9Uo#iQdKot+X2](;o+S6pLF%H&2$n)&)LPH0s@l@C[$+9-,Zs5ND0Kg'hpq]C>iPI>`HE87U?0j:r/hKFbJ_\
%?kCmOj(c^B@S7Jl$u*9Qr!9h:i("3R!HW@r!Kb]#;[c1N.bA(g9Ef3OV$1U2Ob=3LdPsX6+p7QC:lP*<_AP+>,^C@\mX?$Fit+:D
%1ki)??&h0OYP=+DXXF%d-(Sl>Ptq_C>YlGL3]gV,6Z>%`o*!sX8b0a_N-3MVWHO8Q.W_WFLc7ie_&HfW[S8M:A:W#GJ/F*e,i7V'
%\g)<?E,G>;7<QhTO^i+taoY^[pD)6SXIp:=4uu-2Net06aE."tVXt#W0^EcW^s4sD\.6kVU)Yq\RH/P4'UrJN>#b8d:dT1an42T^
%22=qQ8=^*f?a'T+LTTZQ+DD*U>]Z<Xjlc`SD'Mc9nhIQ3RA1.n`n0..-3JY#R%+/C,_d/o%s:iWa3DQ@^!,3[!s!GB!I#QGGi75T
%n+H1$D35l'Y[5K2C.[8!hnU23bj,=Nf9-d.0Nlha<EJVB,meY6FBua'Z9sedKHlqB7O4m1<3(]tRo&FZ2.Y7foa1&,ONKZ7R^T=8
%]AbcTOEC`]hGEn(nO'DYNemu.?uS("f!o8M:&nWF*O<@tD6SR)Xf2bO%L(rBPttn)40iS'/Hi7Ob#.FlPC!)@6tHilEgBlAns)b$
%31$"?2^W_RLJU?Tf!6hfWigA4FUu$X,akujLamVOY&[ThGT?$hPBp_1N*Ir)WU,1tJ;-&S)?l+:\fi7XIiqgHKJQ"KL'eDD91`$:
%baqBg6Y=YZ20+!8`14J+'$u`2*nC@!3f!jr8g"@qB<W]J[Fd9!T9[&!nRb]k`,q/HB@YI&0$Te0G-Hc0MR5ujX#MAt_,=+"Oi.`4
%O+JFML5`(N<+[naM:7/V?90&'[b]F)KXjDgHDNkS7++80L\d2-+Zo[i8;B`(?cDffOgh-7aK@.K$?/JR/861]O:j$j#$bG"2+ed;
%C*ls_81Y>f;eS*!/.L"l_<H%q=BR@t3b'auW8@W_6%L"a6Oe1rgPNau41D3A(?09en>PbE]V7]B*$HjBFeIbY'@c[5dg?R+=f$DF
%Clei=5'2s<*'3>h[P1QSoc4Y;BH+f6/8'd;(4]'C'c'>-^`6^_e5usi)&`&f#oP4PFeHoB)X>,)ImSYh@%pte`6cKInKl<h^`3I)
%Rj;NT2;!KKm05=p(f3"HF9-Fg5jZ-<K=a>W>m8e+)o?XLUS`RQ1JqRs6.LT=N8/"iHZ/.G;o/Wo*gL](0JOSnOWI,$#=J#B7\Un3
%*rRjWf"p9M-mMk89OMSUBkg@C?Xb$L9co,NFm(LbQ0`d/-,gThD^cXIlX5gS\8s\'[0riXhILXQXb3TEPi@Kd`]qqN+--7CP17>+
%Pq1=^)ieJQDE)qJbXbJ66dJ[Kam!1][u6An##hi<3>m"2Pt^3bQa]@>(j[Ub85]\Fa2Nu_FYJ@m,`]B"7U2*;F@MRP6P!_&B;r7X
%BZLd@TrTDu9M@g63$tX1')`M7>Tb$<LaOedE06dt6SER#am5$K7@PE0V\MaS)GHg#:,4nAT8L/<!gY<]n8.m[G#(dp,9&:M+&'o]
%CS2:W=@.;h2MOit4nCf5EY@>J<k[\aaEJeQ*t5"7Y`eas:^!/NTSMt%K8;[74LATEm6g';Vh0bN`<CTmj%@\Z*.fr1=G_9i,[.0Q
%&CF'l).Vj\m!Fcc`Ce'9G:KN(P]I+V&0qm2i*_eR>^*oWD2S.af1`c.ET+'qXCUAq2(@+;,'9pII4uB-@jU-.o0a6H%6\7PFj@O.
%ceYoe`<&r-R?bu,SKh!%RD9dmQ^,c*SX54+p=t);LctLD+H9;589uNd&\_[WiZ3iafK.?2P`pp7TW*%MRrq2Z*AYE7ansH\J$eBZ
%W(N\NQ&pdH,Gfe+!;\aWT#C&Q\K%Y^@M]-&?oBP"*=ToN=UB@-PSM52H3Zh5?*'iG0UA/l;cW-s4C\;+73.Pd#[:gcHfcYjZKH(n
%XEGhr+X/pIc1m*KZ^/2Z#]l=E^%<<i(Lo@#4`Q7F[M&8[h,TR<8_?CSa%*.&IYW.c83a.QN`G?;]p6*_G[ZKam($%77d&CfX)gi5
%EtgrM-,Y@$R#I:5&)GbVck>f+Q<9?eQLk[WVMU19U)Ti^\7?5ac\P0ZF]LY^]d@HLM5,$"/*S'0""EaLh)W.Y>YNp@Flcq-aWT,6
%6l)g/">"L%c\>SZD_Ug(SX&sS?E5?`K:tiXmSK[^bsVdm%c2g"pd6V:brM4L!HW(H9/UZK0h?.P8C/>Z$#u+:J)'IKWFn=>!qff^
%&[cD?(oFJ+f-O6(!W#i++,jhY&aNMbQkBFG21I><2AVBrNK"+H;1Pc#$I#PRBuSBJADt]Tbd4,i3W<+qa`2e5aUt'066ZR=C6N,h
%kcn_MfcNm9WC$aJkdb7TYn&/m^ln$pVPYfC$Ga_J`&)N$6*+UHLb`_$W&kCSOp!ud]Ou(-q#g#KXQ4gaTd8KHjR<_iQ.->86V+bP
%OEsJdAW9HBl)SM!QIHERWi\ZQQr%A4ZsBOt:i\dBrYm'H^7lc[,8X#sG.gd??V4n6WsM`\SadAZWq9$ml"_S_3I5GYC?Pa><jn_)
%$!!Bc]lK.E8]Rl248D4$XC*V78sgb2m]*7^*(V4)g.Hr%NlndKq*75l<\ceUn2JE_S8u'^LcofP7TM9,`$f[\'"=CmOc*GhqQ+37
%;@b$4EQd$iqC-;Bh?mudK4R1[[iE)V(l9\*^W9$EpjAR=RH!i(N0rVr"*IqB+DET?HB<\B61N-DQG!"S-o7H[*"Neq%U7'FOOk8W
%*,cK9ab-EPW)f'D7&&t%Gi_%<X;jfBj(U2fl&\:nA-F:""2FV>--&@uC+gmUJR;cgL)q\h=d(BIf`Xm2"$^s<--F'`a\s]]*\=uK
%CaI6?1+G!S#)UOu,j'i-<.VS+U-??/-1s\4<<ONOXP##`J<_0K[Z]_q(QocB;H?mM;%?ICW#gq'D)1do,P47nm@L8FLdB/).m7?Z
%-2g2Y6jSC-1PqRt0.3sapp-(__$7d27\=$33+MUVV)fjddn`$Hnq(I>4*ZU3E/!D*r=a5U_$A6b5\I0!iZB.GcaOPei!Q&cH$>;E
%Gjqk%9>"tMebfr3iI]2j'.aZ-(+_=g>n.)j<qAQ:1aeR!73+;K<h@X]A.cTriXOfdLoBd$EV8t,+0E\Ss+*qlXX8QHZ&2-FK;4&W
%Wu3&D\B/IiLht5p"jMWmUkCtBJuqO!,'F9BM"2*k9([b2j*.OA+:shTBhl67[)BPt.M'O9jo%la).Foa_9iRTeJo*AJn6g[!sQJD
%$%7V*i2JCe`reK:BJmg4S[hi/I;j;ZAMqLq`Egn.1uVlMqLBpj]2himA41i2PNL*S".Ft3bL:JH9r+Y2W2cqFi_F1,l4]Vn:2>^l
%3nCUfJiih.:M>oP:fBJU/3.uCP9'h1')g`*T4sGn_ceI,BGs3.')iFa-g$Tg1buP>O._-;-C#q4XB?ThA^`1@aQ79@k*5#%MhPZj
%Ufea`%I52YC6N3e\!lEp_=+<o*^$a1fIkOE2Hf$JX%=@o4i&>_"4'E,G^C]nYnH9YfYrXl%m_utFK`hYF[JPk+Au+,.DJ<:<U[KM
%0_e]?fbj":AmFHO9k$lpFpW93H`9RX*4&3=7qJSiV.mi$'G!1+[9\ZF3_L5rS`Z.`[75n+XC.K8p$CHGEWA,Z&;bhnlj";?+)&:+
%Bcg:Z-2(cQHKp[8M#%rPL0fGCaGnY4<1msB$_eru[$@!!#=i^+=\\e/1EfP,;Q^K[OUj1s#AVH2R5DBJ?I#A%eQ*k93$#HXU^oH9
%NTa?*pCOH>9hBr<UYK.TWLEH&=K\2m)UVShP<L+jdq[0`#5MT,KK[7!Z`#JLY&VBaYT$$l=:'AB,W8P+AM2?3@1Dd8Y2?N3I@)FN
%Qs8j<TXVq(gr-QW^keHOTs6HF)U)t2ln)F"S/T&f90mJ*c)lN*L<tM6I,LD(m)I<aV`>$PXEL'%RVSf-pG?\\6HGnN'WgAte(bFa
%5=S@6BX3eX3S?hqmL[HKH-J[3>^TS94&?\kX2uBD36unF6AT/9<c^@La>LF/AL4flZOkR<V$&u$ib#75*<JuWHjQcnm94773$jr%
%31>L3gN?k_nZFS-JVZnR#aT_[,YdR$\K**6aD,UJVPZ7/P;N#>N*AXWZ0$4s+P'Fr#:.<KBaM@rMYjXki=LhW;6k'\Tf6"-488k@
%&rCPr77CZY`[qg'=XCD,7mOMJn-2ZSa]?7tI)2P!_A`\G_AbW+2C6'\&g:R7]P3dqp]b)eFm9#JlFo:m'D%A(H/W(?-2VgIRiOA(
%j?<,:g_s@X]E#Eq^F;$Y=C*km".;G.\;eB%Xep8T4EX26>N<&QM0F&<1e'0TKK_APHJe.I:6\lX,]JdW_\2e'\c>@]h`r;$AqNkZ
%;JJT9YjmpI&%UVfZ.WeY(W_.TOUo/kg,^`U+#8h@a9Q&`N0_P?9KOQd6`*Iu+l$d'PfO):GcG'WG;9JI.GRL[,kAeCr`7H2pnGma
%9\`5/')CItfE2\M45-ch4-WJA+$9^*=@rCOO0TD\Zuet!6S9Vd$_XLJGoo/\+!g>!T+(l9:f<ct!mi5Dgh?qne]P]T8`#4n6f0J_
%4)-O=3L^V'f$R2>bZSs]R'Vmqpn@-dgiY@lCb50TL"Gj>$lgJ^_V8Th'g"hEU$i_be:DtHX`KNV2$T*"e/5\?ilIYA_OTbd`kX+O
%FPIF=)#MY^ehtZ>J:.[k+M@;(LWg\gChU,*eBqe/F[M3.XK(4-@,O^Xk1Z[85%JsNM@o9>h]Zc6+s4**309-[lA7SO[Y-Sa$BVQE
%C`KIA_OVGd$#l7_l(tsb\tjQ>"g+('hr)V?)q;`efotb4*j:W,$#f<%PI9&4'/m%Wgqf>ad?F'S8Ra!r_*"F$]Zl,h4?^Sj-,@@'
%T2MsVpl]_G#`^FW(.s+00Bnslr!pGO9b8F+5tp':4mX#06#pP)&U!GR;b\76ks;!_]Y6\*>YTWJ'*n;[B8dlD8at(pZp505Z7"D)
%r;F],(d,#S'6S9qT3@WR=&b53D4u]4kE60i_5PAjb)CFb61oc%@m5K`-Pq>e531U?(ulZfBUDXQ=<Kpd2YI>b#GVJM*[;m#LOL_A
%.l1WZ=A[b:oFDG8)d(5]i:%_@Q,n^hE_>m-8'e2;8cCDH1;R)HE(]\VCss`Q+!uhFWiM's[<"c;;K47tQWW*dO;1eT840'jX_s+b
%3Il^Y_YO>j(%`N!XMA&<U+p0%%@D3.AI]:kE+bn[*4IrXpVm861dk$mBs6>pkdu9]NQ(/e&R,6,'p:mD(6ZS^_8fslmAZoL?'qRS
%NkVP[UD\)[Xu(iQL1s"/eTd%b+JQ_s#hWWeLO_O`N]%3d@5p,Foob-BGJG%1b10X;?.QPsif7T`$%N^<W*%>V6le=7'JSXuj:K!`
%!?`0;BWuK-i#9ZW,&Tj]FOL6'#HAhU&X#%X6!,`N;6cVsc4u#oP!s=Y!D?To62f;D5`r!1Z;G';4"^VU71&,?;)s<7Xsh-B:eAXQ
%FeJt=ftjS<A',CgP])7KW`+jL%Lfn34:ge)E.tmaC?d.VjA8b")oriU$?aJ,MgK)q^>0GM*B-aA5=?FP_n]%R<Yh7C5V89[<4<Eq
%o!*-IEc#q4@cAs:KOF5&N^>+5&!J;0k/2b^p;heF2]2g*pK1JD9+Tl:$7]fs_h0fnfRl+DWMY`s=C^9f?GjEk05E6P<,gccF[Zc%
%kbaq>Yf6nB`P=UO;91'6.;+M$L2*er3S#eTb'B.?"';1V;OqigC,\-<!HU8ZTECiX<3LO6-2!p&7p.=%;hnt/fgE?R9pPsM#HI1P
%pkWZ4hS>tj<#eDoY>cK3VQ3Z97qPAf*r*+_Q$O8ZZBFH+!o%!.JIddDoX[p2,HtRd;GSMgNDe&$"-$20?Z8\3]PHeo*3%@8N0CIN
%3a6Tel64Sjd&\3\U.$qN"cYuI+ptKDK[-<V,Lm*0-+,HjEi(lpdS"^R:$l.k;@cbN8r*"$9TK:"Q%m28UIT@')Odb9*^;Ba)%+ZA
%3SIF77gjI=VlD'gVP2K0>C+A]gMDW0.`\R]o!">1L8Zj=P+5!p)Y/u"<BBeo'&*tS2%'&T&PSBeea0&mA(A5bQ-'pQSZ7uT>L1]b
%W4^O"#0\6L#0`L6g``?q"'8nf(cN7I6u(GNWdrHaB]Nu-7UF1gP+:Y>1KMo&.QL"Ro^/6;'ER.H8IC8IaAiOtW5;SMiQ)p/$A`q'
%m&4HV@qntE$V.7JUk#,%i^hOn?LUg.=)pS[QQhfV?7^Vc("tB\Km#(!Br!eVFCWl"=EV;UU#!(Xe54nO\L!t*a2fj"=(kK%c:oYB
%L2&f/*&:F(7nl&6`c)X.j\63p\R";>G*MV93LHk(Z_W9rgps5$2q2Fk(6TR"N=HNm^suhWHJWDBK$'SjWmiaf2+A'eY;((i15q&Q
%J2p*%pIV<M$K64h@;Oj&F,meE7L%^W@AuOcX@jJ,hBnqm:;S%H;MC<R#8c;BF%1)3"H64;*AZ(inI?EN0a1Af='+f>9N,>!6^oC3
%2aj_M#`1N73<W2Km2H'kUBn$\K'@.iM+A7B\=3:>!3YIU$\5:'N+1Zm^s,HFLI`tqAE*$6-jHiOcVG0:cm;:35n3?jS#W^RH(b%t
%:=;87RP9Z<1rQG8>#<G4a''cl*[6TdV>GKT9eU'e/:ubA/Q3S6i+\V-J-Je?6F&^I'!5,gHj%61;@G9tSm]2Cr8r:E"M]65233;E
%d>HFGWp\su/LJ>%kh784D`(ra%;DcG*(lNP343-mA%jZ=JT#[&it:<@5qGd:4@CCS-313'gI\\5Y[5Fe,JtV4H_U3BS^8=m3O(M`
%\;TSs"U*`[FW0_a"i\Po$K$@m7+FOPL71fKBmV'R+S]u`ZN]teUnZfXUg]DdJo4sXaoC;_bmLB-%_g)AM)F[1XBl)XK;A#IoQ5_L
%r""oe6,^^tA^uET>t$%7+.T5<K&hF&"tgaQ^DKQB^m7=85>9G@Yd/hJ!Gf@X%""ed%Wl^HBs7\hD)T'LS:.KiJ2tWO2NGFh?2B?7
%-6siJNX^sP4*XQt@YHm:>qfMQ'FZod/>YD=,Tr-(n8K<4i,)LMEOT)m`1=]V#!6@1k_2+#Q'1CJ+aVRNY_/kBZqL''qFfU$$3n&Y
%N=H8Jo*!YVli;8TR3!Ok9R70)L2,<Q.`"g`q,Y:90H<Mq3WqP6pD<=uJU7B@[2^+OOS(E`[kQM2#%D4S-.UD>B]6g]fEK6*+2:9,
%+:c51\K4(eo3P'^Xp7IX2`S`;i+)(N4f$fcUni=Xb`Tn,:dTN\V0_@:%Wj"r*ZVlRi"4SgE5<5n5lD9'7hINeE=IJ$CKpsbSs&7[
%L+j05_\uK3&D,irNBfI\U$Y0)qWbH6e%c0Fdr:K6JRU)QD%P(Q1pDN43h.IAE"kY),gh7>QschS%J9X[P=,pY/>t0LcI)VV@iJZE
%UD*eh;8&:j(hTSK/>ZA`"#iNqn/?CTE#^'4S7Hs(YSAOR*dEon`ou/?Yo0nunBP#j:6"dQfkHP7a\!$ECn1*a%g^ZP),OW.>rM4^
%paGbq&lfl%Pt]sRENd3L)(Bcg8,s]bNB9]5_;S-aP!Cuh>2qI-+]AS"I'1\.X5)+s#0bJi#(fA&)[ILD"N=5g\W\QUP=5?\Ph6.'
%KO4.'+H:a+DbIB$A<YCE5(m812/9&9-D)#PlN:TF]E+fbmX^t@EF)K^X\<a%knd?'KJ`27dl6J*`A+W\'qNoENI8h$<#CDHU83@]
%Q:271aLYLT_!4Tc,)EnC!H[@40QPC*!V;JCe;,mBe&[]G$KhT5d5iJ&%h;Aq33PfS-8c>KkA'!n1$)f<7ZNc>n"=Pl9T(Cb[3mK&
%4VA=H7`IMmd()^Yjs:U4d8hlfR/<t\PD'T)l,SPHKmQO2C<1-b/>YC\<"!pL/o#?DW+=m_lZ/?aTr[T8Pl^2#U`%25*eZNSAW:\s
%+K?l%U'b4>W#:eG"$>q-BVarn>7h%d'Ms=&1E:UEN3KGmY\'W8esWHE#b=W>!es[?Fb)!n*_F5(p]2*t9\ek?l4Q9SC.qpm>@V,*
%<aE8:Emti6U[sB(#R5GY+%$"$HRe7an@)FDf4<F^TV/(uff2NY")fpTl*K?0gHAF$XNZ-1Yc1HO/E%,m[]NS3*BBU)40k3R/N+?0
%LfW(4-7X6,OTk=`2!(k%][g@>q8mDpee+4MeQM(6lai!s=dtWFgTFRi*F14p4gr^2<9E-!_&OZifYBkk*e$^%\VGe?[HjNA[+7r&
%(**^1aP9B#r4jKMY1?;uq)BYtTsFr,SKddTT`F3l:4RPC9+DuLFVl!@J:CU6K&f%bOOXe`mpOU0gR.3Da2$5Jqd+o9`egaP6303D
%[3ZVW"s6/dJu4,D3G^ZBJUJfq:)4sKD*i:,;$m,pjt"e*[\2nlW[i-VEWcjSm:"CO26sAWm";'WP?cI?XO!p4\uGrh;uec/+Z4[9
%'-*?=(*&*b!F.<')sC[[T$_VuEJ1ZNi]&Q)8)R&Wq(T(T#!9i[JiOKe?"K`cf-VM_6T#jV</#oRF/Y!9PI][40'V>g^q`+/%MALK
%joj_#VS%&N$m+H[+kFFBi)4(?9N7FTk;BJ;TTUPDCCD32#_8#joe<9-!H<XI$7D4>p_D[S!-=B@+E_8P5j5.0!oa943(F/N:i6^B
%UahL]2R(Lm@iK*Jg(ZfUg8)_H9[k,n+nVjJnDe[f%'ft)1F7>OL@bTTQQ0n9RhBa=!B)7NXXZ_;_?B(9X.d#(WPBGnWkb*\DV4Uh
%,7!ZE,=aE;<C^h,A)O(h@cEsm#@"aY^dFefhl,q;NF66NEg;A"PIe`SdA.fQ'/gUNYL0.,L/`"/#Mr.EI/(c?%OMssF<b-Zj"TNW
%O;jY@`fKJY)isq+'c]?IjI3=oCu_doi0([MJe.6VdE<H_)+-eR\L]Z3d-`eL[SfNB,o*N'ns)T_@BIg7Z>pDB54).]\;@*#f)Cbj
%K@$&!OZ/YFWiXJP.T[/Ieqb9J$\jhe1,HWmL>R2#>1(ea6oD.l1LCjC[)C`9`=PT8U;WegP^,8+[P,cHOQb\_-\6q(9$DHE:$Qh1
%4Ok!0q19)"+<u2;M+d\:jQR'+\h[,'EKH<602+lMYXKnm5h3Hd1+%!3([`J?U*hiD@OM)n6o1o^nVrf%oTRGO"a<[M$")<cEp_k>
%Uc-WEYjr'Ml[kgb]\OEC2g"t@@8epqcjgSkX1G<F$cL(qWrd![S?-^oP7MDNTsg/sX=h55i^hI4<.i6aLb=WZ>d"u>N?^l*X.$;J
%U_,;"b2DRn4b-)qm@L7?=muc;eWeSMi/+^0%'g%glj2:<Un0jHXJD8+j*M5ZQlp^Sc:$JSBq$%/5Y>,C;fc')Hs'kSVOrTt47MuO
%()T)6=6:tXNH_$IM_@^3>pd9:0lhBL`5jO\<\('m02""N-L%0<]rYUMd343^A5170P?)$k6g3`,Jo@T*L)sd,!=s!p8i+KCJ@cua
%i2F'6jLMnE`Rh7K<E#7WZ$%V^VQN8`UFF@*[sun%e$NIJdJ`OMq5L"1Z%#J^:e0XEokM*SEV]OoZMa[oIsaD&.Q4tfl1=5mG<`b:
%G\eQ%o>UFhb9('(rf9IWoC_/,s&;=-CcU'0s5E:u([p7qq""-rRn,_+oi&g/s-i46n>[MTZ'j9T&+7IRDBH%Q#u:,`TDKBCCP>d=
%Yt!Es.9!o\ULHrC]pshZq[]C6a+gGFbh&P8o[B^>ReserZ0q<hR`_:!Mo+n*)u6Wd55p!UhiU=YK0CdmAaQqr>ubQ2^PhQP,c.Mt
%X#`b_KT08326HiVrE-^6.S;$`(3K:H[8^UlKD0idhN=&!gnVu+%Tq;=,p)poEeVLUb+sB^T^Kjr6a%/!HtJP5d8:OFmYuh0T*-_^
%&m(M(1$Y"QVL+pXc&5(lTB:j-.Tc"V^m&Ta7_+g-.9@*Z"$NAf"$I8Yc=:P'<2A2YA'Ffn\JSJY\d&Q,5rfftlC2\+R=U`Dl:@7q
%Yoa%0&l\HZlc.Z^DG<U#>q:]ieQk*[(@%J6kk2cBPaGW,QFL+9:;.RF)?s1N\;E\5MO-s"SB>[4:>=]KVgET[(D7GjP<tF<2J"9$
%?5s4k8Mij0fQjao\1jRWP:R?CR$(^4),9hV<q$&HDTGdpq2q]BhO;t<>+aM]RcH0%_SAOM.Ze=m\se_j>jaE#'^;LK3,1&8[+q+q
%WQp*3W,l,gFbs^"lDc=*mqT(,@Fehe>mV@LMCr;@7+9Q+a8uRH&e;bo5boR0UsgtN1T)[+m9Tl.604Wdea>;^=c9kDeZ>"E"PEL7
%h**mMk)snh\f7]AR-2C"mNmT>ZVkrcl,;Cnob-%ki+5bPifoh(_c+Gp[sMRfDdcMcDO[141%_r,rhToRFdJZLY-8$im9'VT"VDDh
%@"SEfY]![P?q7Ml(Xt\!UaCgK;MrgGLM^^WTtuJ!K4h'sQa3;\\#F,tq!WVe\(3o.'?lja@S7'A1:.`nBU*q24ne!Cn>-/Te-/g/
%HSkoZ_l?,*<insoTM_g`!U[iq-+W_B%igDAPML8TFE^@`PO/M`!$j5fAO84+`MtoVeW=O_X0H5jiKb5\XD.W#Lc&1AV\uTL/]FV&
%fED@6Ac#uZ.""_(/:T[1[.:FF(Y6a7aZd;B>&L"8oF>5I/)-A:]i<muKM2'H$*XtBHHfmQN'=Wh^g+lf>)ictm+q6,D=jFh6uI2:
%JmEY:&5Hq?JH0#'_S5T@L-T'P_@r?j^p:2287.95d+7(X-I4f8V(D7MV\2GqkN4(n-C_t($\6no]4h'mbZ"r9h54e80\\o0m@JAl
%\9,o=Pm,'A:Kr5<bd#UY\U3JQl9-EP[[gp)STD7i"rkhXCu;=cNT[IXP[J^9L3DWN6X'&+r)h)sARD`fbPaDH-mbj^XgX^GlL(NM
%X2JSlbU[&9R-:FNV)3Ir\u#>'[dOifM=/D7V9<^&h921R/$4=8d6+n7nBb[/op*!Y`2a%kO!bu\:'qQ$%LEIa%5@NQ.<aFG"p1T;
%'4>LXQ$p@U2K7CDc-Ro,C8,"e1YL3ialXi:q)DIRj[K+=OmtCtUO?nNWKME->bu+]SL9Y2:-pkNRZigR<"BuT9M<LlkLo)Go^"[?
%i^iR`!2$s44:f.uIC[CB$("5iosn6g#,cCIGRQFBd\N;TDXj]lG)K/`WR@o7=1-h@AAbHY[,e5sBEg5cSa[-2QKGbiAiPGij99f$
%)=X%I97/Cc)8*"4iSB2e:-Gt+To/Ghf+trd>"$lPG"GhORO4L3g#[tqDrY;^%Y`44FRLA<1qT;\l8!-u$*<X(!"3<e'd1ar*D1_u
%[VDU!-<nagO(<29P7lS1>70ZB]$29<>Xm4,1Nb<4O]e\3QS;If%%X<>\'.[N:Mre4l91tI_Xjc'Pj0Dpiqos%!"<V6=YCT^j5MVJ
%K52hb'/)iq-'"<`('iGd0CcSr"sKF$oDh98Hln#TF%c;8B2PU3Pq6jbMfa"qa22M5dBEa@/;.'!C4;W\T2o-@%'Z[&G9X5*'*J`D
%9LuGb2Pf#[pp/=g'/QT.Peg*.@^+DAWPN2c;n1<jp?rMJ?D8rB[)Z$IiU[&P`?:VGH^l5p4q=gAM5F<HFamPkpc<r]lRZH]9k>56
%Za5X0n]s_V+*4p+<TtgfU4eJqEZ962'0`SaQ&q:&''BAZP6Q"GT)#+-C+.S#G$RO_VX/P0G(+VWIL7]KG^8?%^PMJup7LXADCKjV
%_R$T#3AJX-BZJDP1l-&$np"kp>/UTPVaXj8p;_Gr+VUTR=(FWSgR[G;bgXjY?2-D*/QlCFC=X2_Re6i[VVOZ6Pl(Tr9TH^\UC&BK
%bg70)NXl.Z:J%>,reQmi7j:@-*>r&(UaFW4(V[7=[>qh[au,FZ!m`Y+>bn=3^iT&hIL2Vu2oFeb+.%[R2D&S:Y0sbU)G+8VZ`c.]
%Ms_As`0*)CfKOkhDHG!NoX*Zu@`tHOG9N7eQ]8K0e1Eg=Aua1AmVW@&!If&QHn@@Tg12k*L"Oo8#2)+I!o.RsSFeJFN;I'#EbiH>
%ciDdA(UZ)i,T&OLC$&H+7lGlU_tFNE$"""L,uR?c2T9-41:m,1)6IRBj=*/W\\1PjXlUrhU,HqcOWCHaG-1Nr+YgR8POHl\Q1tjD
%VMH?8T*b<'mDa!W0=Qg3$[)>Cmf"6J?-%6BWp-s_W.h-4jVJD@J99r$-5!!LKj2^#lmX%%>nS<X)4d)aBIdYh7p@8@e>98rHkmjL
%0XnGUc+YK/]'W.+0Q-+WZo4k^bu"S=qb#Js1;f7CZAI?fECdG$32lX,fhuZ+Gd8Hh:KEu/fZ=at&C]eRYZmR*\`!t59:XGt\_1f-
%B!T>)C*:!mQ&HuEWVq0*l,Zr>:X-5>FS*'+>:+6gRugu?M^/D!h7^RVo^6usIeE&cDD;o+e1HW24fP=Z>Z$W,Q!*0_;OKtG4_Fsj
%&D\+`"OR\b\t(*;O+gH08;j6&/L;F,Wk4fJ?nf1&fJqr>$G`nd3=m3FO9<ne#:TQc!8U*"@UW8\MhNaKo'rk[l&:>h&Rm;-DCO27
%\8<Z4O6S/3O*^e+3eSldX7@#8X-??4Mks+Wb&HgXn25`umI[d=BlBoIX]Qr,*4At-\pBs#BqDa_g#H&*GC`4V8#WTUN0hdE=V0E6
%dg=gRW9Ym_Z).@.V't/ID9>#6:0k.J3dg5aj`mrSkK0A<!n`3&B3RTG5,WRrD`6b-3o2E3?f9*@d_KiB:+b)A4:\)5c@BoIplibg
%oI#\9i21,e[WG;Hp(2+O8*CNbS#(bIXn]0E\+o,2lO/(s/+`"1+6BUoPr5!WHQ(X92%6Ks-%b8%%YJenRo;S_j10(Fcf!G2iap:g
%FAP"Mo64SI)'S@lYt<5(FkKE0=;gq?D&>;\p"W=R`(4`J<(ELCWl-5K)!g!gC!mX2l04W#oQ27iSe?4X>7hBQ7[N#Q'..N@mI")$
%9sG=Bn;Y"B*E>bWTP=r/:ogF=4H8SBoXC9&c<5(R\op9.?";=3)jW*?RAZsX+]W)]iQSgg>_dN8T=*k*1""A1<)_e0C-*X\VZ7Cr
%UV3WC30BV-FBUdX9:X%p^/$M%T#3X2gG0GGY_D[nqNu2i_prL$EL*M\H0W8%PS@g)!oNoke"U,.#^;sAWjkqj_d+ouI6c"<d/VC.
%&9Cl\7"/@Hl;5i]o9nFO?.J',Z?G&trbKI%oTuK?b-ZC"2CRG%4'rQa[!5[F;6&m0KJ-'/o2*`!<6J9P;p.$`(@O:9-)[4?+$hZ9
%0`g\rA5n)+_\DHUY%'p*\8RJ6!FN^ACN4N3pQSGaS)XCk`6TUIV@0#6Y%^F$PohZ>Hq"IQK71Jd[Q3GR<6l/VREo40rjK/#o8-<l
%UL&XO&Qr!K9Rn3<pn>.s%)C0[`T'#Hgf-)]Y(D>'Hj&LH7MY]?4rGAQZW++/Qlh;eLCW+b6iJ3O[3GV;'-Yob-7mT**`Tqi+Y#5f
%\f:&o2k18r",EHVN&AP"dLBhs;Bc(KS:g+rIKe8"I^H`9JKb'H2anhUmVDpUiT2[h9%^p9^B:tU\(dY83o"U>1ZmT`#(u6g_f,sm
%%R!4Y./(G=DW!RghsiYa7shX(bP6]N[PC)$X4[oC*SrU\9F2,/[2Lgcs!qMJDY6M`nuCKpXkYm+Xhl\!7B#C8E-;':#s5^mIE?.*
%T1<2#Y'/h;:;<[.J-:K9%/T]Kn_cI`/hAM$5t6Z=s,-Y$TK;`/OM[rLD8%1Y5J949J5-'FVHeRB8\^a!PZ+no<TiaTmJ7Zii:iU)
%Fa+4n&l)t,M3ZHpWNBP3e)C6,q'r\%l0o<<h3Ge_WIVJcVF0g]H5u5BU`K^f9ZmnRpQ[KFWH4NtdIIXA6am[C</9m@Xc,IuYA+6k
%iVa0EbH17g2p4tZ[[4P3GO+;cE%tG6+!gAsAba*=465O(/OM.&l%UcG+*/a'@A[$feT1=0!1h^ieSksoWo98*<a8X#3LM`gN3=/N
%*oORKefGk]FAm'I$LCF$\ZadfY2!;(DPc^jL:E=8>OmO(EA*C1IQfM2lsf7o&U$=KI),#oHe:p#mB'gIbMF02PRg/\)56OGjJre2
%4*/MX7*I$VGr);PL#4Oo<cT4hmV9J.I&Mr$+%l8/j=6Q-%CK5jrk%tcKl9+9hhYfE.eJ3,dLV4=P3L?d..i!^pjK3O(42R314,FQ
%4^MH4oN(N&g'48eU:@pKkAYW<Gs5h5Z,9Pla>U=RP-:A9QM^3PFtNE*'.68S-e?h@Qc%<Vijk&OUcPl2E%N`@WO9YX4kC<BoN]L\
%pa(;MCgG/*B\V96Y/@A1q=Ho'@Lps[&MM&dX!i-g7!b:KghF=N4-0]..k1W:oL_Y#eY/P`<)Oaj%BQR["eXFQ;bl`=>O$&uq0dP'
%(4/ZE'sa1U9h+$<#1AIb@7$tp=2%pdX2Wq5;OMpQ`&mbU*KsZ?h9IT6HQB9.b,>L4FhYR-l3tD@R4]^KLdm/\DgKZZiOTkh/)q<>
%gk61nS4]ZrcL#siGeu(;k?*&O[$'\#Sij-6:9ZZM/#*cjaRZ(:8@@^g"D<ZKQ$e=7Gj_E^9HJg"luCKH3lA,B7QNmuI&r9$0Ns]5
%5!s[`]op^gT&$C=jb;YsmHl7G/+OSSA?0n6D46P>a7(T(T:pOMIX.,a0LUI">#<=^k\E_slb@2ub>#KMm3\>2H2,2DYM'.fF\-qk
%X"'MIbm@XU]hPCWZ+&uMT_>`Sj>h=/_T7EaiSsu*XTm\4o*4)OU&Lt1=];HbW)J&e;5Z1i>JHZ&Y*kCMXtHU-S*H"_1ni]'3(CGm
%p.cP7HbRU#4t_<8C7[K:h&r4cShI-J4ghMum\a7V$/+l]HG7L1C=mB1P<GGBPsgD1-7g^+c&(KF)QmLJ&ZBtW<0iDh_f-k^o^Re/
%JmG.aoK&r]\*Ols-11A"]00$3koTM/_M-ea@;f2S>hq[SBCd84Y&@LdDgn>tTbZ+!PF?/5+`Rq8DSVWf#p0\i=-4NWat:'>6PW3R
%V46RqGbqI8)13jd>Jo4=IRWc8@k7.2fu'D[;hM[>UC4hDriBOE3$s!^SL_5\c#Hu[G%a)!9!UgHbZ"`ufNLkP6fScY,WdhqE`M0e
%[GD`RW'08NC00VNB/_F_Fh<dpYWE]4:pqR7EYn9m\m6/o/j6R[]<K%]VfpYTP]F3fKSJWXYDQShmNA@"NHs5TK?52/heLk:K7nEr
%+Pl/4lSttkrqQ's/lQ8dKQN!/-i6n0%5IsABfN2'<?n4NX%#LJ68M]E$!"Psl,e/5doJ144sV<=.[(G4fMXV,SrJEnZV.`lI"uEJ
%T0Wp0=Afg`cTQ%(4*9@ak)4F=@K#OpV3::$"dg1VO?OhV4OTNLi6O;aqfZW(Ci[_1OPXsL7[J!//dJ(OW67&%9M!d6H38oII%+gd
%J!GAnGXfeuBX`@>kmfLCc]CYcF-nV7prp*$#jIa1mVoHPg4LuBCkq`Z:ec9WM9:D0+u_YX\Q>?j,FR44fjXYdk6jj>YCY_U7T@KP
%=FIKloMl"hj>sC)Ca%D=[2#aYbZ.k=89S+C30EO2eud",\X=!gY0%NDlEJtK#.Y5EGu.%T=:[')+Et;J9=6;l\IP[2Sri<CRaE;3
%iKoYN/s`'q*n%B:lQ[_+@C>Qd>_gin4`VQDXWjQ%XQ_#`c*l:Le)<3jWSs]lCAF_g2;DpjO&BiXh#QHW\LIAg08A'sbZGJ$D8:,0
%XCVKg/(R7YZ!sZ,!Q(,e$(#BK0d*u8.p%@;4&28]J8g:XVZmENB^aP\fFA"U%1)A5l>?T@LDcTd_c@951a';;pq-XD*Tr`/T]XKs
%T#e&Q!PoNNTVf)Cb!b(Y9h]7S-N$sYe,IO[r9#:eT8bm3.i/DqX/`)oKKTZQ<t+LO\=piAjGA`3PTA,Rf^cr<L15%$dMs%oF`q0)
%@Wn!P%7SG[Bb"tqG<icL\=]H(`QT*3%Zb>3"F<.GojM[SU"+oLLPN>NnEmI1PbAPAR09f8*jSujkj@l>"2,^1HAl[mAHeJr(,'qP
%nu@6abuG(L=:&Em%\!P@aN`J&;Q]?fE'&FaQH@>Agk<0-9;lR4OP;(WSn7FERIi&kQD\S=&^t\*dtCB)+ctQRgmhT)Bunb9C56s7
%S\7C;DSi7+<rCgJh8Z?[\S[69erZfgXM2nb:3iT26>ef#DiUcNSEBQ3<5U"E9[?6)-="pb&iLD(A6504g3;N(DE_)(2I&RE3Dk&[
%k_*sqo+S^[2YRlrc*i2^n67l6?(H752_,#k_b8)=5\S&8FVh@FW$Wo&F.*t6Cr<`$.CZWr:`SV^EC4\4:/.*QT\<FV&0,!_g$&cP
%pr\#SZ(1MRKAZ/jW$89aX6.Ta?.k]YDl@qbp8*-Q0($*j!PdSnVR-T8gEm4@L>TlAQCZb*?%Bi^&utN%DHE54m:P_$@<`+/U=>hX
%<[P5dE+udU$!7W1_/.J9]6^[u?J.>%RRZ+kjJZ;"V-=mk!F%I!T+;FL*&>gS]ZGXe_G?GO/Z8b0DKP4?"mp>TcS&su_bfoSOW-L&
%"57fh\[9Oa#^4,SKM2,I,aE/$-C"ClLZKIeah_k>$(GMpW&o>IL2U%X/`#,FJ_Vr7/X7G;]S)U?UUd"$_N/<V5?:T"B"''$gkP(6
%So_`W9?7lD=L`6m:V^h7U7SIXJF9r_3K`'S>fpooQj(Wd[3eRP2s:N^_mB]k3X_2,LC.q:m($\7b%4mlKl/\:i&47`OB,0sB"'F6
%<p6t8"1;Rk<UgE6_fQ.]>Q?DTHkk^sC"LZ]fF?:_pWNg"dLSmaDO>l\"Eq[GAO:b$KM/p@.Bjbg],2nLS@ebI0O4IA_nc)u[0[E-
%\)AZ!SGDRanW7HKRgBK>hOD<"pAB&%`'`8?k;m&G_D\P1(p;.YpsEF&-N%P\FVB52(O^c=GfZU@@M@>;2D?7GaAT+o!9"F*W>!kM
%0R"Y\'(Ra>#JqMPOG0+G\Ad^iksB?/)E^<q6_*DOq^6T($0N\F=]RpI>XIRZL+H*k@"C0Y*98<:i=^IZn]C4Ji.Q-QBj`mTMF9Qo
%S@6dq4lI#WDX+Bf%Fj0+A@j-=CA2GZV;#qp8/*\MVd.Au-kX^C%@P>(DYs&kUl^?I$H+^p)uu0h*]=M$;RiTh$U:]4@J0_<$@/!^
%!hI1SA5<9?*HOmKYp>)J"&LK.@1s37%%#>s+V4Cp8,+fWQFMNbi=^0CK%BE(WWKDCL\qRR>e">0j&D'R/+Q)tfQ`dr_lOeZ%DRTi
%[r%Bq]l<Y8C'd`"?6_itUcI!k^MjpeWqWuW"2,`6\X.3O3hS@C-IQTs0&>[Z!XhBJL)m@Mf,RhR$bOA<2W6DGI1rbZ^hb\K*3N(s
%<Mt*u]*r#`lRQ$g(Nt^NL(Fq,iVPGC)ohO<=Qh?6I9-fi`UJp$7W4Y'#IRtK+,U6Z@bC)XjG%*uh\GL4Tpp=Y#_t)R&g0+A438"p
%)hos@JImU@lTtVm_pGB#JD;jFrL?-+6eJ_)!HQ*![L#1@;e@?fi=J%\$3W>A"_%VU%Dtr4!W`d4DP^Sr0'lt"5].E!Uo0sG3Woc-
%2hWdg"K2dIDB?j'i*/&,N<S4VhOG%:)b0:cn>"cpe,o^]f0&8okerFBU==ip,8Y_8gIqgm%E#WpE?o.CDShJ.\LUjiI9>5?ILA/R
%!YGncmo4hm0[+MM7t^5D\f5a`lLot9r(r4j?[4&*f5dm;G@;>2:ksb(2?g^3KOtuOfjU-cBXTd<T\7fjB;)dgQVe_VDppqbJTcD7
%0(a=`lm=8;:nD]A\*a6BPC8=@f'V*FYM")&_h$[!I42I?9dKkRNU!g1k&K$me$^:Jlr+Q<\Il[i[a,H1(WN[.%JGM&Q/"V16eF"J
%&ArITcu):$FPHcT5SQT<Rll6ML<J5DlG(!RIm1_LWS!)6[8I<^k_@GZ1r.9Gp3KPcf'oslWd]YBlVB2j7'dq;YV,8l=<P*sCjR(S
%2X`Ic$eB_6\Z2n!Y^)+[$#h\R?*Oon2FR-XK#t>,0EH3K0V4ClBLCFQC]S^6Y]-QA4%%Zo1(`.N$=!s,2Jc#!kSYRm*]>FuLPEm)
%Y^7>jHA8X8[nB9J/mQPg.IU*9:T\a&mafC\"\hG&kbX>Cf2D%R[A4Q'9GkH*X[Y\32&<uG>EsrSh1Ysafc\'h$^2'>1k]->M?<_,
%%P&1ec%=LK,Rk]M.8r$?>0>CfC>*+Um('q4,K!M-AI!bWGm#(!2f/VT%/]YsIS3V"k_?;QeGpo5,t,dRi4$(S"lTn01'/[f=D7.L
%>fs12Li3Q/-jhX`KFoP""b<oZj?S5_=K$7jOWhZA()6hpihQYW%\`2I!ChgJE9sO=Dda"j!ZWhd=q1oVLUA*-0"g:2E2'cL`&C*&
%Q>e;)7u?_i0TrG$(rNiP6uKC;ps$mn!c\WW(S%3$^R5Vu'!gV*k!sch>KW$#C::>J^K%Hb!1ZL47tlr/+Sr$%E7NNC">Y?4QZf!+
%?%];+!lSs)"%LSG`U8I'HT0p3IVpTAZie6HZ]U&Sf]F@$R6>s0Ff=P57C)/U%XV4cU"?9@X%$#^n!<pIh<q[>"cTc(";&]Pr:/qp
%>Vjg*/g-aJTAKO$q)jo2ANg1VM;%@bb3+idj&I6o"?B^#UIqs!6mj\iqM*10Y`9!0#eS6&X8HK]RrIW#Ns8GkpU?&a#0`^qapJ\>
%KO'WH6ofp+^l![<.q:+$UO<dWbS=?d&`muL#*oQLB@j6e;%B9-;h6'H0K3!^`8TQHZ9J?O%e!nX\YGU6(dNA#DHlnXD.jDV%ehl@
%b$b:pCD`^a#kM=*_Ao^JFq_$E)[Ze3_qmmKF*>YW^uQ'GWrtC`]Lm]qgK:nn;$W]AQ-)@Z_n?%Q6;BNf"IcCb!?oVEq?AM01:'0-
%5]bJ&UJ&)X??WJT'8Jb/jT_*Q4u:6;N=T2W>LrsbY50+ZZEbqnf$=b>!6j-f.=in&#lf9dr5r($5^!s8=<1C9)E=>o!-<<u'L=ES
%\*Qlr+,8q1n#,Xh],7UYDK.trY[J/43SY"G#s6@n$T[@N&E4Zrf2a,Seoc-_3#f$j@DfFMgJrB*\[i*fA(2-!c7p5H)0YC8EsAQU
%BWdXq\4ikRbTLc42_<Gg1fqn_,F0M>#%f,TS?-<(c'a>L&BbW.?kGsDVd4EHbnZ_O#\CO?i?k@S;^6kUML8T`A-fgF);o>`C(;e=
%BJ5')L>/EC^47Lk]TRecLFa;e)8c=MJOkOMa_8Pf>Ot&[j:6Z@jGojXr:]`EX_R\0lDg.>(`;]i<WumDj4K$/]rG?XN*I4gG2T.$
%$fZTVnrqac>V:hVT6=@o\*c;*IOrZDh'JBqi`3U9'Spb=KN,Z:?_'*D$c>uVc5-b+W7*u>M09h'aqO0FRrC7?^_pT$mXo,[kCe"_
%<"\212%nG-N'l.7ZJ14bB-(*s[U@m5jb7F\ip`LZkq6<';Ji]@eXLAt\N'f.k>:QC=s1bWg4cL+T>Ms;/1#F[C_>`)m<2HZcf&W6
%[+DdA=#Jc3G4ZaNG@A!r(TRU7%bK5Wjc2:]JYnbcqeCH3;VkI:4ud14(Po+Q>ml<Ggo#o%8eL3iI?5Rh#Wn'[KFJJh6V\%k2W;Ml
%As!udS0?EP$tfdZdIMQ!2eh_]-FFprk0iZr!@Y+l'8&Q*]u^2M*%9*`/j^Rr=/G0?[R&%:j,0tqNA/XAC%+'7,%I>Z`O.;l!$FfG
%ScAo;9b?Jp$W11%KMOGP#i^k=3$-?c">j@M::O6WBB_VA)H$eB_c8ciCUQm<.WQ]#k->Xa/ZJi&_i;Z0\GU=rYoiN?(/*<<]Ohg=
%cVnC0&^:m\7RVd@+m]D7JA*0@H6.lS#^`m&3mS`RXEC*nPYKIb8<t:0UD[[UAL`l+%@S+>Ar(>_cQ197E_A@\>H_7'*b'3/H9f$7
%DQl'9a!.);WLE$p5f9-s(?-.OLWP$06<;8%T8um$l`AS9Vo*ZXdt-i_YQ^.!gCXcP*C<X#d/iV#)1b&K6PtejJC5V55Zr1/45JTu
%`&W4eef=<'DXrNT28EGMlIG8=_M.mhe3org5M8;l_fdTgZ#`V]?[1f4<$-Z$RmXgZ(rDSh%MrCl>>!a$-rq\`'M&g@FBb/TdFeaq
%UZY!.hiu"bQ\Xb$iDIcoH%f8A;_De/2]06L/S.HGYa"cOG>#KRS!=k1`.e!f&Ep@/[)X?WD#-,eh,?MF,LU!^1DiPt=.)KoB8[>e
%Y\d</OUI?0oI)A!@0A[I/n^JQjb/ll.Yj)n)uN8Ebe^E^RD)P[$^2VmibTYGJ@O&i*['l-1k8\`$\irL[:-<NEtH98`uBnGh%Rr#
%bEd$u%>],9Y=_rSgo(\DV?^!V#DD]^*s*Ich!1X-Z:c0jE973fUr/JR;mPBINK.:s_%+C?<!>ksp`)1S4Z]6WGf#0)IE4KlS&l^=
%^/sG$J?rI@!CDRG421e_LF?^aP$S_:0)0*>B^c_Q]*JtNG]1C9'fd8Ll>WBJ>*/otV&Ui-@4Gq2m_`cQ<^:$B#j0>o3oG.jO7#ji
%@(=Xn,*u*FKHPFD`K+=\l=RpGe$*8#0KX(cR`EU+"[NT+J[YYtLMJ=*Bp$_-c/Zj:O)W>L)cD>OK]5f1bR^2$*R#$qOd;*c,..fu
%n*h@u`,g\E66=!]"im]BITW"[<I+;7h<#QA+1B9"k(gWOJanWe1*Re5d0#^+A!KV5SLXr4X7jMaq-c?J6HFfVr"8J'/J'%RfK>`]
%[@:#8[6Hh#4Mgr7+7<6'Y-":dB7$^Wdrn3O#rial$;[8&>$lHP<p$Q%>W3fB<`QG@)s9O/"DGgE\CCT=*9qZMM[;*#p1s63p"7EW
%3#lHRGm\!G5=6L#H!l@Z/`fme\*RnI[4N[F'J?1_Qo+r4F13c3*o+c]oAqb5Q93N+'<W'm#)qGJDB\L1gm8&8L*7)qp]dq>Ae;cD
%YdoH*o\]oS]FLDs!3a:PGo60]JbF(!q;Te?-]_5fX[kKb:<S(&E\fY)S/^m[-`Zm6SHNtU9A,G5h#Sd&]]C</P\O`a&CXN0mDkN`
%laj)a$`>ZN%(0?j9IX%UneAsP,;n0)RIJ5l+k'!b\)i&[UEdDpo^GPE]MN&PkAdL>ZErdhZ^HoT4XG6OJ*fL$fjWd<4r&#tgc&fs
%CNc@SQ#PZ/atcb'Q56'i)BNO1K3q84H'uS\&5M/nnE'_kKqKS+*OaeK8PbkY?)O6kC)FK[4Z4GoF*1=N&H@,gj83p:6k>b'nN>>D
%C-!AWB&5fFE*qe5m.<uWl)0hGPOWN"g62cf=Ci]IGWB<ZKD.pD!p%1E,e=,JN-MR<3uRTsQ^[L'4d'+GQjLlrLBoDogXj09*&sKi
%j`tF_lWN>><1-!j\h'3UGt9Fu7aJ4o?G^in:&euYk2A#M]G#ZpbBYI[:RT:QRW.*1XJVMsJcu^K0b<CM9e\`?6S-(G&GCQc1?QF0
%*_fHoR,]cZP\YA3[[_?f)@<1j_b(&\;s86WjIm*b,RdrH2AErFG%!KNo?b0,]0(Yoe(*k9=eaND]?:j920L?L,LJC08dYFHChCNK
%[Fc*=]\+oBb.HhC]"9g3nBIQ)9nkd_UVh@NGsJ4HXotY6B7,aJ#O_5!.&Pd]lsRW<oPaKRGG]-G&rC`CDZgkTF35#,C?PmjAd1Dc
%.kDS1?p;%NLC=U3YoHP@=>K0X!h?TaH".@"3o[7+N,GjM2-GglY:cXB=7l]De+8\.5)1i_K`n$c2MF<*J[qgFEOEGo\qLHWDYnNK
%Q.oLl):E(`Y4)Xbm"OT(DSjqE1Y7S(YcIf'p]`O-i,eBdVdt1-:Ce9t]oAD5(P8\fh(Ai21C;s-l#,4OKaAh;Js5^6^.aii)<][#
%OGNb3CZYPEF7o@hcUZ(4X(p&T0kf]l/Ze5&DI7hK"5qk3?S_I$:2:!Y,)Tsp=[['mhAYu@q(ZRTLSf_cL>`ZO$o7b>/*52sp64GG
%^909i_2`N@n1_^D*.U%rTJ[J`d&i_6g)cQnU$Fi<5R`3VkC$lUYCpuP"fB-Yb]nd2_*`:L*pS!Y;Xk:.AY5$'"6Y<-lR'Lkr;-W]
%6eDdK$.=U5pM,oN%n7D'PpXl%.TdcZ%#E%##GVAm`]k=%8V6Wo_B3+F8%IK88VTG<qclD_i$"n_n>"dAN[3X,FQY!eq/H3;X[pH)
%=!_)PUp`+4g*,f+Vb=OAkE^/QDHf`Q=/t5pEmrbF0R)7F$Z61W,#(lq>^Kd+#FIT$aC,*FqZ9%Mi6Oe:UEAjUM?LJB5B)`-GIZHF
%<!51)H7(G#eNY1l\^R%n#^r2pG^mZe2$n/U[)We4iTG?6i_@Gq,Xj3oW#a<Vr0QoJ]D)BbFX?Y@-+Fu`IUS6*\l*ckicQP/SkO)b
%UuO"F4/@ASG[Do58A)-ji<_`[m798Mi/hX^a88IEJX9bf\:c7B!=ifUF9u];/N9UKXqu27Ej'\9XOk8SE!`EKf/l3KQO%M#MfDOG
%2f*6u\rs5sLi0^8Z7cdFE!aukSuB1LK]eWk2!&t6`/Q!t*VMt^I3lLoOMU[VE[u4=gcgVRqaq&=KC:>D`q!_b(n]uZTEqGQ)16gG
%rV5srY,Vej,5/jFK1bVs>Rs?(>OhEMn,*aoO;<D;i-i+Ab];ZgGKT%bhHmM.^(S'hp@_U?p)t0oSHsVQSnq=OnI1915tnLH>gL32
%b4V3sXVhCm\6bk-L%s`!/\lq8Q_ns=*[98OnS,P=#q%4+Z,bTl_nRff/N5WIC:fm/"@$-?:J4:Hr+b`rdZ@a"k_$QAQSI%VRN$K7
%F8,m/;QYD;lLnr/ea<?]nG,b1"JC247m]$,I\qV"Hp?)1ES1/VS2,IU;_B:_5,=cG8jkk=YFm"d8@ui[#p7L$-6aO0QaRR/%r(bL
%0(XQTF5ur;YE\@H>2^^s3nR>e\-IN&2p(Ann,4Si*=bFrLjSX#I?VSZLRc.O@L%6^3"bo3lo6srlu73anSM[?BS_"KLCFb8#IZF@
%,d2jGfFq[(bu]#*4kNEf8QpmY;[?eBc&V<Lq=]*=9&au$\`4?3&$:/iaWg+=coT6FIE<sZCWp*eUm&G$k,?!1pJ:MA75!C[Ys@Ud
%2M^eo\Xf[2P"")PY[hlQW+D.A+hT<Y"?5=P>>UGmFbice;/Sc62mW3hn('t63nP6;FtNm=GAtIP8^fJ&fP<7%?<,\A;XUT(P.a>N
%KWGYm9?K?+@=6^j5_bUs!^a.<,tT,[];q7gU\fL!6c+oP0B#0>[HE3d=bCn1-mu'J]uud%X2F]D2mULop)8?kA9Dj0e'7/sk8&mK
%"nHBu$\]_k_.co4Hk1Dr1<K8u4=&V$/o;qmKF_G,O7oZPM!WOkcQmo-*B"3G7(/YGgsQE%&GG$M,"]WV5OUkiK@=jR,J1=B>H$N*
%Eg&P=F0h"=7UIGZ*ut;=o%(mj2DPit:61&=riqRSTt,&N+B39@[EJ8?m=hqu)]8p(cT'&AYg$;@Y1`s,aLg^nQGfh&*u6jYY"PTB
%'?i=$'WjsP#CGr!8c%B?%8dXQlMF)u6bD5]RhU=9gIo_HTSGG=m]^\P=OY+_n0OUGc7&kX)SO%ZjF!>,Af?J@VR`W:p!=DuPGERC
%do:tRiHhht7=r&3#.$i,_fn<F-K464ZR?s!)0IHM.JN;OQrf[g@1S\9<@>,jFb(IBam@Akna*&X*U4h(4+%@6S2KS$^$<IGh/0lg
%gL2(kE&HGu+T`aS4W]mLG-F\<#D*oFMM*S1CX,LdLV_^HQY`Wr:U`0M_i;kMUKJU),L/l6Y_VAq(Qpk=\Rf,Hh*r4N%;f8^@G^Eb
%cB0%GDYii&^s-Sa!<Zsf\L$J\:;J'+2`*\OQ6:Bbp'P;]gu0_['l)1Agb<8[Cq3WZRjVIc[XirHo,T3W*SUJ+3a)geAp3BuDR`a-
%EOq)N\<j_FgJD>aI.PZ*bRVn,Q6#J>o`2\9Fm68L#)p@ad.H7#G+c;riDdEHLd5n-N(+%uZUY+IJUEpak9FdsQsM<K_hDk_Cek5S
%LLu++$-J$?"[LF%1R`muj[5O:m/kmV_gZ>Q:_A:#]VPqWLN^`-XtgU]n=?jp@IQ$4+DE9kG3aMY4Z)'6KCkkJCOHo)S\p,RLTQtP
%ICOrt9ON9^mTN-)6^sg?:9Zou$S#7#Y"t-J!l<-l,ol]/<?WJE@gP`F4Bt3qECdVJ'A98i\XI$R&"5XCE!#2i1GY.^bepS2"XRDE
%jY#o@ITW#]^m]BNk<h&"O37dHIWo3_Zd\R"b!2?%(JFQ(18Ci5Wd@gr2/HPmkP4b[DXZk6[@@NJ?ld</g9fCF&Am,K1'lj_,(eUD
%).uToh;MO-_QpAa`@N%^*HiSkSGB&op!EVm#%8%/:t5])3t4k+lsU^ITR@-G>`&O@ma->\o@0dd=N]1ak>p``U<Mt[HanaqUe*)G
%$b<.HYTZ*o3=fiEquFXPT!1aG\p,"T2AoL:Q?fI<M(jieHV3Sclp,7%\+$B0C;Ot8&_XBkY$#=5_G]r';g,sdqoMkIKpa`>;<V5*
%@=-2sU7F9h5fG"/o:C<HEAQ-g.8%!2/N^@eRJbS1?-T7T\)Rl&flg05[NCfuD0OseDMR/Vai'oB^V%ZA<&+dNKFfLcT%VTG?ac&h
%Ib5UnhZeagc@nX$>([6J2f6SoLR(t:g"s#q\*VTsiI$4LF)!u8,ttEoC:_5A09W!FKdSR2\s%*Y&CETDBj@$Dfc/;2WcSSAL8Etb
%9&Y&/0(Le^Nu(o<*a7HiV;tnBZoa<b>]Cfg>Zpm/8@o6ill;"kB\6V3Q+`[Vq'DP"D-*!9la6[PX)PG'X?s4YOAN5b6B6@J28k[%
%*E'"oLVC2N+fCh[6o8P4kR7psO<-`5j\A*dF[g,c0m@BL2+pICY?IfHcs@uq]2CO1ph@VAlo0MV_r,0+bIu+K1TB`2E,)tX3DBu>
%BW=s[!O??f!O?@)2>&`(>q(Q9CX0S<jN\q9*/u-'T(%T2c_25S)GNr:1h"2CTc-XJ]]otdkHfEU8)ah8jj\:J7\/oIQntqh8J>`5
%n0F=SL%?g=3t@\,+W2Z>V-BD]<OCeJ+iQ!Ga.]\!9M!^V?DP3#Yb:-Gf9^GjfBH-ob0s58NhV9?U5A4dP?:T37,($)G*jJ"jA'J&
%?#nEJ?KHl`72&ERFtm9CVpue'DOac%O9[`J8=oCEO78u=6=$>NLUol&;dH-_V]83ABW=]f-/DVD*eg$:)?l)/Q.aY7b2/q"ok`(E
%_M?UA+TQ!;q^/MVP]upoR1N3?SDrqo;+.bacsbO#2][(tg&oMW\n)s]m_XkJ/du8D-=#8o%0iK\BN?FH53"83TRsZnc>)L+B:AcR
%Fl3muONLRu.HQlmA)p+cn')=e<6J5=mO=LnDN3^k`3:-\adHeR+U2CK#s*koAN??BnV/0B2M@nFp`R!G"s:cA57dtV^A8$t#]o8i
%cou8UJJa2T7$+P?1a9"j4H6;j8cZD1hgaU)"C9EWn2+U<,r/+&D4_^!_XiTC\R/=bbT30l*Q.).70J:9lnh*q[,0;JJ8t;8dNr.r
%Me:iY!7?apU4N!2)3</k9H9%<p3![@qk4J#&)Shfaf=br[F1kAZQ6C`9tVARZk(EQH>87dBGQWV5l:&QkBti$33N(iL5@^pV?Yn4
%VMM7,(l)]H;%9lCf9HHa]p,GF#VaQ,<&VZS>_gq2-I*l?Cak]o+W#ek>V]*r)^Qu^DNo7?S5QN$:FT)_:?<Ig.HR/jELiqWojOm^
%@,+e*gaMt2;R^6HE*OpEaA^6L'!)W$_T,)s<dCN0[iJZ6PnMp>D2<.EG.ACI2:!@o5/MH]5o3$13$J"$MlNZN_U<;o"jSpDObWXd
%4XDZ8Q`qUE$XYrl9"Pd;C$,cOW]>Wm7KC@Q;sr#2W38R06:Ct%I0hn]]Zd;EP]HG/53HEMI1)Wcl*ddmdJsUi<8K/4)r;pt9\<ZN
%2td!Rbj9Do]PNQdVS.A3Ljn"RLPF*$ZE)f_:fjtt2Vp2f2_,1W[risHS431[3aU#@kTITn]Ye<,f]?l-P]Cod<4eQF^<L`W3/(-d
%6pBrZ/khlL-T1BV1^aD$#^pC+VURm+i&:iZ#ToL(VDSK@1lHNm#_$G&3mg4gi&@kYU*':s>!qr"[r?&jiC3N/ZXAe/Zt*dD_>2H:
%>3?MNm:J8.=6,7($1hd,_j?J=%hhi&LBF%WHTcXEDGNjkVkn4Uaofe7V*)MqfJRV3q!HH5cA-!tVCd$acF0#]I:rsgDW#nU(@^'&
%U`5L2PRi,UV7M('@A;Kd9?<$J/nD/T)Kr^A^lm@Sf`o<K9;nurP-Yr;)F>F4KbH?u4u<Wp]S)gCX:^!<0&u%u<N&R"$`R>Fl7\bJ
%-m+nkVV)O=ckN>+JiA>LP6U&7;j:0IGXJffU^"\kB(TgIKFc>keJ]VORWuOb#ToM_JH#*ds7lp6/K-*h(H'_bZuNN]!tW?,8Z)d1
%Kn8TZ$)^6[AY'eL(G>+3nRhPmpH57A",t<Vc,A_;DnpDb'CadM\(QBrStCK&@dk_&BBCDg;IfHQ3Fs''i0?-gV]pC<GSfpcXp_5!
%rL:G:Ck.4j%n<DH)#03$6ci0.F*JPt?lpZs+*Q?9M"!T=+l-%[d`pXicND16,uXoK^'&cZ9%f?_ol.&a45cT6?bZR?A@GPW4:oa]
%\/RdW/:RNBouV)u9b9V#R:,5G%b&n#h"J*_HamI=7M6!PZ,k2`E+e','$@0@j%]C^PURr,65]qkaMoq/_7t$;4m[eU2<_'fe7pVt
%;r8Md9J,D_&oo`$,3Nmu[qkILb$-#:hJiO80t*>:a_n8;4LLW!-r29NfgiM1V]C@DBF\Mor8YKT*p2+AhKES@VkkA8O1V6YaA+le
%S^,e7`aMM2oV`C\FBcWPP55"c'54L?[46&+%\E5'A^FV/CNl%a:O,-C8>CI:H.bM7-\b;<%V?3>RC?m!EiKZ3IKG@lZ7sOVO4Clt
%`Z_rCcPHu<Lu3A!TnKe^2sj>nQ+a0]m#LejEl2hZ@79lSJ,K*JT6hHq5AZOg^J)YM$),'gFB=as3@'@HeC=$,=3[t?VYnes\?Na/
%*pCup)-*a'VdQ?uk7jkc-7"OJc0%a+k6ml!L>c+m.HO0IWo9ChV])_LT5&UQRH$;kc^.tQ_]KX<@$MT.i1FdL?L[k5rpU@F)#iH/
%H9Y_"_^kQmCHCe'n-?o][9eOLdh6gTb,Tf6=]IPchb]G89=c$EV-=\70DuA9LooPP!:c>;-:$)iBii?oS+_qeeifhA>OE<h+m$q=
%Dn>P:f2H?Loc]9X8a?,W@q#;Q2@Z*/Uo.IuWm;kFF.SQ;dtDL:[Ek0_&73Val"74dAsM#@0WK?i\Rf*9]up`@G%![SW>X'"71Ln$
%lAHhA/u3O4oI8lo3Mi6lVKAlfVNb<%nM!C[9"0JOF>LBD19!:1>Ffb+\%:skEYhV67V<^Xc.'WZ#=n06&5LP8>XG0.(QPuk9=Yq2
%;5Ba?.T1/i5\;oe&Am,`a;>.@)E6Egr3?j.8iM'e0b0\E.ci.c9">>_n2*:(VoT-lA]em-c<_IcSC'HJr:pWiJON$6?F!u_+'Gq'
%F:bB_7!S:j%04%#XgS4S@QnL6JnW/OElT??2cr`_K6NTd8[l^=aZ8Q6TAIE3j:R]PVS*Dme"2TAdGK%i3CR4EO0$iQD;qWfW_U`3
%h<N1WI?]U/0CE5&5C<e%Q]\#9+n&Io,@7u:r4sc)'R!Jo6ZJF]l'WMiS!dtWDP``tPYXjC3MfrnEPCf!mbilr"hVhNZBH3i9>`,C
%S9=]k1uGkN3T_l6'#\L!c/ZbL5ED-cT>Y]7gWgn*gK\`4_N(XCOn7O*S*#X(SuRO7N1N#:gH9I*Z)ZEnKMPD!X;Z*c6Vp6`RO=+;
%oX#H`<\rTsRk(Wk+a'hRF2_k3;pL53.A'*1dkI;)T+<2(;m9OVRl1^lO't$0DD0b@fsGDU<[<s2Q%n7^h*@J<T."RqMK9r1hFnNh
%9/r_Qoc2EJ.B1!_8npRAj\*W)BpWeQp^!_t3D]H=Emp,?$i:$Z:4mRZH+rtLWF8kn://=K;KD$qPaq96gnu-$m%i)?<8#FC%THTU
%e(epknhb9Tk8rNXR-p*WO$=^05=H;s^,f8gaAJTgE"gtaiF?*.kQ`3mZY2SBmQ^#A\(Fh6H_CB&Gn>#M;<qpb5-=`S$YTpgBkOQJ
%;96s[3=VWINRNnkeOVc;<Ad.de\cR_WZ(!B)KVd7J$G6V;e[[&cbM@A5]#K8eF+A74)L8Rp>R5UD&_e05#4::F3(>L?(5M=\+<XC
%B7I1oB@k1CRd^V7)#pggM2(2^$(hG(N.9JL@qa/eO,)k&\*QKuWr.76F&U!E_WTI(e'91Cpjga#J8c'KSq7`JgS\4=,^\D43);,G
%?K-4`M,W5jId;bLjcHbiLB\dTIL.*sHU#_'QWE7d+k_oD;m&tpOnMO=jlm6A8!/#lYj@DsXrg*de]dT+L\@K8]2D[DGN"JRqPLsK
%`hm;pZ;EF<#ql&plnHJHG2'=&lX%k<q]5%-(+D*shSq_9`]^/H9uMMAo38t_0>gO]k7],5Y5`sX-_0RZTfQ!F1?f4tH1hKCl\F.R
%28-'TBu5,gS=Md@O1Vh4Spb<+>BX0g<ISTlUG@\kp6:V*c@1_m#-&b4b14W`H`A9f/C!pSep^;0/9.NZ&jE``SY6V'T_3rL>48Qg
%gu<Fq6>V9hB+l2u;p`N_'&"$MoC35l5L-11\2+o;LVFh_c[/:@2aC^dK7#"UbLssW4SDjiPUEQtV*%uh]bG0mB.sl`90t:TI85d,
%4Y9=.:NoA`L?N;Q8sO;;buSo$M]KPB-"O&:@)XabW&5`#6T$MYg.V2\D?`GKs81P5rceBbiU#IQRX0uLrp\YbN-!KorGs%Am(`KT
%cL^u$)`[9#s7Z3=o`)DXhg<s0s3OF0)AQf5XpK4*Z@3NDpHL,$s%i?thuE*ds8DD9pW(&KO6s^^_a"0^J,Jp<rUm@DpNO@YrqN,c
%r0Ldjb?t;I^]*KL^]+4VJ,.iks3Iluq"$`Mo=t4hTE"T9s8C\JJ,%2oJ,S-:rl\YurPROlkJ-rL-+Pcc_]SpR&-(lYr;Lp?%iCB`2u~>
%AI9_PrivateDataEnd
